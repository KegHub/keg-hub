{"version":3,"file":"useTheme-3225c6f8.js","sources":["../../../src/theme/default.js","../../../src/context/reThemeContext.js","../../../src/hooks/useTheme.js"],"sourcesContent":["/** @module theme */\n'use strict'\n\nimport { deepMerge, isObj } from '@keg-hub/jsutils'\n\n/**\n * Holds the default theme which can be set with the setDefaultTheme helper\n */\nlet defaultTheme = {}\n\n/**\n * Overwrites the default them with passed in theme\n * If merge is passed as true, will merge the current default theme with the passed in theme\n * @param {Object} [theme={}] - Theme to overwrite of merge with the default theme\n * @param {boolean} [merge=false] - Should the passed in theme be merged with the default theme\n * @param {boolean} useDimensions - Should subset theme that matches current dimensions\n *\n * @returns {void}\n */\nexport const setDefaultTheme = (theme, merge = false) => {\n  // Ensure the passed in theme is an object\n  if (!isObj(theme))\n    return console.warn(\n      `setDefaultTheme method requires an theme object as the first argument. Received: `,\n      theme\n    )\n\n  // Check if the default theme should be merged, or overwritten\n  defaultTheme = merge ? deepMerge(defaultTheme, theme) : theme\n\n  // Return the newly set default theme\n  return defaultTheme\n}\n\n/**\n * Gets the default theme\n *\n * @returns {Object} - the default theme\n */\nexport const getDefaultTheme = () => defaultTheme\n","/** @module context */\n'use strict'\n\nimport React from 'react'\nimport { getDefaultTheme } from '../theme/default'\n\n/**\n * Creates the initial theme context\n */\nexport const ReThemeContext = React.createContext(getDefaultTheme())\n","/** @module hooks */\n\nimport { useContext } from 'react'\nimport { ReThemeContext } from '../context/reThemeContext'\n\n/**\n * Uses the useContext hook from react to get the current theme ( Value prop of the context )\n *\n * @returns { Object } - Current theme\n */\nexport const useTheme = () => {\n  return useContext(ReThemeContext)\n}\n"],"names":["defaultTheme","getDefaultTheme","ReThemeContext","createContext","theme","merge","isObj","deepMerge","console","warn","useContext"],"mappings":"kKAQIA,EAAe,GA+BNC,gBAAkB,kBAAMD,GC9BxBE,mCAAuBC,cAAcF,qnFDUnB,SAACG,OAAOC,iEAEhCC,QAAMF,GAOXJ,EAAeK,EAAQE,YAAUP,EAAcI,GAASA,EAN/CI,QAAQC,yFAEbL,qBEdkB,kBACfM,aAAWR"}