{"version":3,"file":"renderCustomOrDefault-afda50d9.js","sources":["../../src/react/handleRefUpdate.js","../../src/react/isValidComponent.js","../../src/react/renderFromType.js","../../src/react/renderCustomOrDefault.js"],"sourcesContent":["import { isObj, checkCall } from '@keg-hub/jsutils'\n\n/**\n * Helper to handle updating a ref based on its type\n * @param {Object|function} ref - Ref Object to update\n * @param {*} update - Value to update the ref to\n *\n * @returns {Object} - Combined child components\n */\nexport const handleRefUpdate = (ref, update) => {\n  // Update the ref based on its type\n  return !ref\n    ? update\n    : isObj(ref) && 'current' in ref\n      ? (ref.current = update)\n      : checkCall(ref, update)\n}\n","import { isValidElement } from 'react'\nimport { isFunc } from '@keg-hub/jsutils'\n\n/**\n * Checks if the passed in Component is a valid React Component\n * @param {*} Component - Item to check if it's a valid React Component\n *\n * @returns {Boolean} - True if the Component is a valid React Component\n */\nexport const isValidComponent = Component => (\n  isValidElement(Component) || isFunc(Component)\n)","import React from 'react'\nimport { isFunc, isArr } from '@keg-hub/jsutils'\nimport { isValidComponent } from './isValidComponent'\n\n/**\n * Checks the passed in Elements type and formats it so react can render it\n * This allows for dynamic rendering of prop children\n * @param {React Component|Object|Array|string} Element - Component to be rendered\n * @param {*} props - Object of props to be passed to the Element\n * @param {React Component=} Wrapper - React component to wrap the Element\n *\n * @returns {React Component|Object} - rendered React Component\n */\nexport const renderFromType = (Element, props, Wrapper) => {\n  return isValidComponent(Element) ? (\n    isFunc(Element) ? (\n      <Element {...props} />\n    ) : (\n      Element\n    )\n  ) : isArr(Element) ? (\n    Element\n  ) : Wrapper ? (\n    <Wrapper {...props}>{ Element }</Wrapper>\n  ) : (\n    Element\n  )\n}\n","import React from 'react'\nimport { isValidComponent } from './isValidComponent'\n\n/**\n * Validates a passed in component, and renders it\n * Renders the default component when Component param is an invalid React component\n * @function\n * @public\n * @export\n * @param {Object} Component - Custom component to be rendered\n * @param {Object} DefComponent - Default component to be rendered when Component is invalid\n * @param {Object} props - Props to pass to the component when rendered\n *\n * @return {Object} - Rendered React component\n */\nexport const renderCustomOrDefault = (Component, DefComponent, props) => {\n  return isValidComponent(Component)\n    ? (<Component { ...props } />)\n    : (<DefComponent { ...props } />)\n}\n"],"names":["handleRefUpdate","ref","update","isObj","current","checkCall","isValidComponent","Component","isValidElement","isFunc","renderFromType","Element","props","Wrapper","React","isArr","renderCustomOrDefault","DefComponent"],"mappings":";;;;;;;;;MASaA,eAAe,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAE9C,SAAO,CAACD,GAAD,GACHC,MADG,GAEHC,aAAK,CAACF,GAAD,CAAL,IAAc,aAAaA,GAA3B,GACGA,GAAG,CAACG,OAAJ,GAAcF,MADjB,GAEEG,iBAAS,CAACJ,GAAD,EAAMC,MAAN,CAJf;AAKD;;MCPYI,gBAAgB,GAAGC,SAAS,IACvCC,oBAAc,CAACD,SAAD,CAAd,IAA6BE,cAAM,CAACF,SAAD;;MCGxBG,cAAc,GAAG,CAACC,OAAD,EAAUC,KAAV,EAAiBC,OAAjB,KAA6B;AACzD,SAAOP,gBAAgB,CAACK,OAAD,CAAhB,GACLF,cAAM,CAACE,OAAD,CAAN,GACEG,wCAAC,OAAD,EAAaF,KAAb,CADF,GAGED,OAJG,GAMHI,aAAK,CAACJ,OAAD,CAAL,GACFA,OADE,GAEAE,OAAO,GACTC,wCAAC,OAAD,EAAaF,KAAb,EAAsBD,OAAtB,CADS,GAGTA,OAXF;AAaD;;MCZYK,qBAAqB,GAAG,CAACT,SAAD,EAAYU,YAAZ,EAA0BL,KAA1B,KAAoC;AACvE,SAAON,gBAAgB,CAACC,SAAD,CAAhB,GACFO,wCAAC,SAAD,EAAgBF,KAAhB,CADE,GAEFE,wCAAC,YAAD,EAAmBF,KAAnB,CAFL;AAGD;;;;;;;"}