{"version":3,"file":"getTextFromChangeEvent-1e047a73.js","sources":["../../src/getters/getChecked.js","../../src/getters/getElementLayout.js","../../src/getters/getImgSrc.js","../../src/getters/getInputValue.js","../../src/getters/getOnChangeHandler.js","../../src/getters/getOnLoad.js","../../src/getters/getPlatform.js","../../src/getters/getPressHandler.js","../../src/getters/getReadOnly.js","../../src/getters/getTarget.js","../../src/getters/getTextFromChangeEvent.js"],"sourcesContent":["export const getChecked = (isWeb, isChecked) => {\n  return { [isWeb ? 'checked' : 'value']: isChecked }\n}\n","const defLayout = { top: 0, left: 0 }\n\n/**\n * Helper to get a normalize layout location of the passed in element\n * @param {Object} el - Dom Element to get the layout for\n *\n * @returns {Object} - Layout of the passed in Dom Element\n */\nexport const getElementLayout = el => {\n\n  const rect = el.getBoundingClientRect()\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop\n\n  return {\n    top: rect.top + scrollTop,\n    left: rect.left + scrollLeft,\n  }\n}","import { isObj, isStr } from '@keg-hub/jsutils'\n\nexport const getImgSrc = (isWeb, src, source, uri) => {\n  const imgSrc = src || source || uri\n  const key = isWeb ? 'src' : 'source'\n\n  return {\n    [key]: isWeb\n      ? isObj(imgSrc)\n        ? imgSrc.uri\n        : imgSrc\n      : isStr(imgSrc)\n        ? { uri: imgSrc }\n        : imgSrc,\n  }\n}\n","import { get, isFunc, isArr } from '@keg-hub/jsutils'\n\n/**\n * Gets the correct key name based on the platform and available onChange functions\n * @param {boolean} isWeb - Is on the web platform\n * @param {function} onChange - handles changes the value\n * @param {function} onValueChange - handles changes the value (Native)\n * @param {boolean} readOnly - Is the the component read only\n *\n * @returns {string} - Name of prop key to use\n */\nexport const getInputValueKey = (isWeb, onChange, onValueChange, readOnly) => {\n  return !isWeb\n    ? 'selectedValue'\n    : isFunc(onChange) || isFunc(onValueChange) || readOnly\n      ? 'value'\n      : 'defaultValue'\n}\n\n/**\n * Checks if value exists, if not, tries to get the value from the children\n * @param {Any} value - Value to use\n * @param {*} children - Children of a component\n *\n * @returns {Any} - Found value\n */\nexport const getValueFromChildren = (value, children) => {\n  return value\n    ? value\n    : children\n      ? isArr(children)\n        ? get(children, [ '0', 'props', 'children' ])\n        : get(children, [ 'props', 'children' ])\n      : ''\n}\n","export const getOnChangeHandler = (isWeb, onChange, onValueChange) => {\n  return { [isWeb ? 'onChange' : 'onValueChange']: onChange || onValueChange }\n}\n","export const getOnLoad = (isWeb, callback) => ({\n  [isWeb ? 'onLoad' : 'onLoadEnd']: callback,\n})\n","const platform = process.env.RE_PLATFORM || process.env.PLATFORM || 'web'\nexport const getPlatform = () => platform\n","import { isFunc } from '@keg-hub/jsutils'\n\nexport const getPressHandler = (isWeb, onClick, onPress) => {\n  const action = onClick || onPress\n  return (\n    (isFunc(action) && {\n      [isWeb ? 'onClick' : 'onPress']: onClick || onPress,\n    }) ||\n    {}\n  )\n}\n","/**\n * Checks if the passed in props equate to a disabled value\n * @param {boolean} isWeb - Is on the web platform\n * @param {boolean} readOnly - Is the component read only\n * @param {boolean} disabled - Is the component disabled\n * @param {boolean} editable - Is the component editable\n *\n * @returns {Object} key / value pair of readOnly state\n */\nexport const getReadOnly = (isWeb, readOnly, disabled, editable = true) => {\n  const key = isWeb ? 'disabled' : 'editable'\n\n  // Get the inverse of the props for native because editable works opposite of readOnly\n  const value = isWeb\n    ? readOnly || disabled || !editable\n    : !(readOnly || disabled || !editable)\n\n  return { [key]: value }\n}\n","export const getTarget = (isWeb, target) => {\n  return isWeb && target ? { target } : {}\n}\n","import { get } from '@keg-hub/jsutils'\n\n/**\n * Returns the text value from the event object in an onChange callback for input.\n * The text is a different path/property depending on the platform.\n * @param {Object} event\n */\nexport const getTextFromChangeEvent = (isWeb, event) => {\n  return isWeb\n    ? get(event, 'target.value') // web\n    : get(event, 'nativeEvent.text') // native\n}\n"],"names":["getChecked","isWeb","isChecked","getElementLayout","el","rect","getBoundingClientRect","scrollLeft","window","pageXOffset","document","documentElement","scrollTop","pageYOffset","top","left","getImgSrc","src","source","uri","imgSrc","key","isObj","isStr","getInputValueKey","onChange","onValueChange","readOnly","isFunc","getValueFromChildren","value","children","isArr","get","getOnChangeHandler","getOnLoad","callback","platform","process","env","RE_PLATFORM","PLATFORM","getPlatform","getPressHandler","onClick","onPress","action","getReadOnly","disabled","editable","getTarget","target","getTextFromChangeEvent","event"],"mappings":"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"}