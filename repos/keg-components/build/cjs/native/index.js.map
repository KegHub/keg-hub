{"version":3,"file":"index.js","sources":["../../../src/hooks/useKeyPress/useKeyPress.native.js","../../../src/hooks/useScrollIntoView/useScrollIntoView.native.js","../../../src/components/filePicker/filePicker.native.js","../../../src/components/form/checkGroup/checkGroup.js","../../../src/components/form/form/form.js","../../../src/components/form/option/option.native.js","../../../src/components/form/radio/radio.native.js","../../../src/components/form/select/select.js","../../../src/components/form/slider/slider.js","../../../src/components/form/switch/switch.js","../../../src/components/link/link.js","../../../src/components/list/scrollView.js","../../../src/components/list/sectionList.js","../../../src/components/sidebar/sidebar.js","../../../src/components/svgIcon/svgIcon.js"],"sourcesContent":["/**\n * Native stub - key presses aren't applicable on native\n * @returns {boolean} false\n */\nexport const useKeyPress = () => false\n","import { noPropArr } from '@keg-hub/jsutils'\n\n/**\n * Not yet implemented in native.\n * @param {RefObject} ref - ref to element\n * @param {boolean} shouldScroll - if true, keep ref.current visible\n * @param {boolean|object} scrollOptions - options as defined at\n *    https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView#parameter\n */\nexport const useScrollIntoView = () => {\n  logData(\n    'useScrollIntoView is not implemented for native platforms yet.',\n    'warn'\n  )\n  return noPropArr\n}\n","import React from 'react'\nimport { View } from 'KegView'\nimport { P } from '../typography'\n\nexport const FilePicker = props => {\n  return (\n    <View>\n      <P>FilePicker Not yet implemented for native.</P>\n    </View>\n  )\n}\n","import React, { useCallback, useImperativeHandle, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { View } from 'KegView'\nimport { Text } from '../../typography/text'\nimport { Checkbox } from 'KegCheckbox'\nimport { useStyle } from '@keg-hub/re-theme'\nimport { useClassList } from 'KegClassList'\nimport { useChildrenWithRefs } from '../../../hooks/useChildrenWithRefs'\nimport { mapObj, noOp } from '@keg-hub/jsutils'\n\n/**\n * Simple header for CheckGroup, without a checkbox\n * @param {Object} props\n * @param {string} props.title - title of header\n * @param {Object} props.style - style rules to apply to the Text element\n * @param {*} props.* - remaining props are passed to the Text element\n */\nconst SimpleHeader = React.forwardRef((props, ref) => {\n  const { title, className, style, ...rest } = props\n\n  // add no-op handle here just for consistency with other header\n  useImperativeHandle(ref, () => ({ isChecked: undefined, setChecked: noOp }))\n\n  const textStyle = useStyle('form.checkGroup.simpleHeader.main', style)\n  return (\n    <Text\n      className={className}\n      style={textStyle}\n      {...rest}\n    >\n      { title }\n    </Text>\n  )\n})\n\n/**\n * Header for CheckGroup, with a checkbox for select-all functionality\n * @param {Object} props\n * @param {string} props.title - title of header\n * @param {Object} props.style - style rules to apply to the header\n * @param {Function?} props.onPress - handler for checkbox press\n * @param {boolean} props.checked - initial value of header checkbox\n */\nconst CheckboxHeader = React.forwardRef((props, ref) => {\n  const { title, className, style, onPress, checked } = props\n  const headerStyles = useMemo(\n    () => ({\n      main: style,\n      content: {\n        right: {},\n      },\n    }),\n    [style]\n  )\n\n  const onChangeHandler = useCallback((_, val) => onPress?.(val), [onPress])\n\n  return (\n    <Checkbox\n      RightComponent={title}\n      rightClassName={className}\n      styles={headerStyles}\n      checked={checked}\n      onChange={onChangeHandler}\n      ref={ref}\n      close\n    />\n  )\n})\n\n/**\n * A group of checkbox items with a header.\n * Will include a select-all checkbox in the header IF you define the children as a function (@see story examples)\n * @param {Object} props\n * @param {string} props.className - css class name\n * @param {string} props.headerClassName - css class name for header text\n * @param {string} props.title - title of the group\n * @param {boolean?} props.initChecked - initial checked value of the group header box, if you are using it\n * @param {boolean?} props.showHeaderCheckbox - true if you want a group header check box, with select-all functionality\n * @param {boolean?} props.showHeader - true by default. If false, hides the header entirely, only showing children\n * @param {Function?} props.onGroupPress - handler of header checkbox\n * @param {*} props.children - components in the group (@see CheckboxGroup.Item)\n * @param {Object?} props.styles\n * @param {Object?} props.styles.main\n * @param {Object?} props.styles.header\n */\nexport const CheckGroup = React.forwardRef((props, ref) => {\n  const {\n    className,\n    headerClassName,\n    title,\n    children,\n    styles,\n    initChecked = false,\n    onGroupPress,\n    showHeaderCheckbox = false,\n    showHeader = true,\n  } = props\n\n  const groupStyles = useStyle('form.checkGroup', styles)\n\n  // get children updated with ref props, and the refs themselves\n  const [ childrenWithProps, childRefs ] = useChildrenWithRefs(\n    children,\n    showHeaderCheckbox\n  )\n\n  // callback that manages select-all behavior on click of the header checkbox\n  const headerCheckHandler = useCallback(\n    checked => {\n      onGroupPress?.(checked)\n      mapObj(childRefs.current, (_, child) => child?.setChecked?.(checked))\n    },\n    [childRefs]\n  )\n\n  const Header = () =>\n    showHeaderCheckbox ? (\n      <CheckboxHeader\n        className={headerClassName}\n        style={groupStyles?.header}\n        title={title}\n        onPress={showHeaderCheckbox && headerCheckHandler}\n        checked={showHeaderCheckbox ? initChecked : undefined}\n        ref={ref}\n      />\n    ) : (\n      <SimpleHeader\n        className={headerClassName}\n        style={groupStyles?.header}\n        title={title}\n        ref={ref}\n      />\n    )\n\n  return (\n    <View\n      className={useClassList('keg-check-group', className)}\n      style={groupStyles?.main}\n    >\n      { showHeader && <Header /> }\n      { childrenWithProps }\n    </View>\n  )\n})\n\nCheckGroup.Item = Checkbox\n\nCheckGroup.propTypes = {\n  className: PropTypes.oneOfType([ PropTypes.array, PropTypes.string ]),\n  headerClassName: PropTypes.oneOfType([ PropTypes.array, PropTypes.string ]),\n  title: PropTypes.string,\n  initChecked: PropTypes.bool,\n  showHeaderCheckbox: PropTypes.bool,\n  showHeader: PropTypes.bool,\n  onGroupPress: PropTypes.func,\n  styles: PropTypes.oneOfType([ PropTypes.object, PropTypes.array ]),\n}\n","import React from 'react'\nimport { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { get } from '@keg-hub/jsutils'\nimport { useThemePath } from '../../../hooks'\nimport { useTheme } from '@keg-hub/re-theme'\nimport { useClassList } from 'KegClassList'\n/**\n * Form\n * @summary Custom button component. All props are optional\n *\n * @param {Object} props - see formPropTypes\n * @property {String} props.type - default ''\n * @property {Object} props.style - custom style\n * @property {Function} props.onSubmit - function when form is submitted\n * @property {Object} props.children\n * @property {Object} ref - reference to native element\n */\nexport const Form = React.forwardRef((props, ref) => {\n  const theme = useTheme()\n\n  const {\n    children,\n    className,\n    elType,\n    style,\n    type,\n    themePath = `form.form.${type || 'default'}`,\n    ...elProps\n  } = props\n\n  const formTheme = useThemePath(themePath)\n\n  return (\n    <View\n      accessibilityRole='form'\n      className={useClassList('keg-form', className)}\n      {...elProps}\n      style={[ get(theme, 'form.form.default'), formTheme, style ]}\n      ref={ref}\n    >\n      { children }\n    </View>\n  )\n})\n\nForm.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  onSubmit: PropTypes.func,\n  style: PropTypes.object,\n  type: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { isStr, isNum } from '@keg-hub/jsutils'\nimport { Picker } from 'react-native'\nconst SelectOption = Picker.Item\n\nconst useable = item => (isStr(item) || isNum(item)) && item\n\nconst getVal = (value, text, children, label) =>\n  useable(value) || useable(text) || useable(children) || useable(label)\n\nexport const Option = props => {\n  const { label, children, text, value } = props\n\n  return (\n    <SelectOption\n      label={getVal(label, value, text)}\n      value={getVal(value, text, children, label)}\n    />\n  )\n}\n\nOption.propTypes = {\n  children: PropTypes.string,\n  label: PropTypes.string,\n  text: PropTypes.string,\n  value: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n}\n","import React from 'react'\nimport { withTheme } from '@keg-hub/re-theme'\nimport { get } from '@keg-hub/jsutils'\nimport PropTypes from 'prop-types'\nimport { Text } from '../../typography/text'\n\nexport const Radio = withTheme(props => {\n  const { theme, children, style, onClick, onPress, text, ...args } = props\n\n  return (\n    <Text\n      {...args}\n      style={[ get(theme, [ 'form', 'radio' ]), style ]}\n    >\n      { text }\n    </Text>\n  )\n})\n\nRadio.propTypes = {\n  style: PropTypes.object,\n  text: PropTypes.string,\n}\n","import React from 'react'\nimport { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Select as InternalSelect } from '../../internal/select'\nimport { useThemePath } from '../../../hooks'\nimport { useSelectHandlers } from '../../../hooks/useSelectHandlers'\nimport { getValueFromChildren, getInputValueKey } from '../../../utils'\nimport { useClassName } from 'KegClassName'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { ChevronDown } from '../../../assets/icons'\nimport { Icon } from 'KegIcon'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst KegSelect = StyleInjector(InternalSelect, {\n  displayName: 'Select',\n  className: 'keg-select',\n})\n\n/**\n * Gets the key value pair for the select components value\n * @param {*} props - Props passed to the component\n *\n * @returns {Object} - key / value pair for the select component\n */\nconst getValue = props => {\n  const { children, onChange, onValueChange, readOnly, value } = props\n\n  const setValue = getValueFromChildren(value, children)\n  const valKey = getInputValueKey(false, onChange, onValueChange, readOnly)\n\n  return { [valKey]: setValue }\n}\n\n/**\n * Select\n * @summary Default Select component that wraps the Internal Select component with the styles injector. All props are optional\n *\n * @param {Object} props - see KegSelect PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n *\n */\nexport const Select = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    disabled,\n    readOnly,\n    onChange,\n    onValueChange,\n    style,\n    styles,\n    type = 'default',\n    themePath = `form.select.${type}`,\n    value,\n    ...elProps\n  } = props\n\n  const selectStyles = useThemePath(themePath, styles)\n  const selectClasses = useThemeTypeAsClass(\n    themePath || type,\n    'keg-select',\n    className\n  )\n  const classRef = useClassName('keg-select', selectClasses, ref)\n\n  return (\n    <View style={[ selectStyles.main, style ]}>\n      <KegSelect\n        ref={classRef}\n        {...elProps}\n        enabled={!disabled}\n        style={[selectStyles.select]}\n        {...getValue(props)}\n        {...useSelectHandlers({ onChange, onValueChange })}\n      >\n        { children }\n      </KegSelect>\n      <Icon\n        styles={selectStyles.icon}\n        Component={ChevronDown}\n        color={disabled && selectStyles.icon?.disabled?.color}\n      />\n    </View>\n  )\n})\n\nSelect.propTypes = {\n  ...InternalSelect.propTypes,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  style: PropTypes.object,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n}\n","export const Slider = () => {\n  return null\n}\n","import { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Text } from '../../typography'\nimport { useTheme } from '@keg-hub/re-theme'\nimport React, {\n  useState,\n  useImperativeHandle,\n  useMemo,\n  forwardRef,\n} from 'react'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { useThemePath } from '../../../hooks'\nimport { get, isStr, toBool, checkCall } from '@keg-hub/jsutils'\nimport { getOnChangeHandler, getChecked, renderFromType } from '../../../utils'\nimport { Switch as InternalSwitch } from '../../internal/switch.js'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst KegSwitch = StyleInjector(InternalSwitch, {\n  displayName: 'Switch',\n  className: 'keg-switch',\n})\n\n/**\n * Gets the custom Native Switch colors from the passed in styles\n * @param {string} thumbColor - Color of the on/off indicator\n * @param {string} trackColor - Color of the background track\n * @param {Object} styles - { indicator={}, area={} } - passed in switch styles\n *\n * @returns {Object} - Contains the Native color props for the Switch component\n */\nconst getSwitchColors = (\n  thumbColor,\n  trackColor,\n  { indicator = {}, area = {} }\n) => {\n  const indicatorColor = thumbColor || indicator.color\n  const areaColor = trackColor || area.backgroundColor\n  const colors = {\n    ...(indicatorColor && { thumbColor: thumbColor || color }),\n    ...(areaColor && { trackColor: areaColor, onTintColor: areaColor }),\n  }\n\n  return colors\n}\n\n/**\n * Optimizes the check and non-checked styles so they don't have to be rebuilt on each render\n * Checked styles only rebuild when isChecked value has changed\n * @param {boolean} isChecked - Current state of the switch component\n * @param {Object} themeStyles - Styles of the Switch component\n *\n * @returns {Object} - Styles with the correct values based on isChecked state\n */\nconst useCheckedState = (isChecked, themeStyles) => {\n  const theme = useTheme()\n  return useMemo(() => {\n    return theme.get(themeStyles, {\n      content: {\n        area: {\n          ...get(themeStyles, 'content.area.off'),\n          ...(isChecked && get(themeStyles, 'content.area.on')),\n        },\n        indicator: {\n          ...get(themeStyles, 'content.indicator.off'),\n          ...(isChecked && get(themeStyles, 'content.indicator.on')),\n        },\n      },\n    })\n  }, [isChecked])\n}\n\n/**\n * Sets / Updates the value of the checked Component\n * Calls the callback, if it's passed in\n * @param {boolean} isChecked - Current state of the check value\n * @param {function} setChecked - Update the checked state\n * @param {function} onChange - Callback to call when the state changes\n *\n * @returns {function} - The checked state update function\n */\nconst setCheckedValue = (isChecked, setChecked, onChange) => {\n  return event => {\n    setChecked(!isChecked)\n    checkCall(onChange, event, !isChecked)\n  }\n}\n\n/**\n * Side\n * @summary builds the side sections of the Switch\n * @param {Object} props\n * @property {React Component|string|Object|Array} Component  - custom component to display in the section.\n * @property {Object} style - default headerstyle obj for section\n *\n * @returns {Component} - section component\n */\nconst SideComponent = ({ Component, style }) => {\n  return isStr(Component) ? (\n    <Text style={style}>{ Component }</Text>\n  ) : (\n    renderFromType(Component, { style: styles.content })\n  )\n}\n\n/**\n * Finds the children type and returns them in the format needed to render\n * @param {Object|Array|string} props.children - Child components to render\n *\n * @returns {React Component|Object|Array}\n */\nconst ChildrenComponent = ({ children }) => (\n  <>{ renderFromType(children, {}, null) }</>\n)\n\n/**\n * Exposes an imperative api for the consumer of switch\n * @param {RefObject} ref\n * @param {boolean} isChecked\n * @param {Function} setChecked\n */\nconst useSwitchHandle = (ref, isChecked, setChecked) => {\n  return useImperativeHandle(\n    ref,\n    () => ({\n      isChecked,\n      setChecked,\n    }),\n    [ ref, isChecked, setChecked ]\n  )\n}\n\n/**\n * Switch\n * Wraps the Internal KegSwitch which should be a Switch for the platform type\n * @param {Object} props - see PropTypes below\n *\n */\nexport const Switch = forwardRef((props, ref) => {\n  const {\n    className,\n    checked,\n    children,\n    elType,\n    disabled,\n    LeftComponent,\n    close,\n    onChange,\n    onValueChange,\n    RightComponent,\n    styles,\n    SwitchComponent,\n    setCheckedSetter,\n    type,\n    themePath,\n    thumbColor,\n    trackColor,\n    value,\n    ...elProps\n  } = props\n\n  const [ isChecked, setChecked ] = useState(toBool(checked || value))\n\n  // by default, switch manages its own toggled state.\n  // however, if the consumer needs to control that, it can by passing\n  // in a `ref`, then calling ref.current.setChecked to control the value\n  useSwitchHandle(ref, isChecked, setChecked)\n\n  const elThemePath =\n    themePath || `form.switch.${(close && 'close') || 'default'}`\n  const themeStyles = useThemePath(elThemePath, styles)\n  const activeStyles = useCheckedState(isChecked, themeStyles)\n  const typeClassName = useThemeTypeAsClass(\n    elThemePath || type,\n    'keg-switch',\n    className\n  )\n\n  return (\n    (children && (\n      <View\n        className={typeClassName}\n        style={activeStyles.main}\n      >\n        <ChildrenComponent\n          className='keg-switch-container'\n          children={children}\n        />\n      </View>\n    )) || (\n      <View\n        className={typeClassName}\n        style={activeStyles.main}\n      >\n        { LeftComponent && (\n          <SideComponent\n            className='keg-switch-left'\n            Component={LeftComponent}\n            style={activeStyles.content.left}\n          />\n        ) }\n\n        { SwitchComponent ? (\n          renderFromType(SwitchComponent, {\n            ...props,\n            styles: activeStyles.content,\n          })\n        ) : (\n          <KegSwitch\n            elProps={elProps}\n            disabled={disabled}\n            styles={activeStyles.content}\n            {...getSwitchColors(thumbColor, trackColor, activeStyles.content)}\n            {...getChecked(false, isChecked)}\n            {...getOnChangeHandler(\n              false,\n              setCheckedValue(isChecked, setChecked, onChange || onValueChange)\n            )}\n          />\n        ) }\n\n        { RightComponent && (\n          <SideComponent\n            className='keg-switch-right'\n            Component={RightComponent}\n            style={activeStyles.content.right}\n          />\n        ) }\n      </View>\n    )\n  )\n})\n\nSwitch.propTypes = {\n  checked: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  className: PropTypes.oneOfType([ PropTypes.string, PropTypes.array ]),\n  disabled: PropTypes.bool,\n  LeftComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  RightComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  SwitchComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  styles: PropTypes.object,\n  text: PropTypes.string,\n  themePath: PropTypes.string,\n  thumbColor: PropTypes.string,\n  trackColor: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.bool,\n}\n","import React from 'react'\nimport { LinkWrapper } from './link.wrapper'\nimport { KegText } from 'KegText'\nimport { Touchable } from '../touchable'\nimport PropTypes from 'prop-types'\nimport { getPlatform } from 'KegGetPlatform'\nimport { useClassList } from 'KegClassList'\n\nconst isWeb = getPlatform() === 'web'\nconst Text = KegText('link')\n\nconst Element = React.forwardRef((props, ref) => {\n  const {\n    children,\n    className,\n    elProps,\n    href,\n    onPress,\n    style,\n    target,\n    ...attrs\n  } = props\n\n  return (\n    <Touchable\n      className={useClassList('keg-link', className)}\n      {...elProps}\n      {...attrs}\n      touchRef={ref}\n    >\n      <Text\n        accessibilityRole='link'\n        className='keg-link-text'\n        style={style}\n        href={href}\n        target={target}\n      >\n        { children }\n      </Text>\n    </Touchable>\n  )\n})\n\nconst Link = props => <LinkWrapper\n  {...props}\n  Element={Element}\n  isWeb={isWeb}\n/>\n\nLink.propTypes = {\n  href: PropTypes.string,\n  onPress: PropTypes.func,\n  text: PropTypes.string,\n  style: PropTypes.object,\n  type: PropTypes.string,\n}\n\nexport { Link, Link as A }\n","import { ScrollView as KegScrollView } from './scrollView.native'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * ScrollView\n * @summary Default view component that wraps the React Native ScrollView component. All props are optional\n *\n * @param {Object} props - see ScrollView PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n * @property {String} props.innerClassName - Value to set the innerClassName to (web platform only)\n *\n */\nexport const ScrollView = StyleInjector(KegScrollView, {\n  displayName: 'Scroll-View',\n  className: 'keg-scrollview',\n})\n\nScrollView.propTypes = KegScrollView.propTypes\n","import { StyleInjector } from '@keg-hub/re-theme/styleInjector'\nimport { SectionList as KegSectionList } from './sectionList.native'\n\n/**\n * SectionList\n * @summary Default SectionList component that wraps the React Native SectionList. All props are optional\n *\n * @param {Object} props - see SectionList PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n * @property {String} props.innerClassName - Value to set the innerClassName to (web platform only)\n *\n */\nexport const SectionList = StyleInjector(KegSectionList, {\n  displayName: 'SectionList',\n  className: `keg-sectionlist`,\n})\n\nSectionList.propTypes = KegSectionList.propTypes\n","import { Animated } from 'react-native'\nimport PropTypes from 'prop-types'\nimport { isValidComponent } from '../../utils'\nimport { SidebarToggle } from './sidebarToggle'\nimport { useStyle, useDimensions } from '@keg-hub/re-theme'\nimport { checkCall, noOpObj, noOp } from '@keg-hub/jsutils'\nimport {\n  SidebarMain,\n  SidebarContainer,\n  getSidebarWidth,\n} from './sidebar.restyle'\nimport React, {\n  useMemo,\n  useState,\n  useCallback,\n  useLayoutEffect,\n  useEffect,\n  useRef,\n} from 'react'\n\n/**\n * Checks if the animation should NOT run\n * @function\n * @private\n * @param {boolean} toggled - Current state of the Drawer toggled open\n * @param {number} current - Current height of the Drawer / animated.value\n * @param {number} heights - Ref that holds the initial and max heights of the slider\n *\n * @returns {boolean} - If the animation should NOT run\n */\nconst noAnimate = (toggled, current, { initial, to }) =>\n  (!toggled && current === initial) || (toggled && current === to)\n\n/**\n * Hook to build the styles for the sidebar component\n * @function\n * @private\n * @param {Object} props - See Sidebar component props\n *\n * @returns {Object} - Contains main animated.View and child sidebar styles from the theme\n */\nconst useSidebarStyles = ({ initial, styles, sidebarWidth, location }) => {\n  const dims = useDimensions()\n  const sidebarStyles = useStyle('sidebar', styles)\n  const width = getSidebarWidth(sidebarWidth, initial, sidebarStyles)\n\n  const mainStyles = useMemo(() => {\n    return {\n      flex: 1,\n      zIndex: 5,\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      height: dims.height,\n      ...sidebarStyles?.main,\n      width: width,\n      [location === 'right' ? location : 'left']: initial,\n    }\n  }, [ location, width, initial, sidebarStyles?.main, dims?.height ])\n\n  return { mainStyles, sidebarStyles }\n}\n\n/**\n * Hook to build the sidebar toggle functionality based on initial and to prop values\n * @function\n * @private\n * @param {Object} props - See Sidebar component props\n *\n * @returns {Object} - Contains current toggle state, and methods to update it\n */\nconst useSidebarToggle = props => {\n  const { toggled, onToggled = noOp, initial, to } = props\n\n  // Store the toggled state for reference later\n  const [ isToggled, setIsToggled ] = useState(toggled)\n  const [ originalToggled, setOriginalToggled ] = useState(toggled)\n\n  // If the passed in toggled does not match the original toggled\n  // Then update the toggled boolean to be rendered\n  // This allows changing the toggled prop outside the sidebar\n  // And still allowing the sidebar to update\n  useEffect(() => {\n    if (originalToggled === toggled) return\n\n    setOriginalToggled(toggled)\n    setIsToggled(toggled)\n  }, [ toggled, originalToggled ])\n\n  // Wrapper to toggle the sidebar\n  // Also calls the onToggled prop if it's passed in\n  const onTogglePress = useCallback(\n    event => {\n      const toggleUpdate = !isToggled\n      setIsToggled(toggleUpdate)\n      checkCall(onToggled, toggleUpdate)\n    },\n    [ isToggled, setIsToggled, initial, to ]\n  )\n\n  return {\n    toggled,\n    isToggled,\n    setIsToggled,\n    onTogglePress,\n  }\n}\n\n/**\n * Hook to build the sidebar animation functionality\n * @function\n * @private\n * @param {Object} props - See Sidebar component props\n * @param {boolean} isToggled - Current toggled state of the sidebar\n *\n * @returns {Object} - Contains sidebar animation and a method to update it\n */\nconst useSidebarAnimate = (props, isToggled) => {\n  const { config = noOpObj, initial, to, type = 'timing' } = props\n\n  // Define the animated value as a ref\n  const [ animation, setAnimation ] = useState(new Animated.Value(initial))\n\n  // Cache the initial animation values\n  const xPosRef = useRef({ initial, to })\n\n  // Toggled flag defines how to update the animated value\n  // To Open: isToggled === true === should animate open\n  // To Close: isToggled === false === should animate close\n  useLayoutEffect(() => {\n    if (!xPosRef.current) return\n\n    // Check if we should animate the slider\n    // If the values have not changed, no need to animate\n    if (noAnimate(isToggled, animation._value, xPosRef.current)) return\n\n    const { initial, to } = xPosRef.current\n\n    // // Define the from and to values for the animation based on isToggled flag\n    const xPosChanges = isToggled\n      ? { from: initial, to: to }\n      : { from: to, to: initial }\n\n    // Update the animation value to animate from\n    animation.setValue(xPosChanges.from)\n\n    // Start the animation, from value ==> to value\n    const animationConfig = config\n      ? { ...config, toValue: xPosChanges.to }\n      : { toValue: xPosChanges.to }\n\n    animationConfig.useNativeDriver = false\n    Animated[type](animation, animationConfig).start()\n\n    // Add isToggled as a dep, so anytime it changes, we run the hook code\n  }, [ isToggled, type, config ])\n\n  return { animation, setAnimation }\n}\n\n/**\n * Sidebar\n * @param {Object} props\n * @param {Object} props.config - Defines the animation of the sidebar\n * @param {Array|Object|React.Component} props.children - Children to render inside the sidebar\n * @param {string} props.className - Root className of the sidebar\n * @param {number} props.initial - Initial position of the sidebar on the X axis\n * @param {function} props.onToggled - Called when the sidebar is toggled\n * @param {string} props.location - Location of the sidebar on the page ( Left or Right )\n * @param {number} props.sidebarWidth - Width of the sidebar in pixels\n * @param {Object} props.styles - Styles to apply to the sidebar and its children\n * @param {number} props.to - Final position of the sidebar on the X axis when toggled\n * @param {Array|Object|React.Component} props.ToggleComponent - Component to override the default toggle component\n * @param {string} props.type - Type of animation to use ( e.g. 'spring' )\n *\n */\nexport const Sidebar = props => {\n  const {\n    to,\n    initial,\n    children,\n    location,\n    onOffClick,\n    sidebarWidth,\n    ToggleComponent,\n  } = props\n\n  const { isToggled, setIsToggled, onTogglePress } = useSidebarToggle(props)\n  const { animation } = useSidebarAnimate(props, isToggled)\n  const { mainStyles, sidebarStyles } = useSidebarStyles(props)\n\n  const Toggler = isValidComponent(ToggleComponent) && (\n    <ToggleComponent\n      to={to}\n      initial={initial}\n      location={location}\n      toggled={isToggled}\n      onOffClick={onOffClick}\n      onPress={onTogglePress}\n      sidebarWidth={sidebarWidth}\n      setIsToggled={setIsToggled}\n      styles={sidebarStyles?.toggle}\n    />\n  )\n\n  return (\n    <>\n      <Animated.View style={[ mainStyles, { [location]: animation }]}>\n        <SidebarMain\n          className='sidebar-main'\n          style={sidebarStyles?.main}\n        >\n          { location === 'right' && Toggler }\n          <SidebarContainer\n            location={location}\n            sidebarWidth={sidebarWidth}\n            className='sidebar-container'\n            style={sidebarStyles?.container}\n          >\n            { children }\n          </SidebarContainer>\n          { location !== 'right' && Toggler }\n        </SidebarMain>\n      </Animated.View>\n    </>\n  )\n}\n\n// Add the toggle component helper\nSidebar.Toggle = SidebarToggle\nSidebar.defaultProps = {\n  config: noOpObj,\n  location: 'left',\n  type: 'timing',\n  ToggleComponent: SidebarToggle,\n}\n\nSidebar.propTypes = {\n  /**\n   * Final position of the sidebar on the X axis when toggled\n   */\n  to: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n  /**\n   * Initial position of the sidebar on the X axis\n   */\n  initial: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n  /**\n   * Width of the Sidebar. Defaults to styles.main.width or 200px if it does not exist\n   */\n  sidebarWidth: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n  /**\n   * Location the sidebar should be attached to ( left || right ). Defaults to left\n   */\n  location: PropTypes.string,\n  /**\n   * Class name applied to the root-element of the Sidebar\n   */\n  className: PropTypes.string,\n  /**\n   * Custom styles for the sidebar\n   */\n  styles: PropTypes.object,\n  /**\n   * Type of animation to use ( e.g. 'spring' )\n   */\n  type: PropTypes.string,\n  /**\n   * Config object for the toggle animation\n   */\n  config: PropTypes.object,\n  /**\n   * Called when the Sidebar is toggled open or closed\n   */\n  onToggle: PropTypes.func,\n  /**\n   * Called when the Sidebar is toggled open and a click event is fired outside of the component\n   */\n  onOffClick: PropTypes.func,\n  /**\n   * Default state of the toggle state for the Sidebar component\n   */\n  toggled: PropTypes.bool,\n  /**\n   * Component to override the default Toggle Component\n   */\n  ToggleComponent: PropTypes.oneOfType([ PropTypes.node, PropTypes.func ]),\n}\n","import React, { useMemo } from 'react'\nimport * as NativeSvg from './svgIcon.native'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\nimport { useTheme, useStyle } from '@keg-hub/re-theme'\nimport { get, isArr, deepMerge, noPropObj } from '@keg-hub/jsutils'\n\nconst { SvgIcon: KegSvgIcon, ...svgElements } = NativeSvg\n\n/**\n * Custom hook to check if the size prop is an array, and merge it. Otherwise just returns the style object\n * @param {Object|Array=} style - Style object used to apply custom styles to the component\n *\n * @returns {Object} - Merged style object\n */\nconst useIconStyle = style => {\n  return useMemo(() => {\n    return isArr(style) ? deepMerge(...style) : style\n  }, [style])\n}\n\n/**\n * Custom hook to find the size from the props and styles\n * @param {string=} size - Size of the Svg Component\n * @param {Object=} style - Style object used to apply custom styles to the component\n * @param {Object=} theme - Global theme object\n *\n * @returns {Object} - Contains the height and width props for the Svg element\n */\nconst useSize = (size, width, height, style, theme) => {\n  return useMemo(() => {\n    const iconSize = size || get(style, 'fontSize')\n    const themeSize = get(theme, 'typography.default.fontSize', 15) * 2\n    return {\n      height: height || iconSize || get(style, 'height', themeSize),\n      width: width || iconSize || get(style, 'width', themeSize),\n    }\n  }, [ size, width, height, style ])\n}\n\n/**\n * Custom hook to find the fill color from the props and styles\n * @param {string=} fill - Fill color of the path element\n * @param {string=} stroke - Color of the stroke for the path element\n * @param {string=} color - Color of the Svg component\n * @param {string} border - Used as the stroke color when no stroke prop is passed\n * @param {Object=} style - Style object used to apply custom styles to the component\n * @param {Object=} theme - Global theme object\n *\n * @returns {Object} - Contains the stroke and fill props for the path element\n */\nconst useColor = (fill, stroke, color, border, style, theme) => {\n  return useMemo(() => {\n    const themeColor = get(theme, 'typography.default.color')\n    return {\n      stroke:\n        stroke || border || style.border || color || style.color || themeColor,\n      fill: fill || color || style.color || stroke,\n    }\n  }, [ fill, stroke, color, border, style ])\n}\n\n/**\n * SvgIcon\n * @summary SVG component for rendering SVG icons\n *\n * @param {Object} props - see SvgIcon PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n *\n */\nexport const SvgIconInject = StyleInjector(KegSvgIcon, {\n  displayName: 'SvgIcon',\n  className: 'keg-svg-icon',\n})\n\nexport const SvgIcon = React.forwardRef((props, ref) => {\n  const {\n    border,\n    color,\n    fill,\n    height,\n    size,\n    stroke,\n    style = noPropObj,\n    width,\n  } = props\n\n  const theme = useTheme()\n  const iconStyle = useIconStyle(style)\n  const sizeStyle = useSize(size, width, height, iconStyle, theme)\n  const svgStyles = useStyle(iconStyle, sizeStyle)\n  const colorStyle = useColor(fill, stroke, color, border, iconStyle, theme)\n\n  return (\n    <SvgIconInject\n      {...props}\n      {...sizeStyle}\n      {...colorStyle}\n      style={svgStyles}\n      ref={ref}\n    />\n  )\n})\n\n// add all the react-native-svg exports, like Circle, so that clients\n// can use them as children (e.g. SvgIcon.Circle)\nObject.assign(SvgIcon, svgElements)\n\nSvgIcon.propTypes = {\n  ...KegSvgIcon.propTypes,\n}\n"],"names":["useKeyPress","useScrollIntoView","logData","noPropArr","FilePicker","props","React","View","P","SimpleHeader","forwardRef","ref","title","className","style","rest","useImperativeHandle","isChecked","undefined","setChecked","noOp","textStyle","useStyle","Text","CheckboxHeader","onPress","checked","headerStyles","useMemo","main","content","right","onChangeHandler","useCallback","_","val","Checkbox","CheckGroup","headerClassName","children","styles","initChecked","onGroupPress","showHeaderCheckbox","showHeader","groupStyles","useChildrenWithRefs","childrenWithProps","childRefs","headerCheckHandler","mapObj","current","child","Header","header","useClassList","Item","Form","theme","useTheme","elType","type","themePath","elProps","formTheme","useThemePath","get","SelectOption","Picker","useable","item","isStr","isNum","getVal","value","text","label","Option","Radio","withTheme","onClick","args","KegSelect","StyleInjector","InternalSelect","displayName","getValue","onChange","onValueChange","readOnly","setValue","getValueFromChildren","valKey","getInputValueKey","Select","disabled","selectStyles","selectClasses","useThemeTypeAsClass","classRef","useClassName","select","useSelectHandlers","Icon","icon","ChevronDown","color","Slider","KegSwitch","InternalSwitch","getSwitchColors","thumbColor","trackColor","indicator","area","indicatorColor","areaColor","backgroundColor","colors","onTintColor","useCheckedState","themeStyles","setCheckedValue","event","checkCall","SideComponent","Component","renderFromType","ChildrenComponent","useSwitchHandle","Switch","LeftComponent","close","RightComponent","SwitchComponent","setCheckedSetter","useState","toBool","elThemePath","activeStyles","typeClassName","left","getChecked","getOnChangeHandler","isWeb","getPlatform","KegText","Element","href","target","attrs","Touchable","Link","LinkWrapper","ScrollView","KegScrollView","propTypes","SectionList","KegSectionList","noAnimate","toggled","initial","to","useSidebarStyles","sidebarWidth","location","dims","useDimensions","sidebarStyles","width","getSidebarWidth","mainStyles","flex","zIndex","position","top","bottom","height","useSidebarToggle","onToggled","isToggled","setIsToggled","originalToggled","setOriginalToggled","useEffect","onTogglePress","toggleUpdate","useSidebarAnimate","config","noOpObj","Animated","Value","animation","setAnimation","xPosRef","useRef","useLayoutEffect","_value","xPosChanges","from","animationConfig","toValue","useNativeDriver","start","Sidebar","onOffClick","ToggleComponent","Toggler","isValidComponent","toggle","SidebarMain","SidebarContainer","container","Toggle","SidebarToggle","defaultProps","KegSvgIcon","NativeSvg","svgElements","useIconStyle","isArr","deepMerge","useSize","size","iconSize","themeSize","useColor","fill","stroke","border","themeColor","SvgIconInject","SvgIcon","noPropObj","iconStyle","sizeStyle","svgStyles","colorStyle","Object","assign"],"mappings":"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"}