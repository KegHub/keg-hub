{"version":3,"file":"index.js","sources":["../../../src/hooks/useKeyPress/useKeyPress.js","../../../src/components/filePicker/filePicker.js","../../../src/components/form/checkGroup/checkGroup.js","../../../src/components/form/form/form.js","../../../src/components/form/option/option.js","../../../src/components/form/radio/radio.js","../../../src/components/form/select/select.js","../../../src/components/form/slider/slider.js","../../../src/components/form/switch/switch.js","../../../src/components/link/link.js","../../../src/components/sidebar/sidebar.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react'\n\n/**\n * Helper for `useKeyPress` that sets and removes window listeners\n * @param {Function} upHandler\n * @param {Function} downHandler\n */\nconst manageListeners = (upHandler, downHandler) => {\n  window.addEventListener('keydown', downHandler)\n  window.addEventListener('keyup', upHandler)\n\n  // cleanup\n  return () => {\n    window.removeEventListener('keydown', downHandler)\n    window.removeEventListener('keyup', upHandler)\n  }\n}\n\n/**\n * @param {string} targetKey\n * @return {boolean} whether the key was pressed down or not\n */\nexport const useKeyPress = targetKey => {\n  const [ keyPressed, setKeyPressed ] = useState(false)\n\n  const downHandler = useCallback(\n    evt => evt.key === targetKey && setKeyPressed(true),\n    [ setKeyPressed, targetKey ]\n  )\n\n  const upHandler = useCallback(\n    evt => evt.key === targetKey && setKeyPressed(false),\n    [ setKeyPressed, targetKey ]\n  )\n\n  useEffect(\n    () => manageListeners(upHandler, downHandler),\n    [ downHandler, upHandler ]\n  )\n\n  return keyPressed\n}\n","import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport { useThemePath } from '../../hooks'\nimport PropTypes from 'prop-types'\nimport { P } from '../typography'\nimport { Button } from '../button'\nimport { View } from 'KegView'\nimport { get } from '@keg-hub/jsutils'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\nimport { Input as KegInput } from '../internal/input.web'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst Input = StyleInjector(KegInput, {\n  maxSelectors: 0,\n  kegComponent: true,\n  displayName: 'FilePickerInput',\n  className: 'keg-file-picker-input',\n})\n\n/**\n * A component for selecting files from the user's system. Looks better than a basic input element,\n * and accepts style objects for styling further\n * @param {Object} props - props object. Accepts all standard <input /> props which will be passed to the input element. Additional props:\n * @param {String} props.title - the text inside the button\n * @param {Object} props.style - style for the wrapping View\n * @param {Object} props.buttonStyle - style for the button\n * @param {Object} props.fileStyle - style for the file name text\n * @param {Object} props.themePath - theme type path for everything except the button\n * @param {Object} props.buttonThemePath - theme type path for the button itself (@see Button)\n * @param {Boolean} props.showFile - if true, it will show the file name next to the input\n * @param {Function} props.onFilePicked - function called when a file was selected and handles extracting the file for you: file => { ... }\n * @param {Boolean} props.openOnMount - opens filepicker on component mount\n * @param {Object} ref - an optional ref to the underlying input element\n */\nexport const FilePicker = React.forwardRef((props, ref) => {\n  const {\n    className,\n    onChange,\n    title,\n    children,\n    style = {},\n    showFile = true,\n    onFilePicked,\n    themePath = 'filePicker.default',\n    buttonThemePath = 'button.contained.default',\n    capture,\n    openOnMount = false,\n    ...args\n  } = props\n\n  const componentTheme = useThemePath(themePath)\n\n  // store the file selected by the user\n  const [ file, setFile ] = useState({})\n\n  // handle user selecting a file\n  const handleInputChange = useCallback(\n    event => {\n      onChange && onChange(event)\n\n      const file = event.target.files[0]\n      file && onFilePicked && onFilePicked(file)\n      file && setFile(file)\n    },\n    [ onChange, onFilePicked, setFile ]\n  )\n\n  // make an input ref so that we can call the input's click() handler to start picking files\n  // when the user clicks the button\n  const refToInput = useRef()\n\n  const clickInput = useCallback(\n    () => refToInput.current && refToInput.current.click(),\n    [refToInput]\n  )\n\n  // if openOnMount is set to true, then immediately open the file picker\n  useEffect(() => {\n    openOnMount && clickInput()\n  }, [])\n\n  return (\n    <View\n      className={useThemeTypeAsClass(\n        themePath || type,\n        'keg-filepicker',\n        className\n      )}\n      style={[ get(componentTheme, 'main'), style ]}\n    >\n      <Button\n        content={title}\n        onClick={clickInput}\n        style={get(componentTheme, 'content.button')}\n        themePath={buttonThemePath}\n      >\n        { children }\n      </Button>\n\n      {\n        // show the file name if the flag is set for it\n        showFile && (\n          <P style={get(componentTheme, 'content.file')}>{ file.name }</P>\n        )\n      }\n\n      { /* this input is hidden from the user, but is still used for selecting a file */ }\n      <Input\n        {...args}\n        ref={input => {\n          ref && (ref.current = input)\n          refToInput.current = input\n        }}\n        onChange={handleInputChange}\n        style={get(componentTheme, 'content.input')}\n        type='file'\n        capture={capture}\n      />\n    </View>\n  )\n})\n\nFilePicker.propTypes = {\n  title: PropTypes.string,\n  style: PropTypes.object,\n  buttonStyle: PropTypes.object,\n  fileStyle: PropTypes.object,\n  themePath: PropTypes.string,\n  buttonThemePath: PropTypes.string,\n  onChange: PropTypes.func,\n  onFilePicked: PropTypes.func,\n  showFile: PropTypes.bool,\n}\n","import React, { useCallback, useImperativeHandle, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { View } from 'KegView'\nimport { Text } from '../../typography/text'\nimport { Checkbox } from 'KegCheckbox'\nimport { useStyle } from '@keg-hub/re-theme'\nimport { useClassList } from 'KegClassList'\nimport { useChildrenWithRefs } from '../../../hooks/useChildrenWithRefs'\nimport { mapObj, noOp } from '@keg-hub/jsutils'\n\n/**\n * Simple header for CheckGroup, without a checkbox\n * @param {Object} props\n * @param {string} props.title - title of header\n * @param {Object} props.style - style rules to apply to the Text element\n * @param {*} props.* - remaining props are passed to the Text element\n */\nconst SimpleHeader = React.forwardRef((props, ref) => {\n  const { title, className, style, ...rest } = props\n\n  // add no-op handle here just for consistency with other header\n  useImperativeHandle(ref, () => ({ isChecked: undefined, setChecked: noOp }))\n\n  const textStyle = useStyle('form.checkGroup.simpleHeader.main', style)\n  return (\n    <Text\n      className={className}\n      style={textStyle}\n      {...rest}\n    >\n      { title }\n    </Text>\n  )\n})\n\n/**\n * Header for CheckGroup, with a checkbox for select-all functionality\n * @param {Object} props\n * @param {string} props.title - title of header\n * @param {Object} props.style - style rules to apply to the header\n * @param {Function?} props.onPress - handler for checkbox press\n * @param {boolean} props.checked - initial value of header checkbox\n */\nconst CheckboxHeader = React.forwardRef((props, ref) => {\n  const { title, className, style, onPress, checked } = props\n  const headerStyles = useMemo(\n    () => ({\n      main: style,\n      content: {\n        right: {},\n      },\n    }),\n    [style]\n  )\n\n  const onChangeHandler = useCallback((_, val) => onPress?.(val), [onPress])\n\n  return (\n    <Checkbox\n      RightComponent={title}\n      rightClassName={className}\n      styles={headerStyles}\n      checked={checked}\n      onChange={onChangeHandler}\n      ref={ref}\n      close\n    />\n  )\n})\n\n/**\n * A group of checkbox items with a header.\n * Will include a select-all checkbox in the header IF you define the children as a function (@see story examples)\n * @param {Object} props\n * @param {string} props.className - css class name\n * @param {string} props.headerClassName - css class name for header text\n * @param {string} props.title - title of the group\n * @param {boolean?} props.initChecked - initial checked value of the group header box, if you are using it\n * @param {boolean?} props.showHeaderCheckbox - true if you want a group header check box, with select-all functionality\n * @param {boolean?} props.showHeader - true by default. If false, hides the header entirely, only showing children\n * @param {Function?} props.onGroupPress - handler of header checkbox\n * @param {*} props.children - components in the group (@see CheckboxGroup.Item)\n * @param {Object?} props.styles\n * @param {Object?} props.styles.main\n * @param {Object?} props.styles.header\n */\nexport const CheckGroup = React.forwardRef((props, ref) => {\n  const {\n    className,\n    headerClassName,\n    title,\n    children,\n    styles,\n    initChecked = false,\n    onGroupPress,\n    showHeaderCheckbox = false,\n    showHeader = true,\n  } = props\n\n  const groupStyles = useStyle('form.checkGroup', styles)\n\n  // get children updated with ref props, and the refs themselves\n  const [ childrenWithProps, childRefs ] = useChildrenWithRefs(\n    children,\n    showHeaderCheckbox\n  )\n\n  // callback that manages select-all behavior on click of the header checkbox\n  const headerCheckHandler = useCallback(\n    checked => {\n      onGroupPress?.(checked)\n      mapObj(childRefs.current, (_, child) => child?.setChecked?.(checked))\n    },\n    [childRefs]\n  )\n\n  const Header = () =>\n    showHeaderCheckbox ? (\n      <CheckboxHeader\n        className={headerClassName}\n        style={groupStyles?.header}\n        title={title}\n        onPress={showHeaderCheckbox && headerCheckHandler}\n        checked={showHeaderCheckbox ? initChecked : undefined}\n        ref={ref}\n      />\n    ) : (\n      <SimpleHeader\n        className={headerClassName}\n        style={groupStyles?.header}\n        title={title}\n        ref={ref}\n      />\n    )\n\n  return (\n    <View\n      className={useClassList('keg-check-group', className)}\n      style={groupStyles?.main}\n    >\n      { showHeader && <Header /> }\n      { childrenWithProps }\n    </View>\n  )\n})\n\nCheckGroup.Item = Checkbox\n\nCheckGroup.propTypes = {\n  className: PropTypes.oneOfType([ PropTypes.array, PropTypes.string ]),\n  headerClassName: PropTypes.oneOfType([ PropTypes.array, PropTypes.string ]),\n  title: PropTypes.string,\n  initChecked: PropTypes.bool,\n  showHeaderCheckbox: PropTypes.bool,\n  showHeader: PropTypes.bool,\n  onGroupPress: PropTypes.func,\n  styles: PropTypes.oneOfType([ PropTypes.object, PropTypes.array ]),\n}\n","import React from 'react'\nimport { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { get } from '@keg-hub/jsutils'\nimport { useThemePath } from '../../../hooks'\nimport { useTheme } from '@keg-hub/re-theme'\nimport { useClassList } from 'KegClassList'\n/**\n * Form\n * @summary Custom button component. All props are optional\n *\n * @param {Object} props - see formPropTypes\n * @property {String} props.type - default ''\n * @property {Object} props.style - custom style\n * @property {Function} props.onSubmit - function when form is submitted\n * @property {Object} props.children\n * @property {Object} ref - reference to native element\n */\nexport const Form = React.forwardRef((props, ref) => {\n  const theme = useTheme()\n\n  const {\n    children,\n    className,\n    elType,\n    style,\n    type,\n    themePath = `form.form.${type || 'default'}`,\n    ...elProps\n  } = props\n\n  const formTheme = useThemePath(themePath)\n\n  return (\n    <View\n      accessibilityRole='form'\n      className={useClassList('keg-form', className)}\n      {...elProps}\n      style={[ get(theme, 'form.form.default'), formTheme, style ]}\n      ref={ref}\n    >\n      { children }\n    </View>\n  )\n})\n\nForm.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  onSubmit: PropTypes.func,\n  style: PropTypes.object,\n  type: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const Option = props => {\n  const { children, label, style, text, value, ...args } = props\n\n  return (\n    <option\n      {...args}\n      value={value || label || text}\n    >\n      { label || value || text || children }\n    </option>\n  )\n}\n\nOption.propTypes = {\n  style: PropTypes.object,\n  label: PropTypes.string,\n  text: PropTypes.string,\n  value: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n}\n","import React from 'react'\nimport { Input } from 'KegInput'\n\nexport const Radio = props => <Input\n  {...props}\n  type='radio'\n/>\n","import React from 'react'\nimport { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Select as InternalSelect } from '../../internal/select'\nimport { useThemePath } from '../../../hooks'\nimport { useSelectHandlers } from '../../../hooks/useSelectHandlers'\nimport { getValueFromChildren, getInputValueKey } from '../../../utils'\nimport { useClassName } from 'KegClassName'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { ChevronDown } from '../../../assets/icons'\nimport { Icon } from 'KegIcon'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst KegSelect = StyleInjector(InternalSelect, {\n  maxSelectors: 0,\n  kegComponent: true,\n  displayName: 'Select',\n  className: 'keg-select',\n})\n\n/**\n * Gets the key value pair for the select components value\n * @param {*} props - Props passed to the component\n *\n * @returns {Object} - key / value pair for the select component\n */\nconst getValue = props => {\n  const { children, onChange, onValueChange, readOnly, value } = props\n\n  const setValue = getValueFromChildren(value, children)\n  const valKey = getInputValueKey(false, onChange, onValueChange, readOnly)\n\n  return { [valKey]: setValue }\n}\n\n/**\n * Select\n * @summary Default Select component that wraps the Internal Select component with the styles injector. All props are optional\n *\n * @param {Object} props - see KegSelect PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n *\n */\nexport const Select = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    disabled,\n    readOnly,\n    onChange,\n    onValueChange,\n    style,\n    styles,\n    type = 'default',\n    themePath = `form.select.${type}`,\n    value,\n    ...elProps\n  } = props\n\n  const selectStyles = useThemePath(themePath, styles)\n  const selectClasses = useThemeTypeAsClass(\n    themePath || type,\n    'keg-select',\n    className\n  )\n  const classRef = useClassName('keg-select', selectClasses, ref)\n\n  return (\n    <View style={[ selectStyles.main, style ]}>\n      <KegSelect\n        ref={classRef}\n        {...elProps}\n        enabled={!disabled}\n        style={[selectStyles.select]}\n        {...getValue(props)}\n        {...useSelectHandlers({ onChange, onValueChange })}\n      >\n        { children }\n      </KegSelect>\n      <Icon\n        styles={selectStyles.icon}\n        Component={ChevronDown}\n        color={disabled && selectStyles.icon?.disabled?.color}\n      />\n    </View>\n  )\n})\n\nSelect.propTypes = {\n  ...InternalSelect.propTypes,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  style: PropTypes.object,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n}\n","export const Slider = () => {\n  return null\n}\n","import { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Text } from '../../typography'\nimport { useTheme } from '@keg-hub/re-theme'\nimport React, {\n  useState,\n  useImperativeHandle,\n  useMemo,\n  forwardRef,\n} from 'react'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { useThemePath } from '../../../hooks'\nimport { get, isStr, toBool, checkCall } from '@keg-hub/jsutils'\nimport { getOnChangeHandler, getChecked, renderFromType } from '../../../utils'\nimport { Switch as InternalSwitch } from '../../internal/switch.js'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst KegSwitch = StyleInjector(InternalSwitch, {\n  maxSelectors: 0,\n  kegComponent: true,\n  displayName: 'Switch',\n  className: 'keg-switch',\n})\n\n/**\n * Gets the custom Native Switch colors from the passed in styles\n * @param {string} thumbColor - Color of the on/off indicator\n * @param {string} trackColor - Color of the background track\n * @param {Object} styles - { indicator={}, area={} } - passed in switch styles\n *\n * @returns {Object} - Contains the Native color props for the Switch component\n */\nconst getSwitchColors = (\n  thumbColor,\n  trackColor,\n  { indicator = {}, area = {} }\n) => {\n  const indicatorColor = thumbColor || indicator.color\n  const areaColor = trackColor || area.backgroundColor\n  const colors = {\n    ...(indicatorColor && { thumbColor: thumbColor || color }),\n    ...(areaColor && { trackColor: areaColor, onTintColor: areaColor }),\n  }\n\n  return colors\n}\n\n/**\n * Optimizes the check and non-checked styles so they don't have to be rebuilt on each render\n * Checked styles only rebuild when isChecked value has changed\n * @param {boolean} isChecked - Current state of the switch component\n * @param {Object} themeStyles - Styles of the Switch component\n *\n * @returns {Object} - Styles with the correct values based on isChecked state\n */\nconst useCheckedState = (isChecked, themeStyles) => {\n  const theme = useTheme()\n  return useMemo(() => {\n    return theme.get(themeStyles, {\n      content: {\n        area: {\n          ...get(themeStyles, 'content.area.off'),\n          ...(isChecked && get(themeStyles, 'content.area.on')),\n        },\n        indicator: {\n          ...get(themeStyles, 'content.indicator.off'),\n          ...(isChecked && get(themeStyles, 'content.indicator.on')),\n        },\n      },\n    })\n  }, [isChecked])\n}\n\n/**\n * Sets / Updates the value of the checked Component\n * Calls the callback, if it's passed in\n * @param {boolean} isChecked - Current state of the check value\n * @param {function} setChecked - Update the checked state\n * @param {function} onChange - Callback to call when the state changes\n *\n * @returns {function} - The checked state update function\n */\nconst setCheckedValue = (isChecked, setChecked, onChange) => {\n  return event => {\n    setChecked(!isChecked)\n    checkCall(onChange, event, !isChecked)\n  }\n}\n\n/**\n * Side\n * @summary builds the side sections of the Switch\n * @param {Object} props\n * @property {React Component|string|Object|Array} Component  - custom component to display in the section.\n * @property {Object} style - default headerstyle obj for section\n *\n * @returns {Component} - section component\n */\nconst SideComponent = ({ Component, style }) => {\n  return isStr(Component) ? (\n    <Text style={style}>{ Component }</Text>\n  ) : (\n    renderFromType(Component, { style: styles.content })\n  )\n}\n\n/**\n * Finds the children type and returns them in the format needed to render\n * @param {Object|Array|string} props.children - Child components to render\n *\n * @returns {React Component|Object|Array}\n */\nconst ChildrenComponent = ({ children }) => (\n  <>{ renderFromType(children, {}, null) }</>\n)\n\n/**\n * Exposes an imperative api for the consumer of switch\n * @param {RefObject} ref\n * @param {boolean} isChecked\n * @param {Function} setChecked\n */\nconst useSwitchHandle = (ref, isChecked, setChecked) => {\n  return useImperativeHandle(\n    ref,\n    () => ({\n      isChecked,\n      setChecked,\n    }),\n    [ ref, isChecked, setChecked ]\n  )\n}\n\n/**\n * Switch\n * Wraps the Internal KegSwitch which should be a Switch for the platform type\n * @param {Object} props - see PropTypes below\n *\n */\nexport const Switch = forwardRef((props, ref) => {\n  const {\n    className,\n    checked,\n    children,\n    elType,\n    disabled,\n    LeftComponent,\n    close,\n    onChange,\n    onValueChange,\n    RightComponent,\n    styles,\n    SwitchComponent,\n    setCheckedSetter,\n    type,\n    themePath,\n    thumbColor,\n    trackColor,\n    value,\n    ...elProps\n  } = props\n\n  const [ isChecked, setChecked ] = useState(toBool(checked || value))\n\n  // by default, switch manages its own toggled state.\n  // however, if the consumer needs to control that, it can by passing\n  // in a `ref`, then calling ref.current.setChecked to control the value\n  useSwitchHandle(ref, isChecked, setChecked)\n\n  const elThemePath =\n    themePath || `form.switch.${(close && 'close') || 'default'}`\n  const themeStyles = useThemePath(elThemePath, styles)\n  const activeStyles = useCheckedState(isChecked, themeStyles)\n  const typeClassName = useThemeTypeAsClass(\n    elThemePath || type,\n    'keg-switch',\n    className\n  )\n\n  return (\n    (children && (\n      <View\n        className={typeClassName}\n        style={activeStyles.main}\n      >\n        <ChildrenComponent\n          className='keg-switch-container'\n          children={children}\n        />\n      </View>\n    )) || (\n      <View\n        className={typeClassName}\n        style={activeStyles.main}\n      >\n        { LeftComponent && (\n          <SideComponent\n            className='keg-switch-left'\n            Component={LeftComponent}\n            style={activeStyles.content.left}\n          />\n        ) }\n\n        { SwitchComponent ? (\n          renderFromType(SwitchComponent, {\n            ...props,\n            styles: activeStyles.content,\n          })\n        ) : (\n          <KegSwitch\n            elProps={elProps}\n            disabled={disabled}\n            styles={activeStyles.content}\n            {...getSwitchColors(thumbColor, trackColor, activeStyles.content)}\n            {...getChecked(false, isChecked)}\n            {...getOnChangeHandler(\n              false,\n              setCheckedValue(isChecked, setChecked, onChange || onValueChange)\n            )}\n          />\n        ) }\n\n        { RightComponent && (\n          <SideComponent\n            className='keg-switch-right'\n            Component={RightComponent}\n            style={activeStyles.content.right}\n          />\n        ) }\n      </View>\n    )\n  )\n})\n\nSwitch.propTypes = {\n  checked: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  className: PropTypes.oneOfType([ PropTypes.string, PropTypes.array ]),\n  disabled: PropTypes.bool,\n  LeftComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  RightComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  SwitchComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  styles: PropTypes.object,\n  text: PropTypes.string,\n  themePath: PropTypes.string,\n  thumbColor: PropTypes.string,\n  trackColor: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.bool,\n}\n","import React from 'react'\nimport { LinkWrapper } from './link.wrapper'\nimport { KegText } from 'KegText'\nimport { Touchable } from '../touchable'\nimport PropTypes from 'prop-types'\nimport { getPlatform } from 'KegGetPlatform'\nimport { useClassList } from 'KegClassList'\n\nconst isWeb = getPlatform() === 'web'\nconst Text = KegText('link')\n\nconst Element = React.forwardRef((props, ref) => {\n  const {\n    children,\n    className,\n    elProps,\n    href,\n    onPress,\n    style,\n    target,\n    ...attrs\n  } = props\n\n  return (\n    <Touchable\n      className={useClassList('keg-link', className)}\n      {...elProps}\n      {...attrs}\n      touchRef={ref}\n    >\n      <Text\n        accessibilityRole='link'\n        className='keg-link-text'\n        style={style}\n        href={href}\n        target={target}\n      >\n        { children }\n      </Text>\n    </Touchable>\n  )\n})\n\nconst Link = props => <LinkWrapper\n  {...props}\n  Element={Element}\n  isWeb={isWeb}\n/>\n\nLink.propTypes = {\n  href: PropTypes.string,\n  onPress: PropTypes.func,\n  text: PropTypes.string,\n  style: PropTypes.object,\n  type: PropTypes.string,\n}\n\nexport { Link, Link as A }\n","import { Animated } from 'react-native'\nimport PropTypes from 'prop-types'\nimport { isValidComponent } from '../../utils'\nimport { SidebarToggle } from './sidebarToggle'\nimport { useStyle, useDimensions } from '@keg-hub/re-theme'\nimport { checkCall, noOpObj, noOp } from '@keg-hub/jsutils'\nimport {\n  SidebarMain,\n  SidebarContainer,\n  getSidebarWidth,\n} from './sidebar.restyle'\nimport React, {\n  useMemo,\n  useState,\n  useCallback,\n  useLayoutEffect,\n  useEffect,\n  useRef,\n} from 'react'\n\n/**\n * Checks if the animation should NOT run\n * @function\n * @private\n * @param {boolean} toggled - Current state of the Drawer toggled open\n * @param {number} current - Current height of the Drawer / animated.value\n * @param {number} heights - Ref that holds the initial and max heights of the slider\n *\n * @returns {boolean} - If the animation should NOT run\n */\nconst noAnimate = (toggled, current, { initial, to }) =>\n  (!toggled && current === initial) || (toggled && current === to)\n\n/**\n * Hook to build the styles for the sidebar component\n * @function\n * @private\n * @param {Object} props - See Sidebar component props\n *\n * @returns {Object} - Contains main animated.View and child sidebar styles from the theme\n */\nconst useSidebarStyles = ({ initial, styles, sidebarWidth, location }) => {\n  const dims = useDimensions()\n  const sidebarStyles = useStyle('sidebar', styles)\n  const width = getSidebarWidth(sidebarWidth, initial, sidebarStyles)\n\n  const mainStyles = useMemo(() => {\n    return {\n      flex: 1,\n      zIndex: 5,\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      height: dims.height,\n      ...sidebarStyles?.main,\n      width: width,\n      [location === 'right' ? location : 'left']: initial,\n    }\n  }, [ location, width, initial, sidebarStyles?.main, dims?.height ])\n\n  return { mainStyles, sidebarStyles }\n}\n\n/**\n * Hook to build the sidebar toggle functionality based on initial and to prop values\n * @function\n * @private\n * @param {Object} props - See Sidebar component props\n *\n * @returns {Object} - Contains current toggle state, and methods to update it\n */\nconst useSidebarToggle = props => {\n  const { toggled, onToggled = noOp, initial, to } = props\n\n  // Store the toggled state for reference later\n  const [ isToggled, setIsToggled ] = useState(toggled)\n  const [ originalToggled, setOriginalToggled ] = useState(toggled)\n\n  // If the passed in toggled does not match the original toggled\n  // Then update the toggled boolean to be rendered\n  // This allows changing the toggled prop outside the sidebar\n  // And still allowing the sidebar to update\n  useEffect(() => {\n    if (originalToggled === toggled) return\n\n    setOriginalToggled(toggled)\n    setIsToggled(toggled)\n  }, [ toggled, originalToggled ])\n\n  // Wrapper to toggle the sidebar\n  // Also calls the onToggled prop if it's passed in\n  const onTogglePress = useCallback(\n    event => {\n      const toggleUpdate = !isToggled\n      setIsToggled(toggleUpdate)\n      checkCall(onToggled, toggleUpdate)\n    },\n    [ isToggled, setIsToggled, initial, to ]\n  )\n\n  return {\n    toggled,\n    isToggled,\n    setIsToggled,\n    onTogglePress,\n  }\n}\n\n/**\n * Hook to build the sidebar animation functionality\n * @function\n * @private\n * @param {Object} props - See Sidebar component props\n * @param {boolean} isToggled - Current toggled state of the sidebar\n *\n * @returns {Object} - Contains sidebar animation and a method to update it\n */\nconst useSidebarAnimate = (props, isToggled) => {\n  const { config = noOpObj, initial, to, type = 'timing' } = props\n\n  // Define the animated value as a ref\n  const [ animation, setAnimation ] = useState(new Animated.Value(initial))\n\n  // Cache the initial animation values\n  const xPosRef = useRef({ initial, to })\n\n  // Toggled flag defines how to update the animated value\n  // To Open: isToggled === true === should animate open\n  // To Close: isToggled === false === should animate close\n  useLayoutEffect(() => {\n    if (!xPosRef.current) return\n\n    // Check if we should animate the slider\n    // If the values have not changed, no need to animate\n    if (noAnimate(isToggled, animation._value, xPosRef.current)) return\n\n    const { initial, to } = xPosRef.current\n\n    // // Define the from and to values for the animation based on isToggled flag\n    const xPosChanges = isToggled\n      ? { from: initial, to: to }\n      : { from: to, to: initial }\n\n    // Update the animation value to animate from\n    animation.setValue(xPosChanges.from)\n\n    // Start the animation, from value ==> to value\n    const animationConfig = config\n      ? { ...config, toValue: xPosChanges.to }\n      : { toValue: xPosChanges.to }\n\n    animationConfig.useNativeDriver = false\n    Animated[type](animation, animationConfig).start()\n\n    // Add isToggled as a dep, so anytime it changes, we run the hook code\n  }, [ isToggled, type, config ])\n\n  return { animation, setAnimation }\n}\n\n/**\n * Sidebar\n * @param {Object} props\n * @param {Object} props.config - Defines the animation of the sidebar\n * @param {Array|Object|React.Component} props.children - Children to render inside the sidebar\n * @param {string} props.className - Root className of the sidebar\n * @param {number} props.initial - Initial position of the sidebar on the X axis\n * @param {function} props.onToggled - Called when the sidebar is toggled\n * @param {string} props.location - Location of the sidebar on the page ( Left or Right )\n * @param {number} props.sidebarWidth - Width of the sidebar in pixels\n * @param {Object} props.styles - Styles to apply to the sidebar and its children\n * @param {number} props.to - Final position of the sidebar on the X axis when toggled\n * @param {Array|Object|React.Component} props.ToggleComponent - Component to override the default toggle component\n * @param {string} props.type - Type of animation to use ( e.g. 'spring' )\n *\n */\nexport const Sidebar = props => {\n  const {\n    to,\n    initial,\n    children,\n    location,\n    onOffClick,\n    sidebarWidth,\n    ToggleComponent,\n  } = props\n\n  const { isToggled, setIsToggled, onTogglePress } = useSidebarToggle(props)\n  const { animation } = useSidebarAnimate(props, isToggled)\n  const { mainStyles, sidebarStyles } = useSidebarStyles(props)\n\n  const Toggler = isValidComponent(ToggleComponent) && (\n    <ToggleComponent\n      to={to}\n      initial={initial}\n      location={location}\n      toggled={isToggled}\n      onOffClick={onOffClick}\n      onPress={onTogglePress}\n      sidebarWidth={sidebarWidth}\n      setIsToggled={setIsToggled}\n      styles={sidebarStyles?.toggle}\n    />\n  )\n\n  return (\n    <>\n      <Animated.View style={[ mainStyles, { [location]: animation }]}>\n        <SidebarMain\n          className='sidebar-main'\n          style={sidebarStyles?.main}\n        >\n          { location === 'right' && Toggler }\n          <SidebarContainer\n            location={location}\n            sidebarWidth={sidebarWidth}\n            className='sidebar-container'\n            style={sidebarStyles?.container}\n          >\n            { children }\n          </SidebarContainer>\n          { location !== 'right' && Toggler }\n        </SidebarMain>\n      </Animated.View>\n    </>\n  )\n}\n\n// Add the toggle component helper\nSidebar.Toggle = SidebarToggle\nSidebar.defaultProps = {\n  config: noOpObj,\n  location: 'left',\n  type: 'timing',\n  ToggleComponent: SidebarToggle,\n}\n\nSidebar.propTypes = {\n  /**\n   * Final position of the sidebar on the X axis when toggled\n   */\n  to: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n  /**\n   * Initial position of the sidebar on the X axis\n   */\n  initial: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n  /**\n   * Width of the Sidebar. Defaults to styles.main.width or 200px if it does not exist\n   */\n  sidebarWidth: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n  /**\n   * Location the sidebar should be attached to ( left || right ). Defaults to left\n   */\n  location: PropTypes.string,\n  /**\n   * Class name applied to the root-element of the Sidebar\n   */\n  className: PropTypes.string,\n  /**\n   * Custom styles for the sidebar\n   */\n  styles: PropTypes.object,\n  /**\n   * Type of animation to use ( e.g. 'spring' )\n   */\n  type: PropTypes.string,\n  /**\n   * Config object for the toggle animation\n   */\n  config: PropTypes.object,\n  /**\n   * Called when the Sidebar is toggled open or closed\n   */\n  onToggle: PropTypes.func,\n  /**\n   * Called when the Sidebar is toggled open and a click event is fired outside of the component\n   */\n  onOffClick: PropTypes.func,\n  /**\n   * Default state of the toggle state for the Sidebar component\n   */\n  toggled: PropTypes.bool,\n  /**\n   * Component to override the default Toggle Component\n   */\n  ToggleComponent: PropTypes.oneOfType([ PropTypes.node, PropTypes.func ]),\n}\n"],"names":["manageListeners","upHandler","downHandler","window","addEventListener","removeEventListener","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","useCallback","evt","key","useEffect","Input","StyleInjector","KegInput","maxSelectors","kegComponent","displayName","className","FilePicker","React","forwardRef","props","ref","onChange","title","children","style","showFile","onFilePicked","themePath","buttonThemePath","capture","openOnMount","args","componentTheme","useThemePath","file","setFile","handleInputChange","event","target","files","refToInput","useRef","clickInput","current","click","View","useThemeTypeAsClass","type","get","Button","P","name","input","SimpleHeader","rest","useImperativeHandle","isChecked","undefined","setChecked","noOp","textStyle","useStyle","Text","CheckboxHeader","onPress","checked","headerStyles","useMemo","main","content","right","onChangeHandler","_","val","Checkbox","CheckGroup","headerClassName","styles","initChecked","onGroupPress","showHeaderCheckbox","showHeader","groupStyles","useChildrenWithRefs","childrenWithProps","childRefs","headerCheckHandler","mapObj","child","Header","header","useClassList","Item","Form","theme","useTheme","elType","elProps","formTheme","Option","label","text","value","Radio","KegSelect","InternalSelect","getValue","onValueChange","readOnly","setValue","getValueFromChildren","valKey","getInputValueKey","Select","disabled","selectStyles","selectClasses","classRef","useClassName","select","useSelectHandlers","Icon","icon","ChevronDown","color","Slider","KegSwitch","InternalSwitch","getSwitchColors","thumbColor","trackColor","indicator","area","indicatorColor","areaColor","backgroundColor","colors","onTintColor","useCheckedState","themeStyles","setCheckedValue","checkCall","SideComponent","Component","isStr","renderFromType","ChildrenComponent","useSwitchHandle","Switch","LeftComponent","close","RightComponent","SwitchComponent","setCheckedSetter","toBool","elThemePath","activeStyles","typeClassName","left","getChecked","getOnChangeHandler","isWeb","getPlatform","KegText","Element","href","attrs","Touchable","Link","LinkWrapper","noAnimate","toggled","initial","to","useSidebarStyles","sidebarWidth","location","dims","useDimensions","sidebarStyles","width","getSidebarWidth","mainStyles","flex","zIndex","position","top","bottom","height","useSidebarToggle","onToggled","isToggled","setIsToggled","originalToggled","setOriginalToggled","onTogglePress","toggleUpdate","useSidebarAnimate","config","noOpObj","Animated","Value","animation","setAnimation","xPosRef","useLayoutEffect","_value","xPosChanges","from","animationConfig","toValue","useNativeDriver","start","Sidebar","onOffClick","ToggleComponent","Toggler","isValidComponent","toggle","SidebarMain","SidebarContainer","container","Toggle","SidebarToggle","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD,EAAYC,WAAZ,EAA4B;AAClDC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCF,WAAnC;AACAC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCH,SAAjC,EAFkD;AAKlD,SAAO,YAAM;AACXE,IAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCH,WAAtC;AACAC,IAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCJ,SAApC;AACD,GAHD;AAID,CATD;IAeaK,WAAW,GAAG,SAAdA,WAAc,CAAAC,SAAS,EAAI;AACtC,kBAAsCC,cAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAQC,UAAR;AAAA,MAAoBC,aAApB;AAEA,MAAMR,WAAW,GAAGS,iBAAW,CAC7B,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,GAAJ,KAAYN,SAAZ,IAAyBG,aAAa,CAAC,IAAD,CAA1C;AAAA,GAD0B,EAE7B,CAAEA,aAAF,EAAiBH,SAAjB,CAF6B,CAA/B;AAKA,MAAMN,SAAS,GAAGU,iBAAW,CAC3B,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,GAAJ,KAAYN,SAAZ,IAAyBG,aAAa,CAAC,KAAD,CAA1C;AAAA,GADwB,EAE3B,CAAEA,aAAF,EAAiBH,SAAjB,CAF2B,CAA7B;AAKAO,EAAAA,eAAS,CACP;AAAA,WAAMd,eAAe,CAACC,SAAD,EAAYC,WAAZ,CAArB;AAAA,GADO,EAEP,CAAEA,WAAF,EAAeD,SAAf,CAFO,CAAT;AAKA,SAAOQ,UAAP;AACD;;;AC1BD,IAAMM,KAAK,GAAGC,2BAAa,CAACC,eAAD,EAAW;AACpCC,EAAAA,YAAY,EAAE,CADsB;AAEpCC,EAAAA,YAAY,EAAE,IAFsB;AAGpCC,EAAAA,WAAW,EAAE,iBAHuB;AAIpCC,EAAAA,SAAS,EAAE;AAJyB,CAAX,CAA3B;IAsBaC,UAAU,GAAGC,yBAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAQC,IAAR,EAAgB;AACzD,MACEL,SADF,GAaII,KAbJ,CACEJ,SADF;AAAA,MAEEM,QAFF,GAaIF,KAbJ,CAEEE,QAFF;AAAA,MAGEC,KAHF,GAaIH,KAbJ,CAGEG,KAHF;AAAA,MAIEC,QAJF,GAaIJ,KAbJ,CAIEI,QAJF;AAAA,qBAaIJ,KAbJ,CAKEK,KALF;AAAA,MAKEA,KALF,6BAKU,EALV;AAAA,wBAaIL,KAbJ,CAMEM,QANF;AAAA,MAMEA,QANF,gCAMa,IANb;AAAA,MAOEC,YAPF,GAaIP,KAbJ,CAOEO,YAPF;AAAA,yBAaIP,KAbJ,CAQEQ,SARF;AAAA,MAQEA,SARF,iCAQc,oBARd;AAAA,8BAaIR,KAbJ,CASES,eATF;AAAA,MASEA,eATF,sCASoB,0BATpB;AAAA,MAUEC,OAVF,GAaIV,KAbJ,CAUEU,OAVF;AAAA,2BAaIV,KAbJ,CAWEW,WAXF;AAAA,MAWEA,WAXF,mCAWgB,KAXhB;AAAA,MAYKC,IAZL,sDAaIZ,KAbJ;AAeA,MAAMa,cAAc,GAAGC,yBAAY,CAACN,SAAD,CAAnC,CAhByD;AAmBzD,kBAA0BzB,cAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAQgC,IAAR;AAAA,MAAcC,OAAd,iBAnByD;AAsBzD,MAAMC,iBAAiB,GAAG/B,iBAAW,CACnC,UAAAgC,KAAK,EAAI;AACPhB,IAAAA,QAAQ,IAAIA,QAAQ,CAACgB,KAAD,CAApB;AAEA,QAAMH,IAAI,GAAGG,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACAL,IAAAA,IAAI,IAAIR,YAAR,IAAwBA,YAAY,CAACQ,IAAD,CAApC;AACAA,IAAAA,IAAI,IAAIC,OAAO,CAACD,IAAD,CAAf;AACD,GAPkC,EAQnC,CAAEb,QAAF,EAAYK,YAAZ,EAA0BS,OAA1B,CARmC,CAArC,CAtByD;AAmCzD,MAAMK,UAAU,GAAGC,YAAM,EAAzB;AAEA,MAAMC,UAAU,GAAGrC,iBAAW,CAC5B;AAAA,WAAMmC,UAAU,CAACG,OAAX,IAAsBH,UAAU,CAACG,OAAX,CAAmBC,KAAnB,EAA5B;AAAA,GAD4B,EAE5B,CAACJ,UAAD,CAF4B,CAA9B,CArCyD;AA2CzDhC,EAAAA,eAAS,CAAC,YAAM;AACdsB,IAAAA,WAAW,IAAIY,UAAU,EAAzB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACEzB,wCAAC4B,SAAD;AACE,IAAA,SAAS,EAAEC,uCAAmB,CAC5BnB,SAAS,IAAIoB,IADe,EAE5B,gBAF4B,EAG5BhC,SAH4B,CADhC;AAME,IAAA,KAAK,EAAE,CAAEiC,WAAG,CAAChB,cAAD,EAAiB,MAAjB,CAAL,EAA+BR,KAA/B;AANT,KAQEP,wCAACgC,aAAD;AACE,IAAA,OAAO,EAAE3B,KADX;AAEE,IAAA,OAAO,EAAEoB,UAFX;AAGE,IAAA,KAAK,EAAEM,WAAG,CAAChB,cAAD,EAAiB,gBAAjB,CAHZ;AAIE,IAAA,SAAS,EAAEJ;AAJb,KAMIL,QANJ,CARF;AAmBIE,EAAAA,QAAQ,IACNR,wCAACiC,GAAD;AAAG,IAAA,KAAK,EAAEF,WAAG,CAAChB,cAAD,EAAiB,cAAjB;AAAb,KAAiDE,IAAI,CAACiB,IAAtD,CApBN,EAyBElC,wCAAC,KAAD,yCACMc,IADN;AAEE,IAAA,GAAG,EAAE,aAAAqB,KAAK,EAAI;AACZhC,MAAAA,IAAG,KAAKA,IAAG,CAACuB,OAAJ,GAAcS,KAAnB,CAAH;AACAZ,MAAAA,UAAU,CAACG,OAAX,GAAqBS,KAArB;AACD,KALH;AAME,IAAA,QAAQ,EAAEhB,iBANZ;AAOE,IAAA,KAAK,EAAEY,WAAG,CAAChB,cAAD,EAAiB,eAAjB,CAPZ;AAQE,IAAA,IAAI,EAAC,MARP;AASE,IAAA,OAAO,EAAEH;AATX,KAzBF,CADF;AAuCD,CAtFyB;;;ACpB1B,IAAMwB,YAAY,GAAGpC,yBAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACpD,MAAQE,KAAR,GAA6CH,KAA7C,CAAQG,KAAR;AAAA,MAAeP,SAAf,GAA6CI,KAA7C,CAAeJ,SAAf;AAAA,MAA0BS,KAA1B,GAA6CL,KAA7C,CAA0BK,KAA1B;AAAA,MAAoC8B,IAApC,sDAA6CnC,KAA7C,eADoD;AAIpDoC,EAAAA,yBAAmB,CAACnC,GAAD,EAAM;AAAA,WAAO;AAAEoC,MAAAA,SAAS,EAAEC,SAAb;AAAwBC,MAAAA,UAAU,EAAEC;AAApC,KAAP;AAAA,GAAN,CAAnB;AAEA,MAAMC,SAAS,GAAGC,gBAAQ,CAAC,mCAAD,EAAsCrC,KAAtC,CAA1B;AACA,SACEP,wCAAC6C,SAAD;AACE,IAAA,SAAS,EAAE/C,SADb;AAEE,IAAA,KAAK,EAAE6C;AAFT,KAGMN,IAHN,GAKIhC,KALJ,CADF;AASD,CAhBoB,CAArB;AA0BA,IAAMyC,cAAc,GAAG9C,yBAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACtD,MAAQE,KAAR,GAAsDH,KAAtD,CAAQG,KAAR;AAAA,MAAeP,SAAf,GAAsDI,KAAtD,CAAeJ,SAAf;AAAA,MAA0BS,KAA1B,GAAsDL,KAAtD,CAA0BK,KAA1B;AAAA,MAAiCwC,OAAjC,GAAsD7C,KAAtD,CAAiC6C,OAAjC;AAAA,MAA0CC,OAA1C,GAAsD9C,KAAtD,CAA0C8C,OAA1C;AACA,MAAMC,YAAY,GAAGC,aAAO,CAC1B;AAAA,WAAO;AACLC,MAAAA,IAAI,EAAE5C,KADD;AAEL6C,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE;AADA;AAFJ,KAAP;AAAA,GAD0B,EAO1B,CAAC9C,KAAD,CAP0B,CAA5B;AAUA,MAAM+C,eAAe,GAAGlE,iBAAW,CAAC,UAACmE,CAAD,EAAIC,GAAJ;AAAA,WAAYT,OAAZ,aAAYA,OAAZ,uBAAYA,OAAO,CAAGS,GAAH,CAAnB;AAAA,GAAD,EAA6B,CAACT,OAAD,CAA7B,CAAnC;AAEA,SACE/C,wCAACyD,iBAAD;AACE,IAAA,cAAc,EAAEpD,KADlB;AAEE,IAAA,cAAc,EAAEP,SAFlB;AAGE,IAAA,MAAM,EAAEmD,YAHV;AAIE,IAAA,OAAO,EAAED,OAJX;AAKE,IAAA,QAAQ,EAAEM,eALZ;AAME,IAAA,GAAG,EAAEnD,GANP;AAOE,IAAA,KAAK;AAPP,IADF;AAWD,CAzBsB,CAAvB;IA2CauD,UAAU,GAAG1D,yBAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACzD,MACEL,SADF,GAUII,KAVJ,CACEJ,SADF;AAAA,MAEE6D,eAFF,GAUIzD,KAVJ,CAEEyD,eAFF;AAAA,MAGEtD,KAHF,GAUIH,KAVJ,CAGEG,KAHF;AAAA,MAIEC,QAJF,GAUIJ,KAVJ,CAIEI,QAJF;AAAA,MAKEsD,MALF,GAUI1D,KAVJ,CAKE0D,MALF;AAAA,2BAUI1D,KAVJ,CAME2D,WANF;AAAA,MAMEA,WANF,mCAMgB,KANhB;AAAA,MAOEC,YAPF,GAUI5D,KAVJ,CAOE4D,YAPF;AAAA,8BAUI5D,KAVJ,CAQE6D,kBARF;AAAA,MAQEA,kBARF,sCAQuB,KARvB;AAAA,0BAUI7D,KAVJ,CASE8D,UATF;AAAA,MASEA,UATF,kCASe,IATf;AAYA,MAAMC,WAAW,GAAGrB,gBAAQ,CAAC,iBAAD,EAAoBgB,MAApB,CAA5B,CAbyD;AAgBzD,6BAAyCM,uCAAmB,CAC1D5D,QAD0D,EAE1DyD,kBAF0D,CAA5D;AAAA;AAAA,MAAQI,iBAAR;AAAA,MAA2BC,SAA3B,4BAhByD;AAsBzD,MAAMC,kBAAkB,GAAGjF,iBAAW,CACpC,UAAA4D,OAAO,EAAI;AACTc,IAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGd,OAAH,CAAZ;AACAsB,IAAAA,cAAM,CAACF,SAAS,CAAC1C,OAAX,EAAoB,UAAC6B,CAAD,EAAIgB,KAAJ;AAAA;AAAA,aAAcA,KAAd,aAAcA,KAAd,4CAAcA,KAAK,CAAE9B,UAArB,sDAAc,uBAAA8B,KAAK,EAAevB,OAAf,CAAnB;AAAA,KAApB,CAAN;AACD,GAJmC,EAKpC,CAACoB,SAAD,CALoC,CAAtC;AAQA,MAAMI,MAAM,GAAG,SAATA,MAAS;AAAA,WACbT,kBAAkB,GAChB/D,wCAAC,cAAD;AACE,MAAA,SAAS,EAAE2D,eADb;AAEE,MAAA,KAAK,EAAEM,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEQ,MAFtB;AAGE,MAAA,KAAK,EAAEpE,KAHT;AAIE,MAAA,OAAO,EAAE0D,kBAAkB,IAAIM,kBAJjC;AAKE,MAAA,OAAO,EAAEN,kBAAkB,GAAGF,WAAH,GAAiBrB,SAL9C;AAME,MAAA,GAAG,EAAErC;AANP,MADgB,GAUhBH,wCAAC,YAAD;AACE,MAAA,SAAS,EAAE2D,eADb;AAEE,MAAA,KAAK,EAAEM,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEQ,MAFtB;AAGE,MAAA,KAAK,EAAEpE,KAHT;AAIE,MAAA,GAAG,EAAEF;AAJP,MAXW;AAAA,GAAf;AAmBA,SACEH,wCAAC4B,SAAD;AACE,IAAA,SAAS,EAAE8C,yBAAY,CAAC,iBAAD,EAAoB5E,SAApB,CADzB;AAEE,IAAA,KAAK,EAAEmE,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEd;AAFtB,KAIIa,UAAU,IAAIhE,wCAAC,MAAD,OAJlB,EAKImE,iBALJ,CADF;AASD,CA1DyB;AA4D1BT,UAAU,CAACiB,IAAX,GAAkBlB,iBAAlB;;;IChIamB,IAAI,GAAG5E,yBAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACnD,MAAM0E,KAAK,GAAGC,gBAAQ,EAAtB;AAEA,MACExE,QADF,GAQIJ,KARJ,CACEI,QADF;AAAA,MAEER,SAFF,GAQII,KARJ,CAEEJ,SAFF;AAAA,MAQII,KARJ,CAGE6E,MAHF;AAAA,UAIExE,KAJF,GAQIL,KARJ,CAIEK,KAJF;AAAA,MAKEuB,IALF,GAQI5B,KARJ,CAKE4B,IALF;AAAA,yBAQI5B,KARJ,CAMEQ,SANF;AAAA,MAMEA,SANF,qDAM2BoB,IAAI,IAAI,SANnC;AAAA,MAOKkD,OAPL,sDAQI9E,KARJ;AAUA,MAAM+E,SAAS,GAAGjE,yBAAY,CAACN,SAAD,CAA9B;AAEA,SACEV,wCAAC4B,SAAD;AACE,IAAA,iBAAiB,EAAC,MADpB;AAEE,IAAA,SAAS,EAAE8C,yBAAY,CAAC,UAAD,EAAa5E,SAAb;AAFzB,KAGMkF,OAHN;AAIE,IAAA,KAAK,EAAE,CAAEjD,WAAG,CAAC8C,KAAD,EAAQ,mBAAR,CAAL,EAAmCI,SAAnC,EAA8C1E,KAA9C,CAJT;AAKE,IAAA,GAAG,EAAEJ;AALP,MAOIG,QAPJ,CADF;AAWD,CA1BmB;;;ICfP4E,MAAM,GAAG,SAATA,MAAS,CAAAhF,KAAK,EAAI;AAC7B,MAAQI,QAAR,GAAyDJ,KAAzD,CAAQI,QAAR;AAAA,MAAkB6E,KAAlB,GAAyDjF,KAAzD,CAAkBiF,KAAlB;AAAA,MAAyDjF,KAAzD,CAAyBK,KAAzB;AAAA,UAAgC6E,IAAhC,GAAyDlF,KAAzD,CAAgCkF,IAAhC;AAAA,MAAsCC,KAAtC,GAAyDnF,KAAzD,CAAsCmF,KAAtC;AAAA,MAAgDvE,IAAhD,sDAAyDZ,KAAzD;AAEA,SACEF,yFACMc,IADN;AAEE,IAAA,KAAK,EAAEuE,KAAK,IAAIF,KAAT,IAAkBC;AAF3B,MAIID,KAAK,IAAIE,KAAT,IAAkBD,IAAlB,IAA0B9E,QAJ9B,CADF;AAQD;;ICXYgF,KAAK,GAAG,SAARA,KAAQ,CAAApF,KAAK;AAAA,SAAIF,wCAACR,WAAD,yCACxBU,KADwB;AAE5B,IAAA,IAAI,EAAC;AAFuB,KAAJ;AAAA;;;ACc1B,IAAMqF,SAAS,GAAG9F,2BAAa,CAAC+F,aAAD,EAAiB;AAC9C7F,EAAAA,YAAY,EAAE,CADgC;AAE9CC,EAAAA,YAAY,EAAE,IAFgC;AAG9CC,EAAAA,WAAW,EAAE,QAHiC;AAI9CC,EAAAA,SAAS,EAAE;AAJmC,CAAjB,CAA/B;AAaA,IAAM2F,QAAQ,GAAG,SAAXA,QAAW,CAAAvF,KAAK,EAAI;AACxB,MAAQI,QAAR,GAA+DJ,KAA/D,CAAQI,QAAR;AAAA,MAAkBF,QAAlB,GAA+DF,KAA/D,CAAkBE,QAAlB;AAAA,MAA4BsF,aAA5B,GAA+DxF,KAA/D,CAA4BwF,aAA5B;AAAA,MAA2CC,QAA3C,GAA+DzF,KAA/D,CAA2CyF,QAA3C;AAAA,MAAqDN,KAArD,GAA+DnF,KAA/D,CAAqDmF,KAArD;AAEA,MAAMO,QAAQ,GAAGC,kCAAoB,CAACR,KAAD,EAAQ/E,QAAR,CAArC;AACA,MAAMwF,MAAM,GAAGC,8BAAgB,CAAC,KAAD,EAAQ3F,QAAR,EAAkBsF,aAAlB,EAAiCC,QAAjC,CAA/B;AAEA,uDAAUG,MAAV,EAAmBF,QAAnB;AACD,CAPD;IAiBaI,MAAM,GAAGhG,yBAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA;AACrD,MACEL,SADF,GAaII,KAbJ,CACEJ,SADF;AAAA,MAEEQ,QAFF,GAaIJ,KAbJ,CAEEI,QAFF;AAAA,MAGE2F,QAHF,GAaI/F,KAbJ,CAGE+F,QAHF;AAAA,MAaI/F,KAbJ,CAIEyF,QAJF;AAAA,UAKEvF,QALF,GAaIF,KAbJ,CAKEE,QALF;AAAA,MAMEsF,aANF,GAaIxF,KAbJ,CAMEwF,aANF;AAAA,MAOEnF,KAPF,GAaIL,KAbJ,CAOEK,KAPF;AAAA,MAQEqD,MARF,GAaI1D,KAbJ,CAQE0D,MARF;AAAA,oBAaI1D,KAbJ,CASE4B,IATF;AAAA,MASEA,IATF,4BASS,SATT;AAAA,yBAaI5B,KAbJ,CAUEQ,SAVF;AAAA,MAUEA,SAVF,uDAU6BoB,IAV7B;AAAA,MAaI5B,KAbJ,CAWEmF,KAXF;AAAA,UAYKL,OAZL,sDAaI9E,KAbJ;AAeA,MAAMgG,YAAY,GAAGlF,yBAAY,CAACN,SAAD,EAAYkD,MAAZ,CAAjC;AACA,MAAMuC,aAAa,GAAGtE,uCAAmB,CACvCnB,SAAS,IAAIoB,IAD0B,EAEvC,YAFuC,EAGvChC,SAHuC,CAAzC;AAKA,MAAMsG,QAAQ,GAAGC,yBAAY,CAAC,YAAD,EAAeF,aAAf,EAA8BhG,GAA9B,CAA7B;AAEA,SACEH,wCAAC4B,SAAD;AAAM,IAAA,KAAK,EAAE,CAAEsE,YAAY,CAAC/C,IAAf,EAAqB5C,KAArB;AAAb,KACEP,wCAAC,SAAD;AACE,IAAA,GAAG,EAAEoG;AADP,KAEMpB,OAFN;AAGE,IAAA,OAAO,EAAE,CAACiB,QAHZ;AAIE,IAAA,KAAK,EAAE,CAACC,YAAY,CAACI,MAAd;AAJT,KAKMb,QAAQ,CAACvF,KAAD,CALd,EAMMqG,mCAAiB,CAAC;AAAEnG,IAAAA,QAAQ,EAARA,QAAF;AAAYsF,IAAAA,aAAa,EAAbA;AAAZ,GAAD,CANvB,GAQIpF,QARJ,CADF,EAWEN,wCAACwG,SAAD;AACE,IAAA,MAAM,EAAEN,YAAY,CAACO,IADvB;AAEE,IAAA,SAAS,EAAEC,uBAFb;AAGE,IAAA,KAAK,EAAET,QAAQ,2BAAIC,YAAY,CAACO,IAAjB,gFAAI,mBAAmBR,QAAvB,0DAAI,sBAA6BU,KAAjC;AAHjB,IAXF,CADF;AAmBD,CA3CqB;;IC/CTC,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAO,IAAP;AACD;;;ACmBD,IAAMC,SAAS,GAAGpH,2BAAa,CAACqH,cAAD,EAAiB;AAC9CnH,EAAAA,YAAY,EAAE,CADgC;AAE9CC,EAAAA,YAAY,EAAE,IAFgC;AAG9CC,EAAAA,WAAW,EAAE,QAHiC;AAI9CC,EAAAA,SAAS,EAAE;AAJmC,CAAjB,CAA/B;AAeA,IAAMiH,eAAe,GAAG,SAAlBA,eAAkB,CACtBC,UADsB,EAEtBC,UAFsB,QAInB;AAAA,4BADDC,SACC;AAAA,MADDA,SACC,+BADW,EACX;AAAA,uBADeC,IACf;AAAA,MADeA,IACf,0BADsB,EACtB;AACH,MAAMC,cAAc,GAAGJ,UAAU,IAAIE,SAAS,CAACP,KAA/C;AACA,MAAMU,SAAS,GAAGJ,UAAU,IAAIE,IAAI,CAACG,eAArC;AACA,MAAMC,MAAM,yFACNH,cAAc,IAAI;AAAEJ,IAAAA,UAAU,EAAEA,UAAU,IAAIL;AAA5B,GADZ,GAENU,SAAS,IAAI;AAAEJ,IAAAA,UAAU,EAAEI,SAAd;AAAyBG,IAAAA,WAAW,EAAEH;AAAtC,GAFP,CAAZ;AAKA,SAAOE,MAAP;AACD,CAbD;AAuBA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAClF,SAAD,EAAYmF,WAAZ,EAA4B;AAClD,MAAM7C,KAAK,GAAGC,gBAAQ,EAAtB;AACA,SAAO5B,aAAO,CAAC,YAAM;AACnB,WAAO2B,KAAK,CAAC9C,GAAN,CAAU2F,WAAV,EAAuB;AAC5BtE,MAAAA,OAAO,EAAE;AACP+D,QAAAA,IAAI,wFACCpF,WAAG,CAAC2F,WAAD,EAAc,kBAAd,CADJ,GAEEnF,SAAS,IAAIR,WAAG,CAAC2F,WAAD,EAAc,iBAAd,CAFlB,CADG;AAKPR,QAAAA,SAAS,wFACJnF,WAAG,CAAC2F,WAAD,EAAc,uBAAd,CADC,GAEHnF,SAAS,IAAIR,WAAG,CAAC2F,WAAD,EAAc,sBAAd,CAFb;AALF;AADmB,KAAvB,CAAP;AAYD,GAba,EAaX,CAACnF,SAAD,CAbW,CAAd;AAcD,CAhBD;AA2BA,IAAMoF,eAAe,GAAG,SAAlBA,eAAkB,CAACpF,SAAD,EAAYE,UAAZ,EAAwBrC,QAAxB,EAAqC;AAC3D,SAAO,UAAAgB,KAAK,EAAI;AACdqB,IAAAA,UAAU,CAAC,CAACF,SAAF,CAAV;AACAqF,IAAAA,iBAAS,CAACxH,QAAD,EAAWgB,KAAX,EAAkB,CAACmB,SAAnB,CAAT;AACD,GAHD;AAID,CALD;AAgBA,IAAMsF,aAAa,GAAG,SAAhBA,aAAgB,QAA0B;AAAA,MAAvBC,SAAuB,SAAvBA,SAAuB;AAAA,MAAZvH,KAAY,SAAZA,KAAY;AAC9C,SAAOwH,aAAK,CAACD,SAAD,CAAL,GACL9H,wCAAC6C,SAAD;AAAM,IAAA,KAAK,EAAEtC;AAAb,KAAsBuH,SAAtB,CADK,GAGLE,6BAAc,CAACF,SAAD,EAAY;AAAEvH,IAAAA,KAAK,EAAEqD,MAAM,CAACR;AAAhB,GAAZ,CAHhB;AAKD,CAND;AAcA,IAAM6E,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAG3H,QAAH,SAAGA,QAAH;AAAA,SACxBN,kFAAIgI,6BAAc,CAAC1H,QAAD,EAAW,EAAX,EAAe,IAAf,CAAlB,CADwB;AAAA,CAA1B;AAUA,IAAM4H,eAAe,GAAG,SAAlBA,eAAkB,CAAC/H,GAAD,EAAMoC,SAAN,EAAiBE,UAAjB,EAAgC;AACtD,SAAOH,yBAAmB,CACxBnC,GADwB,EAExB;AAAA,WAAO;AACLoC,MAAAA,SAAS,EAATA,SADK;AAELE,MAAAA,UAAU,EAAVA;AAFK,KAAP;AAAA,GAFwB,EAMxB,CAAEtC,GAAF,EAAOoC,SAAP,EAAkBE,UAAlB,CANwB,CAA1B;AAQD,CATD;IAiBa0F,MAAM,GAAGlI,gBAAU,CAAC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC/C,MACEL,SADF,GAoBII,KApBJ,CACEJ,SADF;AAAA,MAEEkD,OAFF,GAoBI9C,KApBJ,CAEE8C,OAFF;AAAA,MAGE1C,QAHF,GAoBIJ,KApBJ,CAGEI,QAHF;AAAA,MAoBIJ,KApBJ,CAIE6E,MAJF;AAAA,UAKEkB,QALF,GAoBI/F,KApBJ,CAKE+F,QALF;AAAA,MAMEmC,aANF,GAoBIlI,KApBJ,CAMEkI,aANF;AAAA,MAOEC,KAPF,GAoBInI,KApBJ,CAOEmI,KAPF;AAAA,MAQEjI,QARF,GAoBIF,KApBJ,CAQEE,QARF;AAAA,MASEsF,aATF,GAoBIxF,KApBJ,CASEwF,aATF;AAAA,MAUE4C,cAVF,GAoBIpI,KApBJ,CAUEoI,cAVF;AAAA,MAWE1E,MAXF,GAoBI1D,KApBJ,CAWE0D,MAXF;AAAA,MAYE2E,eAZF,GAoBIrI,KApBJ,CAYEqI,eAZF;AAAA,MAoBIrI,KApBJ,CAaEsI,gBAbF;AAAA,UAcE1G,IAdF,GAoBI5B,KApBJ,CAcE4B,IAdF;AAAA,MAeEpB,SAfF,GAoBIR,KApBJ,CAeEQ,SAfF;AAAA,MAgBEsG,UAhBF,GAoBI9G,KApBJ,CAgBE8G,UAhBF;AAAA,MAiBEC,UAjBF,GAoBI/G,KApBJ,CAiBE+G,UAjBF;AAAA,MAkBE5B,KAlBF,GAoBInF,KApBJ,CAkBEmF,KAlBF;AAAA,MAmBKL,OAnBL,sDAoBI9E,KApBJ;AAsBA,kBAAkCjB,cAAQ,CAACwJ,cAAM,CAACzF,OAAO,IAAIqC,KAAZ,CAAP,CAA1C;AAAA;AAAA,MAAQ9C,SAAR;AAAA,MAAmBE,UAAnB,iBAvB+C;AA4B/CyF,EAAAA,eAAe,CAAC/H,GAAD,EAAMoC,SAAN,EAAiBE,UAAjB,CAAf;AAEA,MAAMiG,WAAW,GACfhI,SAAS,0BAAoB2H,KAAK,IAAI,OAAV,IAAsB,SAAzC,CADX;AAEA,MAAMX,WAAW,GAAG1G,yBAAY,CAAC0H,WAAD,EAAc9E,MAAd,CAAhC;AACA,MAAM+E,YAAY,GAAGlB,eAAe,CAAClF,SAAD,EAAYmF,WAAZ,CAApC;AACA,MAAMkB,aAAa,GAAG/G,uCAAmB,CACvC6G,WAAW,IAAI5G,IADwB,EAEvC,YAFuC,EAGvChC,SAHuC,CAAzC;AAMA,SACGQ,QAAQ,IACPN,wCAAC4B,SAAD;AACE,IAAA,SAAS,EAAEgH,aADb;AAEE,IAAA,KAAK,EAAED,YAAY,CAACxF;AAFtB,KAIEnD,wCAAC,iBAAD;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,QAAQ,EAAEM;AAFZ,IAJF,CADF,IAWEN,wCAAC4B,SAAD;AACE,IAAA,SAAS,EAAEgH,aADb;AAEE,IAAA,KAAK,EAAED,YAAY,CAACxF;AAFtB,KAIIiF,aAAa,IACbpI,wCAAC,aAAD;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,SAAS,EAAEoI,aAFb;AAGE,IAAA,KAAK,EAAEO,YAAY,CAACvF,OAAb,CAAqByF;AAH9B,IALJ,EAYIN,eAAe,GACfP,6BAAc,CAACO,eAAD,wFACTrI,KADS;AAEZ0D,IAAAA,MAAM,EAAE+E,YAAY,CAACvF;AAFT,KADC,GAMfpD,wCAAC,SAAD;AACE,IAAA,OAAO,EAAEgF,OADX;AAEE,IAAA,QAAQ,EAAEiB,QAFZ;AAGE,IAAA,MAAM,EAAE0C,YAAY,CAACvF;AAHvB,KAIM2D,eAAe,CAACC,UAAD,EAAaC,UAAb,EAAyB0B,YAAY,CAACvF,OAAtC,CAJrB,EAKM0F,qBAAU,CAAC,KAAD,EAAQvG,SAAR,CALhB,EAMMwG,qCAAkB,CACpB,KADoB,EAEpBpB,eAAe,CAACpF,SAAD,EAAYE,UAAZ,EAAwBrC,QAAQ,IAAIsF,aAApC,CAFK,CANxB,EAlBJ,EA+BI4C,cAAc,IACdtI,wCAAC,aAAD;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,SAAS,EAAEsI,cAFb;AAGE,IAAA,KAAK,EAAEK,YAAY,CAACvF,OAAb,CAAqBC;AAH9B,IAhCJ,CAZJ;AAqDD,CA7F+B;;;ACvIhC,IAAM2F,KAAK,GAAGC,uBAAW,OAAO,KAAhC;AACA,IAAMpG,IAAI,GAAGqG,eAAO,CAAC,MAAD,CAApB;AAEA,IAAMC,OAAO,GAAGnJ,yBAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC/C,MACEG,QADF,GASIJ,KATJ,CACEI,QADF;AAAA,MAEER,SAFF,GASII,KATJ,CAEEJ,SAFF;AAAA,MAGEkF,OAHF,GASI9E,KATJ,CAGE8E,OAHF;AAAA,MAIEoE,IAJF,GASIlJ,KATJ,CAIEkJ,IAJF;AAAA,MASIlJ,KATJ,CAKE6C,OALF;AAAA,UAMExC,KANF,GASIL,KATJ,CAMEK,KANF;AAAA,MAOEc,MAPF,GASInB,KATJ,CAOEmB,MAPF;AAAA,MAQKgI,KARL,sDASInJ,KATJ;AAWA,SACEF,wCAACsJ,mBAAD;AACE,IAAA,SAAS,EAAE5E,yBAAY,CAAC,UAAD,EAAa5E,SAAb;AADzB,KAEMkF,OAFN,EAGMqE,KAHN;AAIE,IAAA,QAAQ,EAAElJ;AAJZ,MAMEH,wCAAC,IAAD;AACE,IAAA,iBAAiB,EAAC,MADpB;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,IAAA,KAAK,EAAEO,KAHT;AAIE,IAAA,IAAI,EAAE6I,IAJR;AAKE,IAAA,MAAM,EAAE/H;AALV,KAOIf,QAPJ,CANF,CADF;AAkBD,CA9Be,CAAhB;IAgCMiJ,IAAI,GAAG,SAAPA,IAAO,CAAArJ,KAAK;AAAA,SAAIF,wCAACwJ,wBAAD,yCAChBtJ,KADgB;AAEpB,IAAA,OAAO,EAAEiJ,OAFW;AAGpB,IAAA,KAAK,EAAEH;AAHa,KAAJ;AAAA;;ACblB,IAAMS,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAUhI,OAAV;AAAA,MAAqBiI,OAArB,QAAqBA,OAArB;AAAA,MAA8BC,EAA9B,QAA8BA,EAA9B;AAAA,SACf,CAACF,OAAD,IAAYhI,OAAO,KAAKiI,OAAzB,IAAsCD,OAAO,IAAIhI,OAAO,KAAKkI,EAD7C;AAAA,CAAlB;AAWA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,QAAiD;AAAA,MAA9CF,OAA8C,SAA9CA,OAA8C;AAAA,MAArC/F,MAAqC,SAArCA,MAAqC;AAAA,MAA7BkG,YAA6B,SAA7BA,YAA6B;AAAA,MAAfC,QAAe,SAAfA,QAAe;AACxE,MAAMC,IAAI,GAAGC,qBAAa,EAA1B;AACA,MAAMC,aAAa,GAAGtH,gBAAQ,CAAC,SAAD,EAAYgB,MAAZ,CAA9B;AACA,MAAMuG,KAAK,GAAGC,uBAAe,CAACN,YAAD,EAAeH,OAAf,EAAwBO,aAAxB,CAA7B;AAEA,MAAMG,UAAU,GAAGnH,aAAO,CAAC,YAAM;AAC/B;AACEoH,MAAAA,IAAI,EAAE,CADR;AAEEC,MAAAA,MAAM,EAAE,CAFV;AAGEC,MAAAA,QAAQ,EAAE,OAHZ;AAIEC,MAAAA,GAAG,EAAE,CAJP;AAKEC,MAAAA,MAAM,EAAE,CALV;AAMEC,MAAAA,MAAM,EAAEX,IAAI,CAACW;AANf,OAOKT,aAPL,aAOKA,aAPL,uBAOKA,aAAa,CAAE/G,IAPpB;AAQEgH,MAAAA,KAAK,EAAEA;AART,OASGJ,QAAQ,KAAK,OAAb,GAAuBA,QAAvB,GAAkC,MATrC,EAS8CJ,OAT9C;AAWD,GAZyB,EAYvB,CAAEI,QAAF,EAAYI,KAAZ,EAAmBR,OAAnB,EAA4BO,aAA5B,aAA4BA,aAA5B,uBAA4BA,aAAa,CAAE/G,IAA3C,EAAiD6G,IAAjD,aAAiDA,IAAjD,uBAAiDA,IAAI,CAAEW,MAAvD,CAZuB,CAA1B;AAcA,SAAO;AAAEN,IAAAA,UAAU,EAAVA,UAAF;AAAcH,IAAAA,aAAa,EAAbA;AAAd,GAAP;AACD,CApBD;AA8BA,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA1K,KAAK,EAAI;AAChC,MAAQwJ,OAAR,GAAmDxJ,KAAnD,CAAQwJ,OAAR;AAAA,yBAAmDxJ,KAAnD,CAAiB2K,SAAjB;AAAA,MAAiBA,SAAjB,iCAA6BnI,YAA7B;AAAA,MAAmCiH,OAAnC,GAAmDzJ,KAAnD,CAAmCyJ,OAAnC;AAAA,MAA4CC,EAA5C,GAAmD1J,KAAnD,CAA4C0J,EAA5C,CADgC;AAIhC,kBAAoC3K,cAAQ,CAACyK,OAAD,CAA5C;AAAA;AAAA,MAAQoB,SAAR;AAAA,MAAmBC,YAAnB;AACA,mBAAgD9L,cAAQ,CAACyK,OAAD,CAAxD;AAAA;AAAA,MAAQsB,eAAR;AAAA,MAAyBC,kBAAzB,iBALgC;AAWhC1L,EAAAA,eAAS,CAAC,YAAM;AACd,QAAIyL,eAAe,KAAKtB,OAAxB,EAAiC;AAEjCuB,IAAAA,kBAAkB,CAACvB,OAAD,CAAlB;AACAqB,IAAAA,YAAY,CAACrB,OAAD,CAAZ;AACD,GALQ,EAKN,CAAEA,OAAF,EAAWsB,eAAX,CALM,CAAT,CAXgC;AAoBhC,MAAME,aAAa,GAAG9L,iBAAW,CAC/B,UAAAgC,KAAK,EAAI;AACP,QAAM+J,YAAY,GAAG,CAACL,SAAtB;AACAC,IAAAA,YAAY,CAACI,YAAD,CAAZ;AACAvD,IAAAA,iBAAS,CAACiD,SAAD,EAAYM,YAAZ,CAAT;AACD,GAL8B,EAM/B,CAAEL,SAAF,EAAaC,YAAb,EAA2BpB,OAA3B,EAAoCC,EAApC,CAN+B,CAAjC;AASA,SAAO;AACLF,IAAAA,OAAO,EAAPA,OADK;AAELoB,IAAAA,SAAS,EAATA,SAFK;AAGLC,IAAAA,YAAY,EAAZA,YAHK;AAILG,IAAAA,aAAa,EAAbA;AAJK,GAAP;AAMD,CAnCD;AA8CA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAClL,KAAD,EAAQ4K,SAAR,EAAsB;AAC9C,sBAA2D5K,KAA3D,CAAQmL,MAAR;AAAA,MAAQA,MAAR,8BAAiBC,eAAjB;AAAA,MAA0B3B,OAA1B,GAA2DzJ,KAA3D,CAA0ByJ,OAA1B;AAAA,MAAmCC,EAAnC,GAA2D1J,KAA3D,CAAmC0J,EAAnC;AAAA,oBAA2D1J,KAA3D,CAAuC4B,IAAvC;AAAA,MAAuCA,IAAvC,4BAA8C,QAA9C,eAD8C;AAI9C,mBAAoC7C,cAAQ,CAAC,IAAIsM,uBAAQ,CAACC,KAAb,CAAmB7B,OAAnB,CAAD,CAA5C;AAAA;AAAA,MAAQ8B,SAAR;AAAA,MAAmBC,YAAnB,iBAJ8C;AAO9C,MAAMC,OAAO,GAAGnK,YAAM,CAAC;AAAEmI,IAAAA,OAAO,EAAPA,OAAF;AAAWC,IAAAA,EAAE,EAAFA;AAAX,GAAD,CAAtB,CAP8C;AAY9CgC,EAAAA,qBAAe,CAAC,YAAM;AACpB,QAAI,CAACD,OAAO,CAACjK,OAAb,EAAsB,OADF;AAKpB,QAAI+H,SAAS,CAACqB,SAAD,EAAYW,SAAS,CAACI,MAAtB,EAA8BF,OAAO,CAACjK,OAAtC,CAAb,EAA6D;AAE7D,2BAAwBiK,OAAO,CAACjK,OAAhC;AAAA,QAAQiI,OAAR,oBAAQA,OAAR;AAAA,QAAiBC,EAAjB,oBAAiBA,EAAjB,CAPoB;AAUpB,QAAMkC,WAAW,GAAGhB,SAAS,GACzB;AAAEiB,MAAAA,IAAI,EAAEpC,OAAR;AAAiBC,MAAAA,EAAE,EAAEA;AAArB,KADyB,GAEzB;AAAEmC,MAAAA,IAAI,EAAEnC,EAAR;AAAYA,MAAAA,EAAE,EAAED;AAAhB,KAFJ,CAVoB;AAepB8B,IAAAA,SAAS,CAAC7F,QAAV,CAAmBkG,WAAW,CAACC,IAA/B,EAfoB;AAkBpB,QAAMC,eAAe,GAAGX,MAAM,yFACrBA,MADqB;AACbY,MAAAA,OAAO,EAAEH,WAAW,CAAClC;AADR,SAE1B;AAAEqC,MAAAA,OAAO,EAAEH,WAAW,CAAClC;AAAvB,KAFJ;AAIAoC,IAAAA,eAAe,CAACE,eAAhB,GAAkC,KAAlC;AACAX,IAAAA,uBAAQ,CAACzJ,IAAD,CAAR,CAAe2J,SAAf,EAA0BO,eAA1B,EAA2CG,KAA3C,GAvBoB;AA0BrB,GA1Bc,EA0BZ,CAAErB,SAAF,EAAahJ,IAAb,EAAmBuJ,MAAnB,CA1BY,CAAf;AA4BA,SAAO;AAAEI,IAAAA,SAAS,EAATA,SAAF;AAAaC,IAAAA,YAAY,EAAZA;AAAb,GAAP;AACD,CAzCD;IA2DaU,OAAO,GAAG,SAAVA,OAAU,CAAAlM,KAAK,EAAI;AAC9B,MACE0J,EADF,GAQI1J,KARJ,CACE0J,EADF;AAAA,MAEED,OAFF,GAQIzJ,KARJ,CAEEyJ,OAFF;AAAA,MAGErJ,QAHF,GAQIJ,KARJ,CAGEI,QAHF;AAAA,MAIEyJ,QAJF,GAQI7J,KARJ,CAIE6J,QAJF;AAAA,MAKEsC,UALF,GAQInM,KARJ,CAKEmM,UALF;AAAA,MAMEvC,YANF,GAQI5J,KARJ,CAME4J,YANF;AAAA,MAOEwC,eAPF,GAQIpM,KARJ,CAOEoM,eAPF;AAUA,0BAAmD1B,gBAAgB,CAAC1K,KAAD,CAAnE;AAAA,MAAQ4K,SAAR,qBAAQA,SAAR;AAAA,MAAmBC,YAAnB,qBAAmBA,YAAnB;AAAA,MAAiCG,aAAjC,qBAAiCA,aAAjC;AACA,2BAAsBE,iBAAiB,CAAClL,KAAD,EAAQ4K,SAAR,CAAvC;AAAA,MAAQW,SAAR,sBAAQA,SAAR;AACA,0BAAsC5B,gBAAgB,CAAC3J,KAAD,CAAtD;AAAA,MAAQmK,UAAR,qBAAQA,UAAR;AAAA,MAAoBH,aAApB,qBAAoBA,aAApB;AAEA,MAAMqC,OAAO,GAAGC,iCAAgB,CAACF,eAAD,CAAhB,IACdtM,wCAAC,eAAD;AACE,IAAA,EAAE,EAAE4J,EADN;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,QAAQ,EAAEI,QAHZ;AAIE,IAAA,OAAO,EAAEe,SAJX;AAKE,IAAA,UAAU,EAAEuB,UALd;AAME,IAAA,OAAO,EAAEnB,aANX;AAOE,IAAA,YAAY,EAAEpB,YAPhB;AAQE,IAAA,YAAY,EAAEiB,YARhB;AASE,IAAA,MAAM,EAAEb,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEuC;AATzB,IADF;AAcA,SACEzM,kFACEA,wCAACuL,uBAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAAElB,UAAF,gDAAiBN,QAAjB,EAA4B0B,SAA5B;AAAtB,KACEzL,wCAAC0M,mBAAD;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,KAAK,EAAExC,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAE/G;AAFxB,KAII4G,QAAQ,KAAK,OAAb,IAAwBwC,OAJ5B,EAKEvM,wCAAC2M,wBAAD;AACE,IAAA,QAAQ,EAAE5C,QADZ;AAEE,IAAA,YAAY,EAAED,YAFhB;AAGE,IAAA,SAAS,EAAC,mBAHZ;AAIE,IAAA,KAAK,EAAEI,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAE0C;AAJxB,KAMItM,QANJ,CALF,EAaIyJ,QAAQ,KAAK,OAAb,IAAwBwC,OAb5B,CADF,CADF,CADF;AAqBD;AAGDH,OAAO,CAACS,MAAR,GAAiBC,2BAAjB;AACAV,OAAO,CAACW,YAAR,GAAuB;AACrB1B,EAAAA,MAAM,EAAEC,eADa;AAErBvB,EAAAA,QAAQ,EAAE,MAFW;AAGrBjI,EAAAA,IAAI,EAAE,QAHe;AAIrBwK,EAAAA,eAAe,EAAEQ;AAJI,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}