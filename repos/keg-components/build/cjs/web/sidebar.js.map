{"version":3,"file":"sidebar.js","sources":["../../../src/components/sidebar/sidebar.restyle.js"],"sourcesContent":["import React from 'react'\nimport { View } from 'KegView'\nimport { Touchable } from '../touchable'\nimport { ChevronDown } from '../../assets/icons'\nimport { noOpObj, isNum } from '@keg-hub/jsutils'\nimport { reStyle } from '@keg-hub/re-theme/reStyle'\nimport { useStyle, useThemeHover } from '@keg-hub/re-theme'\nimport { isCssUnits } from '../../utils/helpers/isCssUnits'\n\nconst ToggleElWidth = 20\n\n/**\n * Helper method to get the width of the sidebar from the passed in props\n * @function\n * @export\n * @public\n * @param {number} width - The width of the sidebar\n * @param {number} initial - The initial width of the sidebar if width is not passed in\n * @param {Object} styles - The styles object to pull the width from if it exists\n *\n * @returns {boolean} - If the animation should NOT run\n */\nexport const getSidebarWidth = (width, initial, styles = noOpObj) => {\n  return isNum(width) || isCssUnits(width)\n    ? width\n    : isNum(styles?.main?.width) || isCssUnits(styles?.main?.width)\n      ? styles?.main?.width\n      : isNum(initial) || isCssUnits(initial)\n        ? initial\n        : 200\n}\n\n/**\n * Gets the location of the Sidebar based on the passed in props\n * @type {function}\n *\n * @returns {string|number} - Initial Location of the Sidebar component\n */\nconst getToggleLocation = (width, initial, styles, location) => {\n  const fullWidth = getSidebarWidth(width, initial, styles)\n\n  // Width of the toggle component, measured from the right side in\n  return location === 'left' ? fullWidth : ToggleElWidth\n}\n\n/**\n * Restyles View component for the Main Sidebar Component\n * @type {React.Component}\n *\n * @returns {React.Component} - Wrapped reStyle View Component\n */\nexport const SidebarMain = reStyle(View)({\n  h: '100%',\n})\n\n/**\n * Restyles View component\n * @type {React.Component}\n * @export\n * @public\n * @param {Object} theme - Global theme object\n * @param {Object} props\n * @param {number} props.width - The width of the sidebar\n * @param {number} props.initial - The initial width of the sidebar if width is not passed in\n * @param {Object} props.styles - The styles object to pull the width from if it exists\n *\n * @returns {React.Component} - Wrapped reStyle View Component\n */\nexport const SidebarContainer = reStyle(View)((theme, props) => ({\n  fl: 1,\n  shadowRadius: 6,\n  alS: `stretch`,\n  shadowOpacity: 0.05,\n  bgC: theme.colors.palette.white01,\n  shadowOffset:\n    props.location === 'right'\n      ? { width: -2, height: 2 }\n      : { width: 2, height: 2 },\n  shadowColor: theme.colors.palette.black03,\n  w: getSidebarWidth(props.sidebarWidth, props.initial, props.styles),\n}))\n\nexport const ToggleMain = reStyle(View)((theme, props) => {\n  return {\n    position: 'absolute',\n  }\n})\n\n/**\n * Restyles Touchable component\n * @type {React.Component}\n * @export\n * @public\n * @param {Object} theme - Global theme object\n * @param {Object} props\n *\n * @returns {React.Component} - Wrapped reStyle Touchable Component\n */\nexport const ToggleAction = reStyle(({ styles, location, ...props }) => {\n  const locStyles = useStyle(styles.main, styles[location])\n  const [ ref, style ] = useThemeHover(locStyles, styles.hover)\n\n  return <Touchable\n    {...props}\n    style={style}\n    touchRef={ref}\n  />\n}, 'styles')((theme, props) => ({\n  main: {\n    w: ToggleElWidth,\n    pH: 1,\n    pV: 15,\n    tp: `45vh`,\n    bRad: 3,\n    minH: 50,\n    alI: 'center',\n    jtC: 'center',\n    pos: 'relative',\n    shadowRadius: 2,\n    shadowOpacity: 0.2,\n    transitionDuration: '0.8s',\n    bgC: theme?.colors?.palette?.black01,\n    shadowOffset: { width: 2, height: 2 },\n    shadowColor: theme?.colors?.palette?.black03,\n    transitionProperty: 'width height background-color',\n    [props.location || 'left']: getToggleLocation(\n      props.sidebarWidth,\n      props.initial,\n      props.styles,\n      props.location\n    ),\n  },\n  hover: {\n    minH: 75,\n    width: 30,\n    bgC: theme?.colors.palette?.blue02,\n    ...(props.location === 'right' && { right: 30 }),\n  },\n  left: {\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n  right: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n}))\n\n/**\n * Restyles Icon component\n * @type {React.Component}\n * @export\n * @public\n * @param {Object} theme - Global theme object\n * @param {Object} props\n * @param {number} props.width - The width of the sidebar\n * @param {number} props.initial - The initial width of the sidebar if width is not passed in\n * @param {Object} props.styles - The styles object to pull the width from if it exists\n *\n * @returns {React.Component} - Wrapped reStyle Icon Component\n */\nexport const ToggleIcon = reStyle(props => {\n  const { styles, hovered, ...iconProps } = props\n  return (\n    <ChevronDown\n      {...iconProps}\n      width={styles?.width}\n      height={styles?.height}\n      {...(hovered && styles?.hover)}\n      style={styles?.main}\n    />\n  )\n}, 'styles')({\n  main: {\n    lt: -1,\n    pos: 'relative',\n    transitionDuration: '0.8s',\n    transitionProperty: 'width height transform stroke color',\n  },\n  width: 18,\n  height: 18,\n  hover: {\n    width: 25,\n    height: 25,\n  },\n})\n"],"names":["ToggleElWidth","getSidebarWidth","width","initial","styles","noOpObj","isNum","isCssUnits","main","getToggleLocation","location","fullWidth","SidebarMain","reStyle","View","h","SidebarContainer","theme","props","fl","shadowRadius","alS","shadowOpacity","bgC","colors","palette","white01","shadowOffset","height","shadowColor","black03","w","sidebarWidth","ToggleMain","position","ToggleAction","locStyles","useStyle","useThemeHover","hover","ref","style","React","Touchable","pH","pV","tp","bRad","minH","alI","jtC","pos","transitionDuration","black01","transitionProperty","blue02","right","left","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","ToggleIcon","hovered","iconProps","ChevronDown","lt"],"mappings":"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"}