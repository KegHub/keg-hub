{"version":3,"file":"useScrollIntoView.js","sources":["../../../src/hooks/useScrollIntoView/useScrollIntoView.js"],"sourcesContent":["import { useEffect } from 'react'\n\n/**\n * Ensures the DOM element stored in `ref` remains visible\n * in the surrounding scroll list, provided that `shouldScroll`\n * is true.\n *\n * @param {RefObject} ref - ref to element\n * @param {boolean} shouldScroll - if true, keep ref.current visible\n * @param {boolean|object} scrollOptions - options as defined at\n *    https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView#parameter\n */\nexport const useScrollIntoView = (ref, shouldScroll, scrollOptions = true) => {\n  useEffect(() => {\n    // scroll the element into view according to the scroll options, so long as ref stores the element\n    shouldScroll && ref.current?.scrollIntoView(scrollOptions)\n  }, [ ref, shouldScroll, scrollOptions ])\n\n  return [ref]\n}\n"],"names":["useScrollIntoView","ref","shouldScroll","scrollOptions","useEffect","current","scrollIntoView"],"mappings":";;;;;;IAYaA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAMC,YAAN,EAA6C;AAAA,MAAzBC,aAAyB,uEAAT,IAAS;AAC5EC,EAAAA,eAAS,CAAC,YAAM;AAAA;AAEdF,IAAAA,YAAY,qBAAID,GAAG,CAACI,OAAR,iDAAI,aAAaC,cAAb,CAA4BH,aAA5B,CAAJ,CAAZ;AACD,GAHQ,EAGN,CAAEF,GAAF,EAAOC,YAAP,EAAqBC,aAArB,CAHM,CAAT;AAKA,SAAO,CAACF,GAAD,CAAP;AACD;;;;"}