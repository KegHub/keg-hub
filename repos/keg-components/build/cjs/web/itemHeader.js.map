{"version":3,"file":"itemHeader.js","sources":["../../../src/components/header/itemHeader/itemHeader.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@keg-hub/re-theme'\nimport { get } from '@keg-hub/jsutils'\nimport { View } from 'KegView'\nimport { Button } from '../../button'\nimport { Icon } from 'KegIcon'\nimport { H5 } from '../../typography'\nimport { renderFromType } from '../../../utils'\nimport { useClassList } from 'KegClassList'\nimport { noPropObj } from '@keg-hub/jsutils'\nimport { isValidComponent } from '../../../utils/validate/isValidComponent'\nimport { getPlatform } from 'KegGetPlatform'\nimport { useAccessibilityRole, useThemePath } from 'KegHooks'\n\nconst isWeb = getPlatform() === 'web'\n\n/**\n * ItemHeader\n * @summary used to make other types of headers\n * @param {Object} props - see PropTypes below\n *\n * @returns {Component} - header component\n */\nexport const ItemHeader = props => {\n  const theme = useTheme()\n\n  const {\n    accessibilityRole,\n    appHeader,\n    className,\n    title,\n    styles,\n    RightComponent,\n    CenterComponent,\n    LeftComponent,\n    onLeftClick,\n    leftIcon,\n    LeftIconComponent,\n    rightIcon,\n    RightIconComponent,\n    IconComponent,\n    onRightClick,\n    shadow,\n    ellipsis,\n    themePath,\n    children,\n    ...elProps\n  } = props\n\n  const headerStyles = useThemePath(themePath || `header.itemHeader`, styles)\n  const accessibilityRoleObj = useAccessibilityRole(accessibilityRole, 'header')\n\n  // builds the left, center, and right section based on props\n  return (\n    <View\n      className={useClassList('keg-header', className)}\n      {...elProps}\n      {...accessibilityRoleObj}\n      style={[\n        headerStyles.main,\n        appHeader && get(headerStyles, [ 'appHeader', 'main' ]),\n        shadow && get(headerStyles, [ 'shadow', 'main' ]),\n      ]}\n    >\n      { !isWeb && shadow && <View style={headerStyles?.shadow?.cover} /> }\n      { children || (\n        <>\n          <Side\n            styles={headerStyles.content}\n            iconName={leftIcon}\n            IconElement={LeftIconComponent || IconComponent}\n            action={onLeftClick}\n          >\n            { LeftComponent }\n          </Side>\n\n          <Center\n            ellipsis={ellipsis}\n            theme={theme}\n            styles={headerStyles.content?.center}\n            title={title}\n          >\n            { CenterComponent }\n          </Center>\n\n          <Side\n            right\n            styles={headerStyles.content}\n            iconName={rightIcon}\n            IconElement={RightIconComponent || IconComponent}\n            action={onRightClick}\n          >\n            { RightComponent }\n          </Side>\n        </>\n      ) }\n    </View>\n  )\n}\n\nItemHeader.propTypes = {\n  title: PropTypes.string,\n  styles: PropTypes.object,\n  RightComponent: PropTypes.element,\n  LeftComponent: PropTypes.element,\n  CenterComponent: PropTypes.element,\n  onLeftClick: PropTypes.oneOfType([ PropTypes.func, PropTypes.any ]),\n  leftIcon: PropTypes.string,\n  LeftIconComponent: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.elementType,\n  ]),\n  onRightClick: PropTypes.oneOfType([ PropTypes.func, PropTypes.any ]),\n  rightIcon: PropTypes.string,\n  RightIconComponent: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.elementType,\n  ]),\n  IconComponent: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.elementType,\n  ]),\n  shadow: PropTypes.bool,\n  ellipsis: PropTypes.bool,\n  themePath: PropTypes.string,\n}\n\n/**\n * Center\n * @summary gets the center section for the header component\n * @param {Object} props\n * @property {Object} props.theme - re-theme object used for styling\n * @property {Boolean=} props.ellipsis - applies ellipsis on text. default true\n * @property {Object} props.styles\n * @property {String=} props.title - title displayed in the center \n * @property {Component} props.children  - custom component to display on the center section. overrides the other props\n\n * @returns {Component} - center component\n */\nconst Center = props => {\n  const { styles, title, ellipsis = true, children } = props\n\n  return (\n    <View\n      className='keg-header-center'\n      style={styles.main}\n    >\n      { (children && renderFromType(children, {}, null)) || (\n        <H5\n          className='keg-header-center-title'\n          ellipsis={ellipsis}\n          style={styles.content.title}\n        >\n          { title }\n        </H5>\n      ) }\n    </View>\n  )\n}\n\n/**\n * Side\n * @summary builds the side sections of the appheader\n * @param {Object} props\n * @property {Object} props.styles\n * @property {String=} props.iconName - name of icon to use (FontAwesome icons). uses the Icon component\n * @property {Component} props.IconElement - icon component for the icon set (e.g. FontAwesome)\n * @property {Function} props.action - function to perform on section click\n * @property {Component} props.children  - custom component to display on the section. overrides the other props\n * @property {Boolean} props.right - to decide which side theme to use\n *\n * @returns {Component} - section component\n */\nconst Side = props => {\n  const { styles, iconName, IconElement, action, children, right } = props\n\n  const position = right ? 'right' : 'left'\n  // get the styles for the specified position\n  const contentStyles = get(styles, [ position, 'content' ], noPropObj)\n  const iconProps = {\n    styles,\n    IconElement,\n    iconName,\n    position,\n  }\n\n  const showIcon = isValidComponent(IconElement)\n\n  return (\n    <View\n      className={`keg-header-${position}`}\n      style={get(styles, [ position, 'main' ])}\n    >\n      { /* if 'action' is passed in, use a button to wrap the icon */ }\n      { (children && renderFromType(children, {}, null)) ||\n        (action ? (\n          <Button\n            className={`keg-header-${position}-button`}\n            styles={contentStyles.button}\n            onClick={action}\n          >\n            { showIcon && <CustomIcon {...iconProps} /> }\n          </Button>\n        ) : (\n          showIcon && (\n            <View\n              className={`keg-header-${position}-icon`}\n              style={contentStyles.main}\n            >\n              <CustomIcon {...iconProps} />\n            </View>\n          )\n        )) }\n    </View>\n  )\n}\n\n/**\n * CustomIcon\n * @summary Creates a customized Icon Component for the side components\n * @param {Object} props\n * @property {Object} styles - default theme style\n * @property {String} iconName - icon name\n * @property {Component} IconElement - icon component for the icon set\n * @property {String} position - side position (left/right)\n *\n * @returns {Component} - Customized Icon component\n */\nconst CustomIcon = props => {\n  const { className, iconName, IconElement, position, styles } = props\n\n  return (\n    <Icon\n      className={className}\n      name={iconName}\n      Element={IconElement}\n      styles={get(styles, [ position, 'content', 'icon' ])}\n    />\n  )\n}\n"],"names":["isWeb","getPlatform","ItemHeader","props","theme","useTheme","accessibilityRole","appHeader","className","title","styles","RightComponent","CenterComponent","LeftComponent","onLeftClick","leftIcon","LeftIconComponent","rightIcon","RightIconComponent","IconComponent","onRightClick","shadow","ellipsis","themePath","children","elProps","headerStyles","useThemePath","accessibilityRoleObj","useAccessibilityRole","React","View","useClassList","main","get","content","center","Center","renderFromType","H5","Side","iconName","IconElement","action","right","position","contentStyles","noPropObj","iconProps","showIcon","isValidComponent","Button","button","CustomIcon","Icon"],"mappings":"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"}