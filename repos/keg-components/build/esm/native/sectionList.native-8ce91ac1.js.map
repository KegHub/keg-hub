{"version":3,"file":"sectionList.native-8ce91ac1.js","sources":["../../../src/utils/components/getElementLayout.native.js","../../../src/utils/components/scrollList.native.js","../../../src/hooks/useScroll/useScroll.native.js","../../../src/components/list/sectionList.native.js"],"sourcesContent":["const defLayout = { top: 0, left: 0 }\n\n/**\n * Placeholder helper for non-web environments\n *\n * @returns {Object} - Default Layout object\n */\nexport const getElementLayout = () => defLayout\n","import { exists } from '@keg-hub/jsutils'\n\n/**\n * Helper method to scroll to an item in a list in a **NATIVE ENVIRONMENT**\n * @function\n * @param {object} props\n * @param {object} [props.listRef] - React Ref of the list component\n * @param {object} [props.top] - Vertical scroll to position\n * @param {object} [props.left] - Horizontal scroll to position\n * @param {boolean} [props.animated=true] - Is scrolling animated\n */\nexport const scrollList = ({ listRef, animated = true, top, left }) => {\n  return listRef?.current?.scrollTo({\n    animated,\n    ...(exists(top) && { y: top }),\n    ...(exists(left) && { x: left }),\n  })\n}\n","const defPos = { scrollX: 0, scrollY: 0 }\n\n/**\n * Placeholder hook for native environments\n * @function\n *\n * @returns {Object} The defPos object\n */\nexport const useScroll = () => defPos\n","import { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Text } from '../typography/text'\nimport { useScroll } from 'KegUseScroll'\nimport { useClassName } from 'KegClassName'\nimport { useThemePath } from '../../hooks/useThemePath'\nimport { useScrollClassName } from 'KegScrollClassName'\nimport {\n  checkCall,\n  noPropObj,\n  noPropArr,\n  get,\n  isFunc,\n  isObj,\n  isStr,\n} from '@keg-hub/jsutils'\nimport React, {\n  useCallback,\n  useRef,\n  useMemo,\n  useEffect,\n  useState,\n  createRef,\n} from 'react'\nimport { SectionList as RNSectionList, SafeAreaView } from 'react-native'\nimport {\n  renderFromType,\n  getElementLayout,\n  scrollList,\n} from '../../utils/components'\n\n/**\n * Helper hook to add __kegIndex to the sections\n * This allows referencing them as needed without requiring the consumer to add the index\n *\n * @param {Array} sections - Groups of items to be displayed in the SectionList component\n *\n * @return {Array} - sections array with the __kegIndex added\n */\nconst useIndexedSections = (sections, indexBy) => {\n  return useMemo(() => {\n    return sections.map((section, index) => {\n      return {\n        ...section,\n        __kegIndex:\n          get(section, indexBy) || section.key || section.index || index,\n      }\n    })\n  }, [sections])\n}\n\n/**\n * Helper hook to allow tracking scrolling between section\n * @param {function} onScrollSectionChange - Consumer Callback for when a section is scrolled\n * @param {number} sectionChangeOffset - Offset the final scroll position by some amount (px)\n * @param {Object} sectionRefs - React ref of all Section divider components.\n * @param {Object} activeSection - Most recent Section in the view calling this hook\n * @param {function} setActiveSection - Update which section is active\n * @param {Object} isScrollingRef - React ref to track if we are scrolling\n *\n * @returns {function} - Method to call when a section is scrolled\n */\nconst useSectionChangeOnScroll = (\n  onScrollSectionChange,\n  sectionChangeOffset,\n  activeSection,\n  setActiveSection,\n  sectionRefs,\n  isScrollingRef\n) => {\n  useScroll(\n    null,\n    useCallback((__, scrollUpdate) =>\n      calculateActiveSection({\n        onScrollSectionChange,\n        sectionChangeOffset,\n        activeSection,\n        setActiveSection,\n        sectionRefs,\n        isScrollingRef,\n        scrollUpdate,\n      })\n    )\n  )\n}\n\n/**\n * Calculates and sets the active section based on current scroll value\n * @param {Object} props\n * @param {function} props.onScrollSectionChange - Consumer Callback for when a section is scrolled\n * @param {number} props.sectionChangeOffset - Offset the final scroll position by some amount (px)\n * @param {Object} props.sectionRefs - React ref of all Section divider components.\n * @param {Object} props.activeSection - Most recent Section in the view calling this hook\n * @param {function} props.setActiveSection - Update which section is active\n * @param {Object} props.isScrollingRef - React ref to track if we are scrolling\n * @param {Object} props.scrollUpdate - contains current scrollX and scrollY values {scrollX, scrollY}\n *\n * @returns {Void}\n */\nconst calculateActiveSection = props => {\n  const {\n    onScrollSectionChange,\n    sectionChangeOffset,\n    activeSection,\n    setActiveSection,\n    sectionRefs,\n    isScrollingRef,\n    scrollUpdate,\n  } = props\n\n  if (!onScrollSectionChange || isScrollingRef.current || !scrollUpdate) return\n\n  const { scrollY } = scrollUpdate\n  // Subtract the custom offset to the scroll position\n  // Because offset should be relative to the element, not the scroll pos\n  const scrollLoc = scrollY - sectionChangeOffset\n\n  // Loop the sections can check their position against the scroll position\n  // Find closest section that's more then the current scroll position\n  const currentSection = Object.entries(sectionRefs.current).reduce(\n    (foundSection, [ __, sectionData ]) => {\n      const checkTop = sectionData?.layout?.top\n      const foundTop = foundSection?.layout?.top\n\n      if (\n        !foundSection ||\n        (scrollLoc >= checkTop && foundTop < checkTop) ||\n        (foundTop > scrollLoc && foundTop > checkTop)\n      )\n        foundSection = sectionData\n\n      return foundSection\n    },\n    false\n  )\n\n  if (!currentSection || currentSection.index === activeSection) return\n\n  checkCall(onScrollSectionChange, currentSection.index)\n  setActiveSection(currentSection.index)\n}\n\n/**\n * Helper hook to allow switching / scrolling to a section when a section change happens\n * @param {boolean} doScrolling - Is automatic scrolling turned on\n * @param {function} onSectionChange - Consumer Callback method for when a section changes\n * @param {number} scrollOffset - Offset the final scroll position by some amount (px)\n * @param {Object} sectionRefs - React ref of all Section divider components.\n * @param {Object} listRef - React ref of the SectionList component\n * @param {Object} isScrollingRef - React ref to track if we are scrolling\n * @param {number} scrollCooldown - Amount of time to wait before allowing scrolling (ms)\n * @param {function} setActiveSection - Update which section is active\n *\n * @returns {function} - Method to call when the current section is changed\n */\nconst useSectionChange = (\n  doScrolling,\n  onSectionChange,\n  scrollOffset,\n  setActiveSection,\n  sectionRefs,\n  listRef,\n  isScrollingRef,\n  scrollCooldown\n) => {\n  return useCallback(\n    index => {\n      // If there's no scrolling call the onSectionChange if it exists\n      if (!doScrolling) return checkCall(onSectionChange, index)\n\n      // Layout of the SectionHeader should be set in the useEffect hook\n      // of the SectionHeader component so it can be accessed here\n      const sectionData = sectionRefs.current[index]\n      const layout = sectionData?.layout\n\n      if (!layout)\n        return console.warn(`Section layout not correctly set`, sectionData)\n\n      // Update the is scrolling ref\n      // So other scrolling methods don't try to scroll\n      isScrollingRef.current = true\n\n      // Call the scroll method, to scroll to the section header based on it's layout\n      scrollList({\n        listRef,\n        animated: true,\n        behavior: 'smooth',\n        top: layout.top + scrollOffset,\n      })\n\n      // Call the passed in onSectionChange if it exists\n      checkCall(onSectionChange, index)\n\n      // Update the internal active section\n      setActiveSection(index)\n\n      // Wrap in a timeout to give it some cool down\n      // No way to track when scrolling stops, so this is the best we have\n      setTimeout(() => {\n        // Turn is scrolling back off\n        isScrollingRef.current = false\n      }, scrollCooldown)\n    },\n    [\n      scrollOffset,\n      scrollCooldown,\n      listRef.current,\n      onSectionChange,\n      setActiveSection,\n      sectionRefs.current,\n      isScrollingRef.current,\n    ]\n  )\n}\n\n/**\n * Displays a section header for each section, adding a view to helper with tracking\n * @param {Object} props\n * @param {number} props.index - Position of the section being rendered\n * @param {Object|function|node} props.renderSectionHeader - Callback passed from the consumer\n * @param {Object} props.sectionRefs - Ref Object to hold refs to the section header Dom Node\n * @param {Object} props.section - Current section being rendered\n * @param {Object} props.styles - Merged custom and theme styles\n * @param {function} props.onSectionChange - Callback called when a section is changed\n */\nconst SectionHeader = props => {\n  const {\n    index,\n    onSectionChange,\n    renderSectionHeader,\n    sectionRefs,\n    section,\n    styles,\n  } = props\n\n  const sectionRef = useRef(null)\n\n  useEffect(() => {\n    // If no onSectionChange method\n    // then we don't need to set the sectionRefs\n    if (!isFunc(onSectionChange)) return\n\n    sectionRefs.current[index] = sectionRef.current\n\n    sectionRefs.current[index].element &&\n      !sectionRefs.current[index].layout &&\n      (sectionRefs.current[index].layout = getElementLayout(\n        sectionRef.current.element\n      ))\n\n    return () => delete sectionRefs.current[index]\n  }, [ sectionRef.current, index, onSectionChange ])\n\n  // Wrap the renderSectionHeader method\n  // With a fragment, and view so we can track the section headers\n  // with an internal component and ref\n  return (\n    <>\n      <View\n        className={`keg-section-${index}`}\n        ref={element => (sectionRef.current = { element, index })}\n      />\n      { checkCall(renderSectionHeader, { section, styles, onSectionChange }) }\n    </>\n  )\n}\n\n/**\n * Helper hook for the renderSectionHeader, that wraps our custom Section header in a callback\n * @param {function} renderSectionHeader - Consumers callback method to render their section headers\n * @param {function} onSectionChange - Consumers callback called whe a section is changed\n * @param {Object} sectionRefs - React ref of all Section divider components.\n * @param {Object} styles - Merged custom and theme styles\n *\n * @returns {function} - Render function for Section Headers\n */\nconst useRenderSectionHeader = (\n  renderSectionHeader,\n  onSectionChange,\n  sectionRefs,\n  styles\n) => {\n  // This gets used by the renderSectionHeader prop\n  // It's not an issue with hooks, because the Callback hook\n  // Has already been called before is passed as prop to the SectionList component\n  // Which means we can call hooks in sub components\n  return useCallback(\n    ({ section }) => {\n      return (\n        <SectionHeader\n          index={section.__kegIndex}\n          renderSectionHeader={renderSectionHeader}\n          onSectionChange={onSectionChange}\n          section={section}\n          sectionRefs={sectionRefs}\n          styles={styles}\n        />\n      )\n    },\n    [ styles, onSectionChange, sectionRefs.current, renderSectionHeader ]\n  )\n}\n\n/**\n * Helper hook to memoize the renderItem function\n * @param {function} renderItem - method to render a single item\n * @param {function} onSectionChange - method called when a section is changed\n *\n * @returns {React.Component} - response from the renderItem function\n */\nconst useRenderItem = (renderItem, onSectionChange) => {\n  return useCallback(\n    ({ item }) => {\n      return checkCall(renderItem, { item, onSectionChange })\n    },\n    [ renderItem, onSectionChange ]\n  )\n}\n\n/**\n * Helper hook to memoize the keyExtractor function for the SectionList\n * @param {function} keyExtractor - method to extract the key for the item\n *\n * @returns {function} - Memoized keyExtractor function\n */\nconst useKeyExtractor = keyExtractor => {\n  return useCallback(\n    (item, index) => {\n      return isFunc(keyExtractor)\n        ? keyExtractor(item, index)\n        : isObj(item)\n          ? item.key || item.index || index\n          : isStr(item)\n            ? item\n            : index\n    },\n    [keyExtractor]\n  )\n}\n\n/**\n * SectionList\n * @summary Default view component that wraps the React Native View component. All props are optional\n *\n * @param {Object} props - see SectionList PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n * @property {String} props.innerClassName - Value to set the innerClassName to (web platform only)\n *\n */\nexport const SectionList = React.forwardRef((props, ref) => {\n  const {\n    activeSection: initialSection,\n    className,\n    innerClassName,\n    indexSectionHeaderBy,\n    keyExtractor,\n    noSectionHeaderScroll,\n    scrollCooldown = 2000,\n    onScrollSectionChange,\n    onSectionChange,\n    renderListHeader,\n    renderSectionHeader,\n    renderItem,\n    sectionChangeOffset = 10,\n    sections = noPropArr,\n    styles = noPropObj,\n    themePath,\n    type = 'default',\n    ...args\n  } = props\n\n  const itemKeyExtractor = useKeyExtractor(keyExtractor)\n  const sectionRefs = useRef({})\n  const isScrollingRef = useRef(false)\n  const listRef = ref || createRef()\n  const safeClassRef = useClassName('keg-safearea-list', className)\n  const classRef = useScrollClassName(\n    `keg-sectionlist`,\n    className,\n    innerClassName,\n    listRef\n  )\n\n  const listStyles = useThemePath(themePath || `list.section.${type}`, styles)\n  const indexedSections = useIndexedSections(sections, indexSectionHeaderBy)\n  const [ activeSection, setActiveSection ] = useState(\n    initialSection || get(indexedSections, '0.__kegIndex')\n  )\n\n  const [ sectionsContent, setSectionsContent ] = useState(sections)\n\n  useEffect(() => {\n    if (sections === sectionsContent) return\n    // if the section contents changes without scrolling,\n    // we want to make sure we update the activeSection accordingly\n    const scrollUpdate = {\n      scrollY: window.pageYOffset,\n    }\n    calculateActiveSection({\n      onScrollSectionChange,\n      sectionChangeOffset,\n      activeSection,\n      setActiveSection,\n      sectionRefs,\n      isScrollingRef,\n      scrollUpdate,\n    })\n\n    setSectionsContent(sections)\n  }, [\n    sections,\n    onScrollSectionChange,\n    sectionChangeOffset,\n    activeSection,\n    setActiveSection,\n    sectionRefs,\n    isScrollingRef,\n  ])\n\n  const onSectionChangeAction = useSectionChange(\n    noSectionHeaderScroll !== true,\n    onSectionChange,\n    sectionChangeOffset,\n    setActiveSection,\n    sectionRefs,\n    listRef,\n    isScrollingRef,\n    scrollCooldown\n  )\n  const onRenderItem = useRenderItem(renderItem, onSectionChangeAction)\n  const onSectionHeaderRender = useRenderSectionHeader(\n    renderSectionHeader,\n    onSectionChangeAction,\n    sectionRefs,\n    listStyles\n  )\n\n  useSectionChangeOnScroll(\n    onScrollSectionChange,\n    sectionChangeOffset,\n    activeSection,\n    setActiveSection,\n    sectionRefs,\n    isScrollingRef\n  )\n\n  return (\n    <View\n      className='keg-sectionlist-container'\n      style={listStyles?.main}\n    >\n      { renderListHeader &&\n        renderFromType(\n          renderListHeader,\n          {\n            ...props,\n            styles: listStyles,\n            onSectionChange: onSectionChangeAction,\n          },\n          Text\n        ) }\n      <SafeAreaView\n        ref={safeClassRef}\n        style={listStyles?.content.container}\n      >\n        <RNSectionList\n          keyExtractor={itemKeyExtractor}\n          {...args}\n          ref={classRef}\n          renderItem={onRenderItem}\n          sections={indexedSections}\n          style={listStyles?.content.list}\n          renderSectionHeader={onSectionHeaderRender}\n        />\n      </SafeAreaView>\n    </View>\n  )\n})\n\nSectionList.propTypes = {\n  ...RNSectionList.propTypes,\n  activeSection: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n  className: PropTypes.oneOfType([ PropTypes.string, PropTypes.array ]),\n  /**\n   * Property on each section used to index each section header\n   */\n  indexSectionHeaderBy: PropTypes.string,\n  innerClassName: PropTypes.oneOfType([ PropTypes.string, PropTypes.array ]),\n  noSectionHeaderScroll: PropTypes.bool,\n  /**\n   * Called when a section becomes active ( visible ) from scrolling\n   */\n  onScrollSectionChange: PropTypes.func,\n  /**\n   * Called when a section changes either through scrolling or programmatically\n   * Is NOT called when onScrollSectionChange prop exists, and section is changed from scrolling\n   */\n  onSectionChange: PropTypes.func,\n  scrollCooldown: PropTypes.number,\n  /**\n   * Render prop to render the list header\n   */\n  renderListHeader: PropTypes.oneOfType([ PropTypes.node, PropTypes.func ]),\n  /**\n   * Render prop to render the header of each section\n   */\n  renderSectionHeader: PropTypes.oneOfType([ PropTypes.node, PropTypes.func ]),\n  /**\n   * Render prop to render each item in each section\n   */\n  renderItem: PropTypes.oneOfType([ PropTypes.node, PropTypes.func ]),\n  /**\n   * Offset the scroll position by some amount (px) when section header scrolling is enabled\n   */\n  sectionChangeOffset: PropTypes.number,\n  sections: PropTypes.array,\n  styles: PropTypes.object,\n  themePath: PropTypes.string,\n  type: PropTypes.string,\n}\n"],"names":["defLayout","top","left","getElementLayout","scrollList","listRef","animated","current","scrollTo","exists","y","x","defPos","scrollX","scrollY","useScroll","useIndexedSections","sections","indexBy","useMemo","map","section","index","__kegIndex","get","key","useSectionChangeOnScroll","onScrollSectionChange","sectionChangeOffset","activeSection","setActiveSection","sectionRefs","isScrollingRef","useCallback","__","scrollUpdate","calculateActiveSection","props","scrollLoc","currentSection","Object","entries","reduce","foundSection","sectionData","checkTop","layout","foundTop","checkCall","useSectionChange","doScrolling","onSectionChange","scrollOffset","scrollCooldown","console","warn","behavior","setTimeout","SectionHeader","renderSectionHeader","styles","sectionRef","useRef","useEffect","isFunc","element","React","useRenderSectionHeader","useRenderItem","renderItem","item","useKeyExtractor","keyExtractor","isObj","isStr","SectionList","forwardRef","ref","initialSection","className","innerClassName","indexSectionHeaderBy","noSectionHeaderScroll","renderListHeader","noPropArr","noPropObj","themePath","type","args","itemKeyExtractor","createRef","safeClassRef","useClassName","classRef","useScrollClassName","listStyles","useThemePath","indexedSections","useState","sectionsContent","setSectionsContent","window","pageYOffset","onSectionChangeAction","onRenderItem","onSectionHeaderRender","main","renderFromType","Text","content","container","RNSectionList","list"],"mappings":";;;;;;;;;;;AAAA,IAAMA,SAAS,GAAG;AAAEC,EAAAA,GAAG,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAAlB;IAOaC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAMH,SAAN;AAAA;;ICInBI,UAAU,GAAG,SAAbA,UAAa,OAA6C;AAAA;AAAA,MAA1CC,OAA0C,QAA1CA,OAA0C;AAAA,2BAAjCC,QAAiC;AAAA,MAAjCA,QAAiC,8BAAtB,IAAsB;AAAA,MAAhBL,GAAgB,QAAhBA,GAAgB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACrE,SAAOG,OAAP,aAAOA,OAAP,2CAAOA,OAAO,CAAEE,OAAhB,qDAAO,iBAAkBC,QAAlB;AACLF,IAAAA,QAAQ,EAARA;AADK,KAEDG,MAAM,CAACR,GAAD,CAAN,IAAe;AAAES,IAAAA,CAAC,EAAET;AAAL,GAFd,GAGDQ,MAAM,CAACP,IAAD,CAAN,IAAgB;AAAES,IAAAA,CAAC,EAAET;AAAL,GAHf,EAAP;AAKD;;ACjBD,IAAMU,MAAM,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,OAAO,EAAE;AAAvB,CAAf;IAQaC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMH,MAAN;AAAA;;;AC+BzB,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAWC,OAAX,EAAuB;AAChD,SAAOC,OAAO,CAAC,YAAM;AACnB,WAAOF,QAAQ,CAACG,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACtC,+CACKD,OADL;AAEEE,QAAAA,UAAU,EACRC,GAAG,CAACH,OAAD,EAAUH,OAAV,CAAH,IAAyBG,OAAO,CAACI,GAAjC,IAAwCJ,OAAO,CAACC,KAAhD,IAAyDA;AAH7D;AAKD,KANM,CAAP;AAOD,GARa,EAQX,CAACL,QAAD,CARW,CAAd;AASD,CAVD;AAuBA,IAAMS,wBAAwB,GAAG,SAA3BA,wBAA2B,CAC/BC,qBAD+B,EAE/BC,mBAF+B,EAG/BC,aAH+B,EAI/BC,gBAJ+B,EAK/BC,WAL+B,EAM/BC,cAN+B,EAO5B;AACHjB,EAAAA,SAAS,CACP,IADO,EAEPkB,WAAW,CAAC,UAACC,EAAD,EAAKC,YAAL;AAAA,WACVC,sBAAsB,CAAC;AACrBT,MAAAA,qBAAqB,EAArBA,qBADqB;AAErBC,MAAAA,mBAAmB,EAAnBA,mBAFqB;AAGrBC,MAAAA,aAAa,EAAbA,aAHqB;AAIrBC,MAAAA,gBAAgB,EAAhBA,gBAJqB;AAKrBC,MAAAA,WAAW,EAAXA,WALqB;AAMrBC,MAAAA,cAAc,EAAdA,cANqB;AAOrBG,MAAAA,YAAY,EAAZA;AAPqB,KAAD,CADZ;AAAA,GAAD,CAFJ,CAAT;AAcD,CAtBD;AAqCA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,KAAK,EAAI;AACtC,MACEV,qBADF,GAQIU,KARJ,CACEV,qBADF;AAAA,MAEEC,mBAFF,GAQIS,KARJ,CAEET,mBAFF;AAAA,MAGEC,aAHF,GAQIQ,KARJ,CAGER,aAHF;AAAA,MAIEC,gBAJF,GAQIO,KARJ,CAIEP,gBAJF;AAAA,MAKEC,WALF,GAQIM,KARJ,CAKEN,WALF;AAAA,MAMEC,cANF,GAQIK,KARJ,CAMEL,cANF;AAAA,MAOEG,YAPF,GAQIE,KARJ,CAOEF,YAPF;AAUA,MAAI,CAACR,qBAAD,IAA0BK,cAAc,CAACzB,OAAzC,IAAoD,CAAC4B,YAAzD,EAAuE;AAEvE,MAAQrB,OAAR,GAAoBqB,YAApB,CAAQrB,OAAR,CAbsC;AAgBtC,MAAMwB,SAAS,GAAGxB,OAAO,GAAGc,mBAA5B,CAhBsC;AAoBtC,MAAMW,cAAc,GAAGC,MAAM,CAACC,OAAP,CAAeV,WAAW,CAACxB,OAA3B,EAAoCmC,MAApC,CACrB,UAACC,YAAD,QAAuC;AAAA;AAAA;AAAA;AAAA,YAAlBC,WAAkB;AACrC,QAAMC,QAAQ,GAAGD,WAAH,aAAGA,WAAH,8CAAGA,WAAW,CAAEE,MAAhB,wDAAG,oBAAqB7C,GAAtC;AACA,QAAM8C,QAAQ,oBAAGJ,YAAH,0EAAG,cAAcG,MAAjB,yDAAG,qBAAsB7C,GAAvC;AAEA,QACE,CAAC0C,YAAD,IACCL,SAAS,IAAIO,QAAb,IAAyBE,QAAQ,GAAGF,QADrC,IAECE,QAAQ,GAAGT,SAAX,IAAwBS,QAAQ,GAAGF,QAHtC,EAKEF,YAAY,GAAGC,WAAf;AAEF,WAAOD,YAAP;AACD,GAboB,EAcrB,KAdqB,CAAvB;AAiBA,MAAI,CAACJ,cAAD,IAAmBA,cAAc,CAACjB,KAAf,KAAyBO,aAAhD,EAA+D;AAE/DmB,EAAAA,SAAS,CAACrB,qBAAD,EAAwBY,cAAc,CAACjB,KAAvC,CAAT;AACAQ,EAAAA,gBAAgB,CAACS,cAAc,CAACjB,KAAhB,CAAhB;AACD,CAzCD;AAwDA,IAAM2B,gBAAgB,GAAG,SAAnBA,gBAAmB,CACvBC,WADuB,EAEvBC,eAFuB,EAGvBC,YAHuB,EAIvBtB,gBAJuB,EAKvBC,WALuB,EAMvB1B,OANuB,EAOvB2B,cAPuB,EAQvBqB,cARuB,EASpB;AACH,SAAOpB,WAAW,CAChB,UAAAX,KAAK,EAAI;AAEP,QAAI,CAAC4B,WAAL,EAAkB,OAAOF,SAAS,CAACG,eAAD,EAAkB7B,KAAlB,CAAhB,CAFX;AAMP,QAAMsB,WAAW,GAAGb,WAAW,CAACxB,OAAZ,CAAoBe,KAApB,CAApB;AACA,QAAMwB,MAAM,GAAGF,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,MAA5B;AAEA,QAAI,CAACA,MAAL,EACE,OAAOQ,OAAO,CAACC,IAAR,qCAAiDX,WAAjD,CAAP,CAVK;AAcPZ,IAAAA,cAAc,CAACzB,OAAf,GAAyB,IAAzB,CAdO;AAiBPH,IAAAA,UAAU,CAAC;AACTC,MAAAA,OAAO,EAAPA,OADS;AAETC,MAAAA,QAAQ,EAAE,IAFD;AAGTkD,MAAAA,QAAQ,EAAE,QAHD;AAITvD,MAAAA,GAAG,EAAE6C,MAAM,CAAC7C,GAAP,GAAamD;AAJT,KAAD,CAAV,CAjBO;AAyBPJ,IAAAA,SAAS,CAACG,eAAD,EAAkB7B,KAAlB,CAAT,CAzBO;AA4BPQ,IAAAA,gBAAgB,CAACR,KAAD,CAAhB,CA5BO;AAgCPmC,IAAAA,UAAU,CAAC,YAAM;AAEfzB,MAAAA,cAAc,CAACzB,OAAf,GAAyB,KAAzB;AACD,KAHS,EAGP8C,cAHO,CAAV;AAID,GArCe,EAsChB,CACED,YADF,EAEEC,cAFF,EAGEhD,OAAO,CAACE,OAHV,EAIE4C,eAJF,EAKErB,gBALF,EAMEC,WAAW,CAACxB,OANd,EAOEyB,cAAc,CAACzB,OAPjB,CAtCgB,CAAlB;AAgDD,CA1DD;AAsEA,IAAMmD,aAAa,GAAG,SAAhBA,aAAgB,CAAArB,KAAK,EAAI;AAC7B,MACEf,KADF,GAOIe,KAPJ,CACEf,KADF;AAAA,MAEE6B,eAFF,GAOId,KAPJ,CAEEc,eAFF;AAAA,MAGEQ,mBAHF,GAOItB,KAPJ,CAGEsB,mBAHF;AAAA,MAIE5B,WAJF,GAOIM,KAPJ,CAIEN,WAJF;AAAA,MAKEV,OALF,GAOIgB,KAPJ,CAKEhB,OALF;AAAA,MAMEuC,MANF,GAOIvB,KAPJ,CAMEuB,MANF;AASA,MAAMC,UAAU,GAAGC,MAAM,CAAC,IAAD,CAAzB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AAGd,QAAI,CAACC,MAAM,CAACb,eAAD,CAAX,EAA8B;AAE9BpB,IAAAA,WAAW,CAACxB,OAAZ,CAAoBe,KAApB,IAA6BuC,UAAU,CAACtD,OAAxC;AAEAwB,IAAAA,WAAW,CAACxB,OAAZ,CAAoBe,KAApB,EAA2B2C,OAA3B,IACE,CAAClC,WAAW,CAACxB,OAAZ,CAAoBe,KAApB,EAA2BwB,MAD9B,KAEGf,WAAW,CAACxB,OAAZ,CAAoBe,KAApB,EAA2BwB,MAA3B,GAAoC3C,gBAAgB,CACnD0D,UAAU,CAACtD,OAAX,CAAmB0D,OADgC,CAFvD;AAMA,WAAO;AAAA,aAAM,OAAOlC,WAAW,CAACxB,OAAZ,CAAoBe,KAApB,CAAb;AAAA,KAAP;AACD,GAdQ,EAcN,CAAEuC,UAAU,CAACtD,OAAb,EAAsBe,KAAtB,EAA6B6B,eAA7B,CAdM,CAAT,CAZ6B;AA+B7B,SACEe,4DACEA,6BAAC,IAAD;AACE,IAAA,SAAS,wBAAiB5C,KAAjB,CADX;AAEE,IAAA,GAAG,EAAE,aAAA2C,OAAO;AAAA,aAAKJ,UAAU,CAACtD,OAAX,GAAqB;AAAE0D,QAAAA,OAAO,EAAPA,OAAF;AAAW3C,QAAAA,KAAK,EAALA;AAAX,OAA1B;AAAA;AAFd,IADF,EAKI0B,SAAS,CAACW,mBAAD,EAAsB;AAAEtC,IAAAA,OAAO,EAAPA,OAAF;AAAWuC,IAAAA,MAAM,EAANA,MAAX;AAAmBT,IAAAA,eAAe,EAAfA;AAAnB,GAAtB,CALb,CADF;AASD,CAxCD;AAmDA,IAAMgB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAC7BR,mBAD6B,EAE7BR,eAF6B,EAG7BpB,WAH6B,EAI7B6B,MAJ6B,EAK1B;AAKH,SAAO3B,WAAW,CAChB,iBAAiB;AAAA,QAAdZ,OAAc,SAAdA,OAAc;AACf,WACE6C,6BAAC,aAAD;AACE,MAAA,KAAK,EAAE7C,OAAO,CAACE,UADjB;AAEE,MAAA,mBAAmB,EAAEoC,mBAFvB;AAGE,MAAA,eAAe,EAAER,eAHnB;AAIE,MAAA,OAAO,EAAE9B,OAJX;AAKE,MAAA,WAAW,EAAEU,WALf;AAME,MAAA,MAAM,EAAE6B;AANV,MADF;AAUD,GAZe,EAahB,CAAEA,MAAF,EAAUT,eAAV,EAA2BpB,WAAW,CAACxB,OAAvC,EAAgDoD,mBAAhD,CAbgB,CAAlB;AAeD,CAzBD;AAkCA,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAalB,eAAb,EAAiC;AACrD,SAAOlB,WAAW,CAChB,iBAAc;AAAA,QAAXqC,IAAW,SAAXA,IAAW;AACZ,WAAOtB,SAAS,CAACqB,UAAD,EAAa;AAAEC,MAAAA,IAAI,EAAJA,IAAF;AAAQnB,MAAAA,eAAe,EAAfA;AAAR,KAAb,CAAhB;AACD,GAHe,EAIhB,CAAEkB,UAAF,EAAclB,eAAd,CAJgB,CAAlB;AAMD,CAPD;AAeA,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,YAAY,EAAI;AACtC,SAAOvC,WAAW,CAChB,UAACqC,IAAD,EAAOhD,KAAP,EAAiB;AACf,WAAO0C,MAAM,CAACQ,YAAD,CAAN,GACHA,YAAY,CAACF,IAAD,EAAOhD,KAAP,CADT,GAEHmD,KAAK,CAACH,IAAD,CAAL,GACEA,IAAI,CAAC7C,GAAL,IAAY6C,IAAI,CAAChD,KAAjB,IAA0BA,KAD5B,GAEEoD,KAAK,CAACJ,IAAD,CAAL,GACEA,IADF,GAEEhD,KANR;AAOD,GATe,EAUhB,CAACkD,YAAD,CAVgB,CAAlB;AAYD,CAbD;IAwBaG,WAAW,GAAGT,cAAK,CAACU,UAAN,CAAiB,UAACvC,KAAD,EAAQwC,GAAR,EAAgB;AAC1D,MACiBC,cADjB,GAmBIzC,KAnBJ,CACER,aADF;AAAA,MAEEkD,SAFF,GAmBI1C,KAnBJ,CAEE0C,SAFF;AAAA,MAGEC,cAHF,GAmBI3C,KAnBJ,CAGE2C,cAHF;AAAA,MAIEC,oBAJF,GAmBI5C,KAnBJ,CAIE4C,oBAJF;AAAA,MAKET,YALF,GAmBInC,KAnBJ,CAKEmC,YALF;AAAA,MAMEU,qBANF,GAmBI7C,KAnBJ,CAME6C,qBANF;AAAA,8BAmBI7C,KAnBJ,CAOEgB,cAPF;AAAA,MAOEA,cAPF,sCAOmB,IAPnB;AAAA,MAQE1B,qBARF,GAmBIU,KAnBJ,CAQEV,qBARF;AAAA,MASEwB,eATF,GAmBId,KAnBJ,CASEc,eATF;AAAA,MAUEgC,gBAVF,GAmBI9C,KAnBJ,CAUE8C,gBAVF;AAAA,MAWExB,mBAXF,GAmBItB,KAnBJ,CAWEsB,mBAXF;AAAA,MAYEU,UAZF,GAmBIhC,KAnBJ,CAYEgC,UAZF;AAAA,8BAmBIhC,KAnBJ,CAaET,mBAbF;AAAA,MAaEA,mBAbF,sCAawB,EAbxB;AAAA,wBAmBIS,KAnBJ,CAcEpB,QAdF;AAAA,MAcEA,QAdF,gCAcamE,SAdb;AAAA,sBAmBI/C,KAnBJ,CAeEuB,MAfF;AAAA,MAeEA,MAfF,8BAeWyB,SAfX;AAAA,MAgBEC,SAhBF,GAmBIjD,KAnBJ,CAgBEiD,SAhBF;AAAA,oBAmBIjD,KAnBJ,CAiBEkD,IAjBF;AAAA,MAiBEA,IAjBF,4BAiBS,SAjBT;AAAA,MAkBKC,IAlBL,4BAmBInD,KAnBJ;AAqBA,MAAMoD,gBAAgB,GAAGlB,eAAe,CAACC,YAAD,CAAxC;AACA,MAAMzC,WAAW,GAAG+B,MAAM,CAAC,EAAD,CAA1B;AACA,MAAM9B,cAAc,GAAG8B,MAAM,CAAC,KAAD,CAA7B;AACA,MAAMzD,OAAO,GAAGwE,GAAG,IAAIa,SAAS,EAAhC;AACA,MAAMC,YAAY,GAAGC,YAAY,CAAA,CAAjC;AACA,MAAMC,QAAQ,GAAGC,kBAAkB,oBAEjCf,SAFiC,EAGjCC,cAHiC,EAIjC3E,OAJiC,CAAnC;AAOA,MAAM0F,UAAU,GAAGC,YAAY,CAACV,SAAS,2BAAoBC,IAApB,CAAV,EAAsC3B,MAAtC,CAA/B;AACA,MAAMqC,eAAe,GAAGjF,kBAAkB,CAACC,QAAD,EAAWgE,oBAAX,CAA1C;AACA,kBAA4CiB,QAAQ,CAClDpB,cAAc,IAAItD,GAAG,CAACyE,eAAD,EAAkB,cAAlB,CAD6B,CAApD;AAAA;AAAA,MAAQpE,aAAR;AAAA,MAAuBC,gBAAvB;AAIA,mBAAgDoE,QAAQ,CAACjF,QAAD,CAAxD;AAAA;AAAA,MAAQkF,eAAR;AAAA,MAAyBC,kBAAzB;AAEArC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI9C,QAAQ,KAAKkF,eAAjB,EAAkC,OADpB;AAId,QAAMhE,YAAY,GAAG;AACnBrB,MAAAA,OAAO,EAAEuF,MAAM,CAACC;AADG,KAArB;AAGAlE,IAAAA,sBAAsB,CAAC;AACrBT,MAAAA,qBAAqB,EAArBA,qBADqB;AAErBC,MAAAA,mBAAmB,EAAnBA,mBAFqB;AAGrBC,MAAAA,aAAa,EAAbA,aAHqB;AAIrBC,MAAAA,gBAAgB,EAAhBA,gBAJqB;AAKrBC,MAAAA,WAAW,EAAXA,WALqB;AAMrBC,MAAAA,cAAc,EAAdA,cANqB;AAOrBG,MAAAA,YAAY,EAAZA;AAPqB,KAAD,CAAtB;AAUAiE,IAAAA,kBAAkB,CAACnF,QAAD,CAAlB;AACD,GAlBQ,EAkBN,CACDA,QADC,EAEDU,qBAFC,EAGDC,mBAHC,EAIDC,aAJC,EAKDC,gBALC,EAMDC,WANC,EAODC,cAPC,CAlBM,CAAT;AA4BA,MAAMuE,qBAAqB,GAAGtD,gBAAgB,CAC5CiC,qBAAqB,KAAK,IADkB,EAE5C/B,eAF4C,EAG5CvB,mBAH4C,EAI5CE,gBAJ4C,EAK5CC,WAL4C,EAM5C1B,OAN4C,EAO5C2B,cAP4C,EAQ5CqB,cAR4C,CAA9C;AAUA,MAAMmD,YAAY,GAAGpC,aAAa,CAACC,UAAD,EAAakC,qBAAb,CAAlC;AACA,MAAME,qBAAqB,GAAGtC,sBAAsB,CAClDR,mBADkD,EAElD4C,qBAFkD,EAGlDxE,WAHkD,EAIlDgE,UAJkD,CAApD;AAOArE,EAAAA,wBAAwB,CACtBC,qBADsB,EAEtBC,mBAFsB,EAGtBC,aAHsB,EAItBC,gBAJsB,EAKtBC,WALsB,EAMtBC,cANsB,CAAxB;AASA,SACEkC,6BAAC,IAAD;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,KAAK,EAAE6B,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEW;AAFrB,KAIIvB,gBAAgB,IAChBwB,cAAc,CACZxB,gBADY,oCAGP9C,KAHO;AAIVuB,IAAAA,MAAM,EAAEmC,UAJE;AAKV5C,IAAAA,eAAe,EAAEoD;AALP,MAOZK,IAPY,CALlB,EAcE1C,6BAAC,YAAD;AACE,IAAA,GAAG,EAAEyB,YADP;AAEE,IAAA,KAAK,EAAEI,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEc,OAAZ,CAAoBC;AAF7B,KAIE5C,6BAAC6C,aAAD;AACE,IAAA,YAAY,EAAEtB;AADhB,KAEMD,IAFN;AAGE,IAAA,GAAG,EAAEK,QAHP;AAIE,IAAA,UAAU,EAAEW,YAJd;AAKE,IAAA,QAAQ,EAAEP,eALZ;AAME,IAAA,KAAK,EAAEF,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEc,OAAZ,CAAoBG,IAN7B;AAOE,IAAA,mBAAmB,EAAEP;AAPvB,KAJF,CAdF,CADF;AA+BD,CAhI0B;;;;"}