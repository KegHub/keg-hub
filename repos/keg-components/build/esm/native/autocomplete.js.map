{"version":3,"file":"autocomplete.js","sources":["../../../src/components/form/autocomplete/autocomplete.js"],"sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { withOutsideDetect } from 'KegHocs'\nimport { useAutocompleteItems } from 'KegHooks'\nimport { getTextFromChangeEvent } from 'KegUtils'\nimport { reStyle } from '@keg-hub/re-theme/reStyle'\nimport { AutocompleteInput } from './autocompleteInput'\nimport { noOpObj, noPropArr, checkCall } from '@keg-hub/jsutils'\nimport { ScrollableSelect } from '../scrollable/select/scrollableSelect'\n\n/**\n * An absolutely-positioned scrollable select\n */\nconst FloatingScrollableSelect = reStyle(\n  ScrollableSelect,\n  'styles'\n)(() => ({\n  main: { pos: 'absolute', z: 9999 },\n}))\n\n/**\n * View wrapped with out-of-bounds click detection.\n */\nconst AutocompleteView = withOutsideDetect(View)\n\nconst useSetDrop = (callback, setShowDropdown, showDropdown, setTo) => {\n  return useCallback(\n    (...data) => {\n      checkCall(callback, ...data)\n      setShowDropdown(setTo)\n    },\n    [ callback, setShowDropdown, showDropdown, setTo ]\n  )\n}\n\nconst useDropdownActions = (\n  props,\n  inputText,\n  updateText,\n  selectedItem,\n  setSelectedItem\n) => {\n  const { onSelect, onFocus, onOutsideClick } = props\n  const [ showDropdown, setShowDropdown ] = useState(false)\n\n  const onSelectItemHandler = useCallback(\n    item => {\n      // Ensure we always call the callback when it exists\n      onSelect?.(item)\n\n      // Only update the text if the text has actually changed\n      item?.text && inputText !== item?.text && updateText(item?.text)\n\n      setSelectedItem(item)\n    },\n    [ onSelect, inputText, updateText, selectedItem, setSelectedItem ]\n  )\n\n  const onOutsideClickHandler = useCallback(\n    evt => {\n      onOutsideClick?.(inputText, evt)\n    },\n    [ inputText, onOutsideClick ]\n  )\n\n  const onFocusCB = useSetDrop(onFocus, setShowDropdown, showDropdown, true)\n  const onSelectItemCB = useSetDrop(\n    onSelectItemHandler,\n    setShowDropdown,\n    showDropdown,\n    false\n  )\n  const onOutsideClickCB = useSetDrop(\n    onOutsideClickHandler,\n    setShowDropdown,\n    showDropdown,\n    false\n  )\n\n  return {\n    onFocusCB,\n    showDropdown,\n    setShowDropdown,\n    onSelectItemCB,\n    onOutsideClickCB,\n  }\n}\n\n/**\n * Provides text input with autocomplete functionality. As user types, shows a menu of autocomplete options that contain user input as a substring.\n * Parent component must pass the total list of options (in autocompleteValues prop) for this to work.\n * @param {Object} props\n * @param {Array<string> | Array<Object>} props.values - array of possible items to use for autocomplete.\n *  - If it is Array<string>, any duplicates will be ignored.\n *  - If it is Array<object>, each object should be of form { text: string, key: string? },\n *    where key is an optional unique id that can distinguish duplicates\n * @param {Function?} props.onSelect - (optional) callback of form (text) => {...}, called when user selects a value from the autocomplete menu\n * @param {Function?} props.onChange - (optional) callback of form (text) => {...}, called when user types or selects a value. updates character by character\n * @param {String?} props.placeholder - (optional) placeholder text filled when no text has been inputted\n * @param {String?} props.text - (optional) initial value of the text in the input\n * @param {Object?} props.styles - (optional) style object for the root view of this component\n * @param {Object?} props.inputRef - (optional) a ref that will be assigned to the TextInput. Use this for obtaining access to TextInput methods like .clear()\n * @param {Number?} props.menuHeight - (optional) height of menu that shows autocomplete values\n * @param {*?} props.* - remaining props are passed straight through to the Input component\n */\nexport const Autocomplete = props => {\n  const {\n    onChange,\n    onFocus,\n    onOutsideClick,\n    onSelect,\n    text = '',\n    className,\n    menuHeight,\n    renderItem,\n    inputRef = null,\n    emptyShowList = false,\n    styles = noOpObj,\n    placeholder = '',\n    itemProps = noOpObj,\n    values = noPropArr,\n    ...inputProps\n  } = props\n\n  const [ inputText, updateText ] = useState(text)\n  const [ autocompleteItems, setSelectedItem, selectedItem ] =\n    useAutocompleteItems(inputText, values, emptyShowList)\n\n  const handleInputChange = useCallback(\n    evt => {\n      const text = getTextFromChangeEvent(evt)\n      updateText(text || '')\n      onChange?.(text, evt)\n    },\n    [ inputText, onChange, updateText ]\n  )\n\n  const { onFocusCB, showDropdown, onSelectItemCB, onOutsideClickCB } =\n    useDropdownActions(\n      props,\n      inputText,\n      updateText,\n      selectedItem,\n      setSelectedItem\n    )\n\n  return (\n    <AutocompleteView\n      style={styles?.main}\n      onOutsideClick={onOutsideClickCB}\n      className={[ 'keg-autocomplete-main', className ]}\n    >\n      <AutocompleteInput\n        ref={inputRef}\n        value={inputText}\n        onFocus={onFocusCB}\n        items={autocompleteItems}\n        selectItem={onSelectItemCB}\n        placeholder={placeholder}\n        onChange={handleInputChange}\n        style={styles?.content?.input || styles?.input}\n        highlightItem={setSelectedItem}\n        highlightedIndex={selectedItem?.index}\n        className='keg-autocomplete-input'\n        {...inputProps}\n      />\n\n      { /* nest select in view so that it appears below the input and still absolute-positioned */ }\n      <View\n        className='keg-autocomplete-dropdown'\n        style={styles.dropdown}\n      >\n        <FloatingScrollableSelect\n          height={menuHeight}\n          itemProps={itemProps}\n          visible={showDropdown}\n          renderItem={renderItem}\n          onSelect={onSelectItemCB}\n          items={autocompleteItems}\n          selectedItem={selectedItem}\n          styles={styles?.content?.menu || styles?.menu}\n        />\n      </View>\n    </AutocompleteView>\n  )\n}\n\nAutocomplete.propTypes = {\n  values: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        text: PropTypes.string.isRequired,\n        key: PropTypes.string,\n      }),\n    ])\n  ),\n  onFocus: PropTypes.func,\n  onSelect: PropTypes.func,\n  onChange: PropTypes.func,\n  onOutsideClick: PropTypes.func,\n  emptyShowList: PropTypes.bool,\n  placeholder: PropTypes.string,\n  text: PropTypes.string,\n  styles: PropTypes.object,\n  inputRef: PropTypes.object,\n  menuHeight: PropTypes.number,\n}\n"],"names":["FloatingScrollableSelect","reStyle","ScrollableSelect","main","pos","z","AutocompleteView","withOutsideDetect","View","useSetDrop","callback","setShowDropdown","showDropdown","setTo","useCallback","data","checkCall","useDropdownActions","props","inputText","updateText","selectedItem","setSelectedItem","onSelect","onFocus","onOutsideClick","useState","onSelectItemHandler","item","text","onOutsideClickHandler","evt","onFocusCB","onSelectItemCB","onOutsideClickCB","Autocomplete","onChange","className","menuHeight","renderItem","inputRef","emptyShowList","styles","noOpObj","placeholder","itemProps","values","noPropArr","inputProps","useAutocompleteItems","autocompleteItems","handleInputChange","getTextFromChangeEvent","React","content","input","index","dropdown","menu"],"mappings":"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"}