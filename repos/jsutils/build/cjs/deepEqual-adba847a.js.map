{"version":3,"file":"deepEqual-adba847a.js","sources":["../../src/collection/isEmptyColl.js","../../src/collection/deepEqual.js"],"sourcesContent":["/** @module Collection */\n\nimport { isColl } from './isColl'\nimport { isArr } from '../array/isArr'\n\n/**\n * Checks if passed in obj || array is empty.\n * @example\n * isEmptyColl({})\n * // Returns true\n * @example\n * isEmptyColl({ foo: 'bar' })\n * // Returns false\n * @example\n * isEmptyColl([])\n * // Returns true\n * @function\n * @param {*} obj - Object to check if empty\n * @return {Boolean} - True if the passed in collection is empty\n */\nexport const isEmptyColl = obj =>\n  isArr(obj)\n    ? obj.length === 0\n    : isColl(obj) && Object.getOwnPropertyNames(obj).length === 0\n","/** @module Collection */\n\n// Cache the prototype methods for faster access\nconst isArray = Array.isArray\nconst keyList = Object.keys\nconst hasProp = Object.prototype.hasOwnProperty\n\n/**\n * Recursively checks if two collections are equal\n * <br/>Faster the JSON.stringify checks\n * <br/>See https://jsperf.com/fast-deep-equal-vs-json-stringify\n * @example\n * const test = { foo: [ { bar: 'baz' } ] }\n * const test2 = { foo: [ { bar: 'baz' } ] }\n * console.log(test === test2)) // prints false\n * deepEqual(test, test2) // returns true\n * @example\n * // Works with arrays too\n * deepClone([ [ [ 0 ] ] ], [ [ [ 0 ] ] ]) // returns true\n * @function\n * @param {Object|Array} a - Object to check\n * @param {Object|Array} b - Object to check against\n */\nexport const deepEqual = (a, b) => {\n  if (a === b) return true\n\n  if (!a || !b || typeof a != 'object' || typeof b != 'object')\n    return a !== a && b !== b\n\n  const arrA = isArray(a)\n  const arrB = isArray(b)\n  let i\n  let length\n  let key\n\n  // If both are arrays\n  if (arrA && arrB) {\n    length = a.length\n    // If unequal length, then not equal\n    if (length != b.length) return false\n    // Loop the arrays and check the contents of both\n    for (i = length; i-- !== 0;) if (!deepEqual(a[i], b[i])) return false\n\n    return true\n  }\n\n  // If on is an array and the other is not, then return false\n  if (arrA != arrB) return false\n\n  // Validate date objects\n  const dateA = a instanceof Date\n  const dateB = b instanceof Date\n  if (dateA != dateB) return false\n  if (dateA && dateB) return a.getTime() == b.getTime()\n\n  // Validate RegExp objects\n  const regexpA = a instanceof RegExp\n  const regexpB = b instanceof RegExp\n  if (regexpA != regexpB) return false\n  if (regexpA && regexpB) return a.toString() == b.toString()\n\n  // Cache the keys and length for faster iteration\n  const keys = keyList(a)\n  length = keys.length\n\n  // If unequal key length then return false\n  if (length !== keyList(b).length) return false\n\n  // Ensure both objects have the same keys\n  for (i = length; i-- !== 0;) if (!hasProp.call(b, keys[i])) return false\n\n  // Check the value of the object keys\n  for (i = length; i-- !== 0;) {\n    key = keys[i]\n    if (!deepEqual(a[key], b[key])) return false\n  }\n\n  return true\n}\n"],"names":["isEmptyColl","obj","isArr","length","isColl","Object","getOwnPropertyNames","isArray","Array","keyList","keys","hasProp","prototype","hasOwnProperty","deepEqual","a","b","arrA","arrB","i","key","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","call"],"mappings":"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"}