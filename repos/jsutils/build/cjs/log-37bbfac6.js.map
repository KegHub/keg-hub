{"version":3,"file":"log-37bbfac6.js","sources":["../../src/log/log.js"],"sourcesContent":["'use strict'\n\nlet SHOW_LOGS\nlet METH_DEF = 'dir'\nlet PREFIX = 'type'\nconst LOG_TYPES = [ 'error', 'info', 'log', 'dir', 'warn' ]\nconst isTest = process.env.NODE_ENV === 'test'\n\n/**\n * Turns logs on || off.\n * <br/>Set the default log method.\n * <br/>Add a prefix to all log message\n * @example\n * setLogs(true, 'dir', '[ DEV MODE ]')\n * @function\n * @param {Boolean} log - log values\n * @param {String} [methDef] - default log method\n * @param {String} [prefix] - string to add to all logs\n * @return { void }\n */\nexport const setLogs = (log, methDef, prefix) => {\n  SHOW_LOGS = log\n  METH_DEF = methDef || METH_DEF || 'log'\n  PREFIX = prefix || PREFIX || 'type'\n}\n\n/**\n * Resets log settings to default\n * @example\n * resetLogs()\n * // Resets settings set from the `setLogs method`\n * @function\n * @return { void }\n */\nexport const resetLogs = () => {\n  SHOW_LOGS = undefined\n  METH_DEF = 'log'\n  PREFIX = 'type'\n}\n\n/**\n * Logs a string to the inspector, uses the last argument to determine the log type\n * @example\n * logData('data to log', 'error')\n * // Will call console.error('data to log')\n * @function\n * @param {Array} args - to be passed to the log call\n * @return { void }\n */\nexport const logData = (...args) => {\n  if (!args.length) return\n\n  let type = args.length === 1 ? METH_DEF : args.pop()\n  if (!SHOW_LOGS && type !== 'error') return\n  else if (typeof args[0] === 'string') {\n    if (PREFIX === 'type') args[0] = `[ ${type.toUpperCase()} ] ${args[0]}`\n    else if (PREFIX) args[0] = `${PREFIX} ${args[0]}`\n  }\n\n  LOG_TYPES.indexOf(type) !== -1\n    ? console[type](...args)\n    : console[METH_DEF](...args, type)\n}\n\nisTest && (module.exports.getShowLogs = () => SHOW_LOGS)\n"],"names":["SHOW_LOGS","METH_DEF","PREFIX","LOG_TYPES","setLogs","log","methDef","prefix","resetLogs","undefined","logData","args","length","type","pop","toUpperCase","indexOf","console"],"mappings":";;AAEA,IAAIA,SAAJ;AACA,IAAIC,QAAQ,GAAG,KAAf;AACA,IAAIC,MAAM,GAAG,MAAb;AACA,MAAMC,SAAS,GAAG,CAAE,OAAF,EAAW,MAAX,EAAmB,KAAnB,EAA0B,KAA1B,EAAiC,MAAjC,CAAlB;MAeaC,OAAO,GAAG,CAACC,GAAD,EAAMC,OAAN,EAAeC,MAAf,KAA0B;AAC/CP,EAAAA,SAAS,GAAGK,GAAZ;AACAJ,EAAAA,QAAQ,GAAGK,OAAO,IAAIL,QAAX,IAAuB,KAAlC;AACAC,EAAAA,MAAM,GAAGK,MAAM,IAAIL,MAAV,IAAoB,MAA7B;AACD;MAUYM,SAAS,GAAG,MAAM;AAC7BR,EAAAA,SAAS,GAAGS,SAAZ;AACAR,EAAAA,QAAQ,GAAG,KAAX;AACAC,EAAAA,MAAM,GAAG,MAAT;AACD;MAWYQ,OAAO,GAAG,CAAC,GAAGC,IAAJ,KAAa;AAClC,MAAI,CAACA,IAAI,CAACC,MAAV,EAAkB;AAElB,MAAIC,IAAI,GAAGF,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoBX,QAApB,GAA+BU,IAAI,CAACG,GAAL,EAA1C;AACA,MAAI,CAACd,SAAD,IAAca,IAAI,KAAK,OAA3B,EAAoC,OAApC,KACK,IAAI,OAAOF,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AACpC,QAAIT,MAAM,KAAK,MAAf,EAAuBS,IAAI,CAAC,CAAD,CAAJ,GAAW,KAAIE,IAAI,CAACE,WAAL,EAAmB,MAAKJ,IAAI,CAAC,CAAD,CAAI,EAA/C,CAAvB,KACK,IAAIT,MAAJ,EAAYS,IAAI,CAAC,CAAD,CAAJ,GAAW,GAAET,MAAO,IAAGS,IAAI,CAAC,CAAD,CAAI,EAA/B;AAClB;AAEDR,EAAAA,SAAS,CAACa,OAAV,CAAkBH,IAAlB,MAA4B,CAAC,CAA7B,GACII,OAAO,CAACJ,IAAD,CAAP,CAAc,GAAGF,IAAjB,CADJ,GAEIM,OAAO,CAAChB,QAAD,CAAP,CAAkB,GAAGU,IAArB,EAA2BE,IAA3B,CAFJ;AAGD;;;;;;"}