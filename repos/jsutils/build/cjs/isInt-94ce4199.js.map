{"version":3,"file":"isInt-94ce4199.js","sources":["../../src/number/isNegative.js","../../src/number/isPositive.js","../../src/number/isFloat.js","../../src/number/isInt.js"],"sourcesContent":["/** @module Number */\n\nimport { isNum } from './isNum'\n\n/**\n * @function\n * @param {*} x\n * @returns { boolean } true if x is a negative number\n * @example isNegative(-1) // true\n * @example isNegative(0) // false\n */\nexport const isNegative = x => isNum(x) && x < 0\n","/** @module Number */\n\nimport { isNum } from './isNum'\n\n/**\n * @function\n * @param {*} x\n * @returns { boolean } true if x is a positive number\n * @example isPositive(0) // false\n * @example isPositive(1) // true\n */\nexport const isPositive = x => isNum(x) && x > 0\n","/** @module Number */\n\nimport { isNum } from './isNum'\n\n/**\n * Checks if a number is a Float.\n * @example\n * isFloat(1.23)\n * // Returns true\n * @example\n * isFloat('1.2')\n * // Returns false ( because it's a string )\n * @function\n * @param {Number} num - value to check\n * @return {Boolean} true or false - value is an Float\n */\nexport const isFloat = val => isNum(val) && val % 1 !== 0\n","/** @module Number */\n\nimport { isNum } from './isNum'\n\n/**\n * Checks if a number is an integer.\n * @example\n * isInt(1)\n * // Returns true\n * @example\n * isInt('1')\n * // Returns false ( because it's a string )\n * @function\n * @param {Number} num - value to check\n * @return {Boolean} true or false - value is an Int\n */\nexport const isInt = val => isNum(val) && val % 1 === 0\n"],"names":["isNegative","x","isNum","isPositive","isFloat","val","isInt"],"mappings":";;;;AAWaA,MAAAA,UAAU,GAAGC,CAAC,IAAIC,WAAK,CAACD,CAAD,CAAL,IAAYA,CAAC,GAAG;;ACAlCE,MAAAA,UAAU,GAAGF,CAAC,IAAIC,WAAK,CAACD,CAAD,CAAL,IAAYA,CAAC,GAAG;;ACKlCG,MAAAA,OAAO,GAAGC,GAAG,IAAIH,WAAK,CAACG,GAAD,CAAL,IAAcA,GAAG,GAAG,CAAN,KAAY;;ACA3CC,MAAAA,KAAK,GAAGD,GAAG,IAAIH,WAAK,CAACG,GAAD,CAAL,IAAcA,GAAG,GAAG,CAAN,KAAY;;;;;;;"}