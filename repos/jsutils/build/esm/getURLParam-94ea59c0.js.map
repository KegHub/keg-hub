{"version":3,"file":"getURLParam-94ea59c0.js","sources":["../../src/url/queryToObj.js","../../src/url/objToQuery.js","../../src/url/getURLParam.js"],"sourcesContent":["/** @module Url */\n\nimport { isArr } from '../array/isArr'\n\n/**\n * takes a raw querystring input and converts it to an object\n * @param {String} string - querystring to parse into an object\n * @function\n * @returns {Object}\n */\nexport const queryToObj = string => {\n  const currentQueryItems = {}\n  const stringSplit = string.split('?')\n  const querystring = stringSplit[stringSplit.length - 1]\n\n  if (!querystring) return currentQueryItems\n\n  const split = querystring.split('&')\n\n  split.length &&\n    split.map(item => {\n      const components = item.split('=')\n      if (components.length <= 1) return currentQueryItems\n\n      // split on the first instance of '=', so we join the rest if any\n      const itemSplit = [ components.shift(), components.join('=') ]\n\n      if (itemSplit.length === 2) {\n        // if the value contains special char ',' then make it into an array\n        const array = decodeURIComponent(itemSplit[1]).split(',')\n        if (array && array.length > 1) currentQueryItems[itemSplit[0]] = array\n        // check if key already exists\n        else if (itemSplit[0] in currentQueryItems) {\n          // convert to array or append to it\n          const val = currentQueryItems[itemSplit[0]]\n          currentQueryItems[itemSplit[0]] = isArr(val)\n            ? val.push(decodeURIComponent(itemSplit[1]))\n            : [ val, decodeURIComponent(itemSplit[1]) ]\n        }\n        else\n          currentQueryItems[itemSplit[0]] = decodeURIComponent(itemSplit[1])\n      }\n    })\n\n  return currentQueryItems\n}\n","/** @module Url */\n\nimport { reduceObj } from '../object/reduceObj'\nimport { isStr } from '../string/isStr'\nimport { isNum } from '../number/isNum'\nimport { isBool } from '../boolean/isBool'\nimport { isColl } from '../collection/isColl'\nimport { isArr } from '../array/isArr'\n\n/**\n * Converts the input object to url querystring\n * @param {Object} obj - object with kvp to convert into a querystring\n * @function\n * @returns {String} querystring\n */\nexport const objToQuery = obj => {\n  let firstSet\n  return reduceObj(\n    obj,\n    (key, value, urlStr) => {\n      if (!value) return urlStr\n\n      const useVal =\n        isStr(value) || isNum(value) || isBool(value)\n          ? value\n          : isColl(value)\n            ? isArr(value)\n              ? value.join(',')\n              : JSON.stringify(value)\n            : null\n\n      if (!useVal) return urlStr\n\n      urlStr = !firstSet\n        ? `?${encodeURIComponent(key)}=${encodeURIComponent(useVal)}`\n        : `${urlStr}&${encodeURIComponent(key)}=${encodeURIComponent(useVal)}`\n      firstSet = true\n\n      return urlStr\n    },\n    ''\n  )\n}\n","/** @module Url */\n\nimport { queryToObj } from './queryToObj'\nimport { validate } from '../validation/validate'\nimport { isStr } from '../string/isStr'\n\n/**\n * Gets the value for the URL parameter, if it's available.\n * Can be safely called on platforms without a global document object,\n * in which case this always returns null.\n * @function\n * @param {String} paramKey - a url param key\n * @return {string?} - value for the url parameter\n * @example\n * for www.test.com/?x=1&y=2\n * getURLParam('x') // 1\n * getURLParam('y') // 2\n */\nexport const getURLParam = paramKey => {\n  const [valid] = validate({ paramKey }, { paramKey: isStr })\n  if (!valid) return null\n\n  const doc = typeof document !== 'undefined' ? document : null\n\n  const search = doc?.location?.search\n\n  return isStr(search) ? queryToObj(search)?.[paramKey] ?? null : null\n}\n"],"names":["queryToObj","string","currentQueryItems","stringSplit","split","querystring","length","map","item","components","itemSplit","shift","join","array","decodeURIComponent","val","isArr","push","objToQuery","obj","firstSet","reduceObj","key","value","urlStr","useVal","isStr","isNum","isBool","isColl","JSON","stringify","encodeURIComponent","getURLParam","paramKey","valid","validate","doc","document","search","location"],"mappings":"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"}