#!/bin/bash

# TODO: **IMPORTANT** Need to set this path dyamically some how
# Need to `source ~/keg/cli/keg` add to .bashrc or .bash_profile
export KEG_CLI_PATH=~/keg/cli
KEG_DOCKER_NAME=docker-keg

keg_message(){
  echo "[ KEG CLI ] $@" >&2
  return
}

# TODO: **IMPORTANT** Add check for if on mac, and run these docker-machine commands
# Save as the $KEG_DOCKER_NAME environment
# docker-machine env $KEG_DOCKER_NAME
# Execute the $KEG_DOCKER_NAME environment in place for the active terminal
# eval "$(docker-machine env $KEG_DOCKER_NAME)"

keg_cli_init_docker_machine(){
  if [[ -x "$(command -v VBoxManage)" ]]; then
    keg_message "Loading docker-machine $KEG_DOCKER_NAME env!"
    docker-machine env $KEG_DOCKER_NAME
    eval "$(docker-machine env $KEG_DOCKER_NAME)"
  else
    keg_message "Error loading 'docker-machine' env. VBoxManage not installed!"
  fi
}

keg_cli_move_directory(){

  local CMD_OUTPUT

  # If no arguments, then $KEG_DOCKER_NAME to keg path
  if [[ "$#" == "0" ]]; then
    CMD_OUTPUT="$(node $KEG_CLI_PATH/scripts/cli/getConfigPath.js keg)"
  else
    CMD_OUTPUT="$(node $KEG_CLI_PATH/scripts/cli/getConfigPath.js $@)"
  fi

  # Convert the ouput to an array
  IFS=$'\n'
  local OUTPUT_ARR=($CMD_OUTPUT)
  unset IFS

  # Get the second line containing the path to move to
  local MOVE_TO_PATH="${OUTPUT_ARR[1]}"

  if [[ "$MOVE_TO_PATH" ]]; then
    echo "${OUTPUT_ARR[0]}"
    cd $MOVE_TO_PATH
    echo ""
    return 0
  fi

  return 1
}

# Opening to the keg cli
# For navigation commands, calls keg_cli_move_directory
# All other commands call keg-cli node script
keg(){

  # Check if reloading the bash portion of the keg cli
  if [[ "$1" == "reload" || "$1" == "rl" || "$1" == "src" ]]; then

    # Reload this bash script
    keg_message "Reloading Keg CLI..."
    source $KEG_CLI_PATH/keg
    return

  # Run the keg-cli bash script
  elif [[ "$1" == "cli-setup" ]]; then
    cd 
    bash $KEG_CLI_PATH/scripts/setup/setup.sh "${@:2}"
    return

  # Ensure docker machine is loaded
  elif [[ "$1" == "docker_machine" || "$1" == "docm"  || "$1" == "dcm" ]]; then
    keg_cli_init_docker_machine
    return

  # Check if this is a move directory command
  elif [[ "$#" == "0" || "$#" == "1" ]]; then

    # # Check if this is a change dir command
    keg_cli_move_directory $@
    # Get the return code from the move dir command
    local KEG_MOVE_DIR=$?

    # If 0 is returned, then we changed dirs, so check and exit
    if [[ "$KEG_MOVE_DIR" == 0 ]]; then
      return 0
    fi
  fi

  # All other commands get passed on to the node keg-cli script
  node $KEG_CLI_PATH/keg-cli $@

}